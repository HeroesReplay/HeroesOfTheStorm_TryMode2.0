include "TriggerLibs/NativeLib"

//--------------------------------------------------------------------------------------------------
// Library: Units
//--------------------------------------------------------------------------------------------------
// Validating: templates

// Variable Declarations
int libUNIT_gv_noWeaponCDPlayer;
bool libUNIT_gv_isNoWeaponCDEnabled;
bool libUNIT_gv_toggleOutputIDEnabled;

// Trigger Declarations
trigger libUNIT_gt_MapInit;
trigger libUNIT_gt_AddEffectstoCamera;
trigger libUNIT_gt_RemoveEffectsfromCamera;
trigger libUNIT_gt_AddEffects;
trigger libUNIT_gt_RemoveEffect;
trigger libUNIT_gt_AddWeapon;
trigger libUNIT_gt_RemoveWeapon;
trigger libUNIT_gt_ToggleNoWeaponCD;
trigger libUNIT_gt_RunNoWeaponCD;
trigger libUNIT_gt_ChangeUnitOwnership;
trigger libUNIT_gt_GetUnitOwnership;
trigger libUNIT_gt_SendActorMessage;
trigger libUNIT_gt_PlayAnimation;
trigger libUNIT_gt_RemoveAnimation;
trigger libUNIT_gt_AddBehavior;
trigger libUNIT_gt_RemoveBehavior;
trigger libUNIT_gt_CountBehavior;
trigger libUNIT_gt_GetBehaviors;
trigger libUNIT_gt_ClearBehaviors;
trigger libUNIT_gt_ModifyUnitProperty;
trigger libUNIT_gt_RunOutputUnitID;
trigger libUNIT_gt_ToggleOutputID;
trigger libUNIT_gt_KillUnits;
trigger libUNIT_gt_SummonUnit;

// Library Initialization
void libUNIT_InitVariables ();

//--------------------------------------------------------------------------------------------------
// Library: Units
//--------------------------------------------------------------------------------------------------
// Validating: templates

// External Library Initialization
void libUNIT_InitLibraries () {
    libNtve_InitVariables();
}

// Variable Initialization
bool libUNIT_InitVariables_completed = false;

void libUNIT_InitVariables () {
    if (libUNIT_InitVariables_completed) {
        return;
    }

    libUNIT_InitVariables_completed = true;

}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: MapInit
//--------------------------------------------------------------------------------------------------
bool libUNIT_gt_MapInit_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Unit Lib Initialized"));
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUNIT_gt_MapInit_Init () {
    libUNIT_gt_MapInit = TriggerCreate("libUNIT_gt_MapInit_Func");
    TriggerAddEventMapInit(libUNIT_gt_MapInit);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Add Effects to Camera
//--------------------------------------------------------------------------------------------------
bool libUNIT_gt_AddEffectstoCamera_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((StringWord(EventChatMessage(false), 1) == "adec") || (StringWord(EventChatMessage(false), 1) == "addeffectcamera")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((StringWord(EventChatMessage(false), 2) == null)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Usage: <adec|addeffectcamera> <EffectName>"));
    }
    else {
        PlayerCreateEffectPoint(EventPlayer(), (StringWord(EventChatMessage(false), 2)), CameraGetTarget(EventPlayer()));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText(("Added Effect \"" + (StringWord(EventChatMessage(false), 2) + ("\" on camera location  " + libNtve_gf_ConvertPointToString(CameraGetTarget(EventPlayer())))))));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUNIT_gt_AddEffectstoCamera_Init () {
    libUNIT_gt_AddEffectstoCamera = TriggerCreate("libUNIT_gt_AddEffectstoCamera_Func");
    TriggerAddEventChatMessage(libUNIT_gt_AddEffectstoCamera, c_playerAny, "adec", false);
    TriggerAddEventChatMessage(libUNIT_gt_AddEffectstoCamera, c_playerAny, "addeffectcamera", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Remove Effects from Camera
//--------------------------------------------------------------------------------------------------
bool libUNIT_gt_RemoveEffectsfromCamera_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((StringWord(EventChatMessage(false), 1) == "rmec") || (StringWord(EventChatMessage(false), 1) == "removeeffectcamera")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((StringWord(EventChatMessage(false), 2) == null)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Usage: <rmec|removeeffectcamera> <EffectName>"));
    }
    else {
        GameDestroyEffects(CameraGetTarget(EventPlayer()), 1.0, 0, null);
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText(("Removed Effect \"" + (StringWord(EventChatMessage(false), 2) + ("\" from camera location  " + libNtve_gf_ConvertPointToString(CameraGetTarget(EventPlayer())))))));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUNIT_gt_RemoveEffectsfromCamera_Init () {
    libUNIT_gt_RemoveEffectsfromCamera = TriggerCreate("libUNIT_gt_RemoveEffectsfromCamera_Func");
    TriggerAddEventChatMessage(libUNIT_gt_RemoveEffectsfromCamera, c_playerAny, "rmec", false);
    TriggerAddEventChatMessage(libUNIT_gt_RemoveEffectsfromCamera, c_playerAny, "removeeffectcamera", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Add Effects
//--------------------------------------------------------------------------------------------------
bool libUNIT_gt_AddEffects_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_i;
    int lv_count;
    string lv_unittype;
    unit lv_currentUnit;

    // Automatic Variable Declarations
    unitgroup auto25375630_g;
    int auto25375630_u;
    int auto82B5A334_ae;
    const int auto82B5A334_ai = 1;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((StringWord(EventChatMessage(false), 1) == "ade") || (StringWord(EventChatMessage(false), 1) == "addeffect")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((StringWord(EventChatMessage(false), 2) == null)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Usage: <ade|addeffect> <EffectName> [amount]"));
    }
    else {
        lv_count = StringToInt(StringWord(EventChatMessage(false), 3));
        if ((lv_count == 0)) {
            lv_count = 1;
        }

        auto25375630_g = UnitGroupSelected(EventPlayer());
        auto25375630_u = UnitGroupCount(auto25375630_g, c_unitCountAll);
        for (;; auto25375630_u -= 1) {
            lv_currentUnit = UnitGroupUnitFromEnd(auto25375630_g, auto25375630_u);
            if (lv_currentUnit == null) { break; }
            auto82B5A334_ae = lv_count;
            lv_i = 0;
            for ( ; ( (auto82B5A334_ai >= 0 && lv_i <= auto82B5A334_ae) || (auto82B5A334_ai < 0 && lv_i >= auto82B5A334_ae) ) ; lv_i += auto82B5A334_ai ) {
                lv_unittype = UnitGetType(lv_currentUnit);
                UnitCreateEffectUnit(lv_currentUnit, (StringWord(EventChatMessage(false), 2)), lv_currentUnit);
            }
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText((("Added " + (IntToString(lv_count) + " Effects \"")) + (StringWord(EventChatMessage(false), 2) + ("\" to " + (lv_unittype))))));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUNIT_gt_AddEffects_Init () {
    libUNIT_gt_AddEffects = TriggerCreate("libUNIT_gt_AddEffects_Func");
    TriggerAddEventChatMessage(libUNIT_gt_AddEffects, c_playerAny, "ade", false);
    TriggerAddEventChatMessage(libUNIT_gt_AddEffects, c_playerAny, "addeffect", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Remove Effect
//--------------------------------------------------------------------------------------------------
bool libUNIT_gt_RemoveEffect_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_unittype;
    unit lv_currentUnit;

    // Automatic Variable Declarations
    unitgroup autoCC1E0A15_g;
    int autoCC1E0A15_u;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((StringWord(EventChatMessage(false), 1) == "rme") || (StringWord(EventChatMessage(false), 1) == "removeeffect")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((StringWord(EventChatMessage(false), 2) == null)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Usage: <rme|removeeffect> <EffectName>"));
    }
    else {
        autoCC1E0A15_g = UnitGroupSelected(EventPlayer());
        autoCC1E0A15_u = UnitGroupCount(autoCC1E0A15_g, c_unitCountAll);
        for (;; autoCC1E0A15_u -= 1) {
            lv_currentUnit = UnitGroupUnitFromEnd(autoCC1E0A15_g, autoCC1E0A15_u);
            if (lv_currentUnit == null) { break; }
            lv_unittype = UnitGetType(lv_currentUnit);
            GameDestroyEffects(UnitGetPosition(lv_currentUnit), 1.0, 0, (StringWord(EventChatMessage(false), 2)));
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText(("Removed Effect \"" + (StringWord(EventChatMessage(false), 2) + ("\" from " + (lv_unittype))))));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUNIT_gt_RemoveEffect_Init () {
    libUNIT_gt_RemoveEffect = TriggerCreate("libUNIT_gt_RemoveEffect_Func");
    TriggerAddEventChatMessage(libUNIT_gt_RemoveEffect, c_playerAny, "rme", false);
    TriggerAddEventChatMessage(libUNIT_gt_RemoveEffect, c_playerAny, "removeeffect", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Add Weapon
//--------------------------------------------------------------------------------------------------
bool libUNIT_gt_AddWeapon_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_unittype;
    unit lv_currentUnit;

    // Automatic Variable Declarations
    unitgroup auto5A99CB48_g;
    int auto5A99CB48_u;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((StringWord(EventChatMessage(false), 1) == "adw") || (StringWord(EventChatMessage(false), 1) == "addweapon")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((StringWord(EventChatMessage(false), 2) == null)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Usage: <adw|addweapon> <WeaponName>"));
    }
    else {
        auto5A99CB48_g = UnitGroupSelected(EventPlayer());
        auto5A99CB48_u = UnitGroupCount(auto5A99CB48_g, c_unitCountAll);
        for (;; auto5A99CB48_u -= 1) {
            lv_currentUnit = UnitGroupUnitFromEnd(auto5A99CB48_g, auto5A99CB48_u);
            if (lv_currentUnit == null) { break; }
            UnitWeaponAdd(lv_currentUnit, (StringWord(EventChatMessage(false), 2)), null);
            lv_unittype = UnitGetType(lv_currentUnit);
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText(("Added Weapon \"" + (StringWord(EventChatMessage(false), 2) + ("\" to " + (lv_unittype))))));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUNIT_gt_AddWeapon_Init () {
    libUNIT_gt_AddWeapon = TriggerCreate("libUNIT_gt_AddWeapon_Func");
    TriggerAddEventChatMessage(libUNIT_gt_AddWeapon, c_playerAny, "adw", false);
    TriggerAddEventChatMessage(libUNIT_gt_AddWeapon, c_playerAny, "addweapon", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Remove Weapon
//--------------------------------------------------------------------------------------------------
bool libUNIT_gt_RemoveWeapon_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_unittype;
    unit lv_currentUnit;

    // Automatic Variable Declarations
    unitgroup auto34C1F59F_g;
    int auto34C1F59F_u;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((StringWord(EventChatMessage(false), 1) == "rmw") || (StringWord(EventChatMessage(false), 1) == "removeweapon")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((StringWord(EventChatMessage(false), 2) == null)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Usage: <rmw|removeweapon> <WeaponName>"));
    }
    else {
        auto34C1F59F_g = UnitGroupSelected(EventPlayer());
        auto34C1F59F_u = UnitGroupCount(auto34C1F59F_g, c_unitCountAll);
        for (;; auto34C1F59F_u -= 1) {
            lv_currentUnit = UnitGroupUnitFromEnd(auto34C1F59F_g, auto34C1F59F_u);
            if (lv_currentUnit == null) { break; }
            UnitWeaponRemove(lv_currentUnit, (StringWord(EventChatMessage(false), 2)));
            lv_unittype = UnitGetType(lv_currentUnit);
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText(("Removed Weapon \"" + (StringWord(EventChatMessage(false), 2) + ("\" from " + (lv_unittype))))));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUNIT_gt_RemoveWeapon_Init () {
    libUNIT_gt_RemoveWeapon = TriggerCreate("libUNIT_gt_RemoveWeapon_Func");
    TriggerAddEventChatMessage(libUNIT_gt_RemoveWeapon, c_playerAny, "rmw", false);
    TriggerAddEventChatMessage(libUNIT_gt_RemoveWeapon, c_playerAny, "removeweapon", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Toggle No Weapon CD
//--------------------------------------------------------------------------------------------------
bool libUNIT_gt_ToggleNoWeaponCD_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libUNIT_gv_isNoWeaponCDEnabled = !(libUNIT_gv_isNoWeaponCDEnabled);
    libUNIT_gv_noWeaponCDPlayer = EventPlayer();
    if ((libUNIT_gv_isNoWeaponCDEnabled == true)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("No Weapon CD Enabled"));
    }
    else {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("No Weapon CD Disabled"));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUNIT_gt_ToggleNoWeaponCD_Init () {
    libUNIT_gt_ToggleNoWeaponCD = TriggerCreate("libUNIT_gt_ToggleNoWeaponCD_Func");
    TriggerAddEventChatMessage(libUNIT_gt_ToggleNoWeaponCD, c_playerAny, "togglenoweaponcd", true);
    TriggerAddEventChatMessage(libUNIT_gt_ToggleNoWeaponCD, c_playerAny, "tnwcd", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Run No Weapon CD
//--------------------------------------------------------------------------------------------------
bool libUNIT_gt_RunNoWeaponCD_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_i;
    string lv_unittype;
    unit lv_currentUnit;

    // Automatic Variable Declarations
    unitgroup auto7DDCF65F_g;
    int auto7DDCF65F_u;
    const int auto62EEB2CE_ae = 10;
    const int auto62EEB2CE_ai = 1;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((libUNIT_gv_isNoWeaponCDEnabled == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto7DDCF65F_g = UnitGroupSelected(libUNIT_gv_noWeaponCDPlayer);
    auto7DDCF65F_u = UnitGroupCount(auto7DDCF65F_g, c_unitCountAll);
    for (;; auto7DDCF65F_u -= 1) {
        lv_currentUnit = UnitGroupUnitFromEnd(auto7DDCF65F_g, auto7DDCF65F_u);
        if (lv_currentUnit == null) { break; }
        lv_unittype = UnitGetType(lv_currentUnit);
        lv_i = 1;
        for ( ; ( (auto62EEB2CE_ai >= 0 && lv_i <= auto62EEB2CE_ae) || (auto62EEB2CE_ai < 0 && lv_i >= auto62EEB2CE_ae) ) ; lv_i += auto62EEB2CE_ai ) {
            UnitWeaponSetPeriodRemaining(lv_currentUnit, lv_i, 0.0);
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUNIT_gt_RunNoWeaponCD_Init () {
    libUNIT_gt_RunNoWeaponCD = TriggerCreate("libUNIT_gt_RunNoWeaponCD_Func");
    TriggerAddEventTimePeriodic(libUNIT_gt_RunNoWeaponCD, 0.0625, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Change Unit Ownership
//--------------------------------------------------------------------------------------------------
bool libUNIT_gt_ChangeUnitOwnership_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_unittype;
    unit lv_currentUnit;

    // Automatic Variable Declarations
    unitgroup autoCA7C7E78_g;
    int autoCA7C7E78_u;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((StringWord(EventChatMessage(false), 1) == "cuo") || (StringWord(EventChatMessage(false), 1) == "changeunitownership")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((StringWord(EventChatMessage(false), 2) == null)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Usage: <cuo|changeunitownership> <Player>"));
    }
    else {
        autoCA7C7E78_g = UnitGroupSelected(EventPlayer());
        autoCA7C7E78_u = UnitGroupCount(autoCA7C7E78_g, c_unitCountAll);
        for (;; autoCA7C7E78_u -= 1) {
            lv_currentUnit = UnitGroupUnitFromEnd(autoCA7C7E78_g, autoCA7C7E78_u);
            if (lv_currentUnit == null) { break; }
            lv_unittype = UnitGetType(lv_currentUnit);
            UnitSetOwner(lv_currentUnit, StringToInt(StringWord(EventChatMessage(false), 2)), true);
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText((("Converted Unit " + (lv_unittype)) + ("'s Ownership to Player " + StringWord(EventChatMessage(false), 2)))));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUNIT_gt_ChangeUnitOwnership_Init () {
    libUNIT_gt_ChangeUnitOwnership = TriggerCreate("libUNIT_gt_ChangeUnitOwnership_Func");
    TriggerAddEventChatMessage(libUNIT_gt_ChangeUnitOwnership, c_playerAny, "cuo", false);
    TriggerAddEventChatMessage(libUNIT_gt_ChangeUnitOwnership, c_playerAny, "changeunitownership", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Get Unit Ownership
//--------------------------------------------------------------------------------------------------
bool libUNIT_gt_GetUnitOwnership_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_unittype;
    unit lv_currentUnit;

    // Automatic Variable Declarations
    unitgroup autoAB218B34_g;
    int autoAB218B34_u;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    autoAB218B34_g = UnitGroupSelected(EventPlayer());
    autoAB218B34_u = UnitGroupCount(autoAB218B34_g, c_unitCountAll);
    for (;; autoAB218B34_u -= 1) {
        lv_currentUnit = UnitGroupUnitFromEnd(autoAB218B34_g, autoAB218B34_u);
        if (lv_currentUnit == null) { break; }
        lv_unittype = UnitGetType(lv_currentUnit);
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText(((lv_unittype) + ("'s owner is Player " + IntToString(UnitGetOwner(lv_currentUnit))))));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUNIT_gt_GetUnitOwnership_Init () {
    libUNIT_gt_GetUnitOwnership = TriggerCreate("libUNIT_gt_GetUnitOwnership_Func");
    TriggerAddEventChatMessage(libUNIT_gt_GetUnitOwnership, c_playerAny, "guo", true);
    TriggerAddEventChatMessage(libUNIT_gt_GetUnitOwnership, c_playerAny, "getunitownership", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Send Actor Message
//--------------------------------------------------------------------------------------------------
bool libUNIT_gt_SendActorMessage_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_i;
    string lv_actorMessage;
    string lv_unittype;
    unit lv_currentUnit;

    // Automatic Variable Declarations
    const int auto5C487D67_ae = 20;
    const int auto5C487D67_ai = 1;
    unitgroup auto7137D06A_g;
    int auto7137D06A_u;

    // Variable Initialization
    lv_actorMessage = "";

    // Conditions
    if (testConds) {
        if (!(((StringWord(EventChatMessage(false), 1) == "sam") || (StringWord(EventChatMessage(false), 1) == "sendactormessage")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((StringWord(EventChatMessage(false), 2) == null)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Usage: <sam|sendactormessage> <ActorMessage (include space)>"));
    }
    else {
        lv_actorMessage = StringWord(EventChatMessage(false), 2);
        lv_i = 3;
        for ( ; ( (auto5C487D67_ai >= 0 && lv_i <= auto5C487D67_ae) || (auto5C487D67_ai < 0 && lv_i >= auto5C487D67_ae) ) ; lv_i += auto5C487D67_ai ) {
            if ((StringWord(EventChatMessage(false), lv_i) != null)) {
                lv_actorMessage = ((lv_actorMessage + " ") + StringWord(EventChatMessage(false), lv_i));
            }

        }
        auto7137D06A_g = UnitGroupSelected(EventPlayer());
        auto7137D06A_u = UnitGroupCount(auto7137D06A_g, c_unitCountAll);
        for (;; auto7137D06A_u -= 1) {
            lv_currentUnit = UnitGroupUnitFromEnd(auto7137D06A_g, auto7137D06A_u);
            if (lv_currentUnit == null) { break; }
            lv_unittype = UnitGetType(lv_currentUnit);
            libNtve_gf_SendActorMessageToUnit(lv_currentUnit, (lv_actorMessage));
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText(("Sent Actor Message \"" + (lv_actorMessage + ("\" to " + (lv_unittype))))));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUNIT_gt_SendActorMessage_Init () {
    libUNIT_gt_SendActorMessage = TriggerCreate("libUNIT_gt_SendActorMessage_Func");
    TriggerAddEventChatMessage(libUNIT_gt_SendActorMessage, c_playerAny, "sam", false);
    TriggerAddEventChatMessage(libUNIT_gt_SendActorMessage, c_playerAny, "sendactormessage", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Play Animation
//--------------------------------------------------------------------------------------------------
bool libUNIT_gt_PlayAnimation_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_animation;
    string lv_unittype;
    unit lv_currentUnit;

    // Automatic Variable Declarations
    unitgroup auto29C02920_g;
    int auto29C02920_u;

    // Variable Initialization
    lv_animation = "Stand";

    // Conditions
    if (testConds) {
        if (!(((StringWord(EventChatMessage(false), 1) == "pa") || (StringWord(EventChatMessage(false), 1) == "playanimation")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((StringWord(EventChatMessage(false), 2) == null)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Usage: <pa|playanimation> <AnimationName>"));
    }
    else {
        lv_animation = StringWord(EventChatMessage(false), 2);
        auto29C02920_g = UnitGroupSelected(EventPlayer());
        auto29C02920_u = UnitGroupCount(auto29C02920_g, c_unitCountAll);
        for (;; auto29C02920_u -= 1) {
            lv_currentUnit = UnitGroupUnitFromEnd(auto29C02920_g, auto29C02920_u);
            if (lv_currentUnit == null) { break; }
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(lv_currentUnit), c_animNameDefault, lv_animation, 0, c_animTimeDefault);
            lv_unittype = UnitGetType(lv_currentUnit);
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText(("Played Animation \"" + (StringWord(EventChatMessage(false), 2) + ("\" to " + (lv_unittype))))));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUNIT_gt_PlayAnimation_Init () {
    libUNIT_gt_PlayAnimation = TriggerCreate("libUNIT_gt_PlayAnimation_Func");
    TriggerAddEventChatMessage(libUNIT_gt_PlayAnimation, c_playerAny, "pa", false);
    TriggerAddEventChatMessage(libUNIT_gt_PlayAnimation, c_playerAny, "playanimation", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Remove Animation
//--------------------------------------------------------------------------------------------------
bool libUNIT_gt_RemoveAnimation_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_unittype;
    unit lv_currentUnit;

    // Automatic Variable Declarations
    unitgroup auto77E10E7C_g;
    int auto77E10E7C_u;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((StringWord(EventChatMessage(false), 1) == "rma") || (StringWord(EventChatMessage(false), 1) == "removeanimation")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((StringWord(EventChatMessage(false), 2) == null)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Usage: <rma|removeanimation> <AnimationName>"));
    }
    else {
        auto77E10E7C_g = UnitGroupSelected(EventPlayer());
        auto77E10E7C_u = UnitGroupCount(auto77E10E7C_g, c_unitCountAll);
        for (;; auto77E10E7C_u -= 1) {
            lv_currentUnit = UnitGroupUnitFromEnd(auto77E10E7C_g, auto77E10E7C_u);
            if (lv_currentUnit == null) { break; }
            libNtve_gf_ClearAnimation(libNtve_gf_MainActorofUnit(lv_currentUnit), StringWord(EventChatMessage(false), 2));
            lv_unittype = UnitGetType(lv_currentUnit);
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText(("Removed Animation \"" + (StringWord(EventChatMessage(false), 2) + ("\" from " + (lv_unittype))))));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUNIT_gt_RemoveAnimation_Init () {
    libUNIT_gt_RemoveAnimation = TriggerCreate("libUNIT_gt_RemoveAnimation_Func");
    TriggerAddEventChatMessage(libUNIT_gt_RemoveAnimation, c_playerAny, "rma", false);
    TriggerAddEventChatMessage(libUNIT_gt_RemoveAnimation, c_playerAny, "removeanimation", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Add Behavior
//--------------------------------------------------------------------------------------------------
bool libUNIT_gt_AddBehavior_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_unittype;
    unit lv_currentUnit;

    // Automatic Variable Declarations
    unitgroup auto8FFBEB1E_g;
    int auto8FFBEB1E_u;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((StringWord(EventChatMessage(false), 1) == "adb") || (StringWord(EventChatMessage(false), 1) == "addbehavior")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((StringWord(EventChatMessage(false), 2) == null)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Usage: <adb|addbehavior> <BehaviorName>"));
    }
    else {
        auto8FFBEB1E_g = UnitGroupSelected(EventPlayer());
        auto8FFBEB1E_u = UnitGroupCount(auto8FFBEB1E_g, c_unitCountAll);
        for (;; auto8FFBEB1E_u -= 1) {
            lv_currentUnit = UnitGroupUnitFromEnd(auto8FFBEB1E_g, auto8FFBEB1E_u);
            if (lv_currentUnit == null) { break; }
            lv_unittype = UnitGetType(lv_currentUnit);
            UnitBehaviorAdd(lv_currentUnit, (StringWord(EventChatMessage(false), 2)), lv_currentUnit, 1);
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText(("Added Behavior \"" + (StringWord(EventChatMessage(false), 2) + ("\" to " + (lv_unittype))))));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUNIT_gt_AddBehavior_Init () {
    libUNIT_gt_AddBehavior = TriggerCreate("libUNIT_gt_AddBehavior_Func");
    TriggerAddEventChatMessage(libUNIT_gt_AddBehavior, c_playerAny, "adb", false);
    TriggerAddEventChatMessage(libUNIT_gt_AddBehavior, c_playerAny, "addbehavior", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Remove Behavior
//--------------------------------------------------------------------------------------------------
bool libUNIT_gt_RemoveBehavior_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_unittype;
    unit lv_currentUnit;

    // Automatic Variable Declarations
    unitgroup autoA22B81BF_g;
    int autoA22B81BF_u;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((StringWord(EventChatMessage(false), 1) == "rmb") || (StringWord(EventChatMessage(false), 1) == "removebehavior")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((StringWord(EventChatMessage(false), 2) == null)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Usage: <rmb|removebehavior> <BehaviorName>"));
    }
    else {
        autoA22B81BF_g = UnitGroupSelected(EventPlayer());
        autoA22B81BF_u = UnitGroupCount(autoA22B81BF_g, c_unitCountAll);
        for (;; autoA22B81BF_u -= 1) {
            lv_currentUnit = UnitGroupUnitFromEnd(autoA22B81BF_g, autoA22B81BF_u);
            if (lv_currentUnit == null) { break; }
            lv_unittype = UnitGetType(lv_currentUnit);
            UnitBehaviorRemove(lv_currentUnit, (StringWord(EventChatMessage(false), 2)), 1);
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText(("Removed Behavior \"" + (StringWord(EventChatMessage(false), 2) + ("\" from " + (lv_unittype))))));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUNIT_gt_RemoveBehavior_Init () {
    libUNIT_gt_RemoveBehavior = TriggerCreate("libUNIT_gt_RemoveBehavior_Func");
    TriggerAddEventChatMessage(libUNIT_gt_RemoveBehavior, c_playerAny, "rmb", false);
    TriggerAddEventChatMessage(libUNIT_gt_RemoveBehavior, c_playerAny, "removebehavior", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Count Behavior
//--------------------------------------------------------------------------------------------------
bool libUNIT_gt_CountBehavior_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_behaviorCounter;
    string lv_unittype;
    unit lv_currentUnit;

    // Automatic Variable Declarations
    unitgroup auto08F3678D_g;
    int auto08F3678D_u;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((StringWord(EventChatMessage(false), 1) == "ctb") || (StringWord(EventChatMessage(false), 1) == "countbehavior")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((StringWord(EventChatMessage(false), 2) == null)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Usage: <ctb|countbehavior> <BehaviorName>"));
    }
    else {
        auto08F3678D_g = UnitGroupSelected(EventPlayer());
        auto08F3678D_u = UnitGroupCount(auto08F3678D_g, c_unitCountAll);
        for (;; auto08F3678D_u -= 1) {
            lv_currentUnit = UnitGroupUnitFromEnd(auto08F3678D_g, auto08F3678D_u);
            if (lv_currentUnit == null) { break; }
            lv_behaviorCounter = UnitBehaviorCount(lv_currentUnit, (StringWord(EventChatMessage(false), 2)));
            lv_unittype = UnitGetType(lv_currentUnit);
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringToText(((lv_unittype) + (": " + (StringWord(EventChatMessage(false), 2) + (" -> " + IntToString(lv_behaviorCounter)))))));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUNIT_gt_CountBehavior_Init () {
    libUNIT_gt_CountBehavior = TriggerCreate("libUNIT_gt_CountBehavior_Func");
    TriggerAddEventChatMessage(libUNIT_gt_CountBehavior, c_playerAny, "ctb", false);
    TriggerAddEventChatMessage(libUNIT_gt_CountBehavior, c_playerAny, "countbehavior", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Get Behaviors
//--------------------------------------------------------------------------------------------------
bool libUNIT_gt_GetBehaviors_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_currentUnitBehavior;
    string lv_unittype;
    unit lv_currentUnit;

    // Automatic Variable Declarations
    unitgroup auto91CCF080_g;
    int auto91CCF080_u;
    unit auto5EE0852D_u;
    int auto5EE0852D_i;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    auto91CCF080_g = UnitGroupSelected(EventPlayer());
    auto91CCF080_u = UnitGroupCount(auto91CCF080_g, c_unitCountAll);
    for (;; auto91CCF080_u -= 1) {
        lv_currentUnit = UnitGroupUnitFromEnd(auto91CCF080_g, auto91CCF080_u);
        if (lv_currentUnit == null) { break; }
        lv_unittype = UnitGetType(lv_currentUnit);
        auto5EE0852D_u = lv_currentUnit;
        auto5EE0852D_i = 1;
        for ( ; auto5EE0852D_i <= UnitBehaviorCountAll(auto5EE0852D_u) ; auto5EE0852D_i += BoolToInt(lv_currentUnitBehavior == UnitBehaviorGet(auto5EE0852D_u, auto5EE0852D_i)) ) {
            lv_currentUnitBehavior = UnitBehaviorGet(auto5EE0852D_u, auto5EE0852D_i);
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringToText(((lv_unittype) + (": " + (lv_currentUnitBehavior)))));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUNIT_gt_GetBehaviors_Init () {
    libUNIT_gt_GetBehaviors = TriggerCreate("libUNIT_gt_GetBehaviors_Func");
    TriggerAddEventChatMessage(libUNIT_gt_GetBehaviors, c_playerAny, "getb", true);
    TriggerAddEventChatMessage(libUNIT_gt_GetBehaviors, c_playerAny, "getbehavior", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Clear Behaviors
//--------------------------------------------------------------------------------------------------
bool libUNIT_gt_ClearBehaviors_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_currentUnitBehavior;
    string lv_unittype;
    unit lv_currentUnit;

    // Automatic Variable Declarations
    unitgroup autoE4CE23AD_g;
    int autoE4CE23AD_u;
    unit auto16DB2D15_u;
    int auto16DB2D15_i;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    autoE4CE23AD_g = UnitGroupSelected(EventPlayer());
    autoE4CE23AD_u = UnitGroupCount(autoE4CE23AD_g, c_unitCountAll);
    for (;; autoE4CE23AD_u -= 1) {
        lv_currentUnit = UnitGroupUnitFromEnd(autoE4CE23AD_g, autoE4CE23AD_u);
        if (lv_currentUnit == null) { break; }
        lv_unittype = UnitGetType(lv_currentUnit);
        auto16DB2D15_u = lv_currentUnit;
        auto16DB2D15_i = 1;
        for ( ; auto16DB2D15_i <= UnitBehaviorCountAll(auto16DB2D15_u) ; auto16DB2D15_i += BoolToInt(lv_currentUnitBehavior == UnitBehaviorGet(auto16DB2D15_u, auto16DB2D15_i)) ) {
            lv_currentUnitBehavior = UnitBehaviorGet(auto16DB2D15_u, auto16DB2D15_i);
            UnitBehaviorRemove(lv_currentUnit, lv_currentUnitBehavior, 65535);
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText(("Removed behavior \"" + ((lv_currentUnitBehavior) + ("\" from unit \"" + ((lv_unittype) + "\"."))))));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUNIT_gt_ClearBehaviors_Init () {
    libUNIT_gt_ClearBehaviors = TriggerCreate("libUNIT_gt_ClearBehaviors_Func");
    TriggerAddEventChatMessage(libUNIT_gt_ClearBehaviors, c_playerAny, "clb", true);
    TriggerAddEventChatMessage(libUNIT_gt_ClearBehaviors, c_playerAny, "clearbehavior", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Modify Unit Property
//--------------------------------------------------------------------------------------------------
bool libUNIT_gt_ModifyUnitProperty_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_unittype;
    fixed lv_value;
    int lv_type;
    int lv_i;

    // Automatic Variable Declarations
    int auto5C02B8F9_ae;
    const int auto5C02B8F9_ai = 1;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((StringWord(EventChatMessage(false), 1) == "up") || (StringWord(EventChatMessage(false), 1) == "unitproperty")))) {
            return false;
        }

        if (!(((StringWord(EventChatMessage(false), 2) != null) && (StringWord(EventChatMessage(false), 3) != null)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_value = StringToFixed(StringWord(EventChatMessage(false), 3));
    lv_type = StringToInt(StringWord(EventChatMessage(false), 2));
    auto5C02B8F9_ae = UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive);
    lv_i = 1;
    for ( ; ( (auto5C02B8F9_ai >= 0 && lv_i <= auto5C02B8F9_ae) || (auto5C02B8F9_ai < 0 && lv_i >= auto5C02B8F9_ae) ) ; lv_i += auto5C02B8F9_ai ) {
        lv_unittype = UnitGetType(UnitGroupUnit(UnitGroupSelected(1), lv_i));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, (StringToText((lv_unittype)) + StringToText(": Changed Property")));
        UnitSetPropertyFixed(UnitGroupUnit(UnitGroupSelected(EventPlayer()), lv_i), lv_type, lv_value);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUNIT_gt_ModifyUnitProperty_Init () {
    libUNIT_gt_ModifyUnitProperty = TriggerCreate("libUNIT_gt_ModifyUnitProperty_Func");
    TriggerAddEventChatMessage(libUNIT_gt_ModifyUnitProperty, c_playerAny, "up", false);
    TriggerAddEventChatMessage(libUNIT_gt_ModifyUnitProperty, c_playerAny, "unitproperty", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Run Output Unit ID
//--------------------------------------------------------------------------------------------------
bool libUNIT_gt_RunOutputUnitID_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_unittype;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_unittype = UnitGetType(EventUnit());
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText(("Clicked Unit ID: " + (lv_unittype))));
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUNIT_gt_RunOutputUnitID_Init () {
    libUNIT_gt_RunOutputUnitID = TriggerCreate("libUNIT_gt_RunOutputUnitID_Func");
    TriggerEnable(libUNIT_gt_RunOutputUnitID, false);
    TriggerAddEventUnitClick(libUNIT_gt_RunOutputUnitID, null, c_playerAny);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Toggle Output ID
//--------------------------------------------------------------------------------------------------
bool libUNIT_gt_ToggleOutputID_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libUNIT_gv_toggleOutputIDEnabled = !(libUNIT_gv_toggleOutputIDEnabled);
    if ((libUNIT_gv_toggleOutputIDEnabled == true)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Toggle Output ID Enabled: Click on a unit to see their Unit ID"));
        TriggerEnable(libUNIT_gt_RunOutputUnitID, true);
    }
    else {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Toggle Output ID Disabled"));
        TriggerEnable(libUNIT_gt_RunOutputUnitID, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUNIT_gt_ToggleOutputID_Init () {
    libUNIT_gt_ToggleOutputID = TriggerCreate("libUNIT_gt_ToggleOutputID_Func");
    TriggerAddEventChatMessage(libUNIT_gt_ToggleOutputID, c_playerAny, "toi", true);
    TriggerAddEventChatMessage(libUNIT_gt_ToggleOutputID, c_playerAny, "toggleoutputid", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Kill Units
//--------------------------------------------------------------------------------------------------
bool libUNIT_gt_KillUnits_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    int autoAC97E488_ae;
    const int autoAC97E488_ai = 1;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    autoAC97E488_ae = UnitGroupCount(UnitGroupSelected(EventPlayer()), c_unitCountAlive);
    lv_i = 1;
    for ( ; ( (autoAC97E488_ai >= 0 && lv_i <= autoAC97E488_ae) || (autoAC97E488_ai < 0 && lv_i >= autoAC97E488_ae) ) ; lv_i += autoAC97E488_ai ) {
        UnitKill(UnitGroupUnit(UnitGroupSelected(EventPlayer()), lv_i));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUNIT_gt_KillUnits_Init () {
    libUNIT_gt_KillUnits = TriggerCreate("libUNIT_gt_KillUnits_Func");
    TriggerAddEventChatMessage(libUNIT_gt_KillUnits, c_playerAny, "killunits", true);
    TriggerAddEventChatMessage(libUNIT_gt_KillUnits, c_playerAny, "ku", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Summon Unit
//--------------------------------------------------------------------------------------------------
bool libUNIT_gt_SummonUnit_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_amount;
    fixed lv_scale;
    int lv_player;
    int lv_i;
    string lv_unittype;

    // Automatic Variable Declarations
    int autoE55C84B8_ae;
    const int autoE55C84B8_ai = 1;

    // Variable Initialization
    lv_amount = 1;
    lv_scale = 1.0;
    lv_player = EventPlayer();

    // Conditions
    if (testConds) {
        if (!(((StringWord(EventChatMessage(false), 1) == "summon") || (StringWord(EventChatMessage(false), 1) == "sum")))) {
            return false;
        }

        if (!((StringWord(EventChatMessage(false), 2) != null))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((StringToInt(StringWord(EventChatMessage(false), 3)) > 0)) {
        lv_amount = StringToInt(StringWord(EventChatMessage(false), 3));
    }

    if ((StringWord(EventChatMessage(false), 4) != null)) {
        lv_player = StringToInt(StringWord(EventChatMessage(false), 4));
    }

    if ((StringToFixed(StringWord(EventChatMessage(false), 5)) > 0.0)) {
        lv_scale = StringToFixed(StringWord(EventChatMessage(false), 5));
    }

    lv_unittype = (StringWord(EventChatMessage(false), 2));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText(((("Trying to spawn " + (IntToString(lv_amount) + " ")) + ((lv_unittype) + (" with scale of " + FixedToString(lv_scale, c_fixedPrecisionAny)))) + (" for Player " + IntToString(lv_player)))));
    autoE55C84B8_ae = lv_amount;
    lv_i = 1;
    for ( ; ( (autoE55C84B8_ai >= 0 && lv_i <= autoE55C84B8_ae) || (autoE55C84B8_ai < 0 && lv_i >= autoE55C84B8_ae) ) ; lv_i += autoE55C84B8_ai ) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, lv_unittype, 0, lv_player, CameraGetTarget(EventPlayer()), null);
        UnitSetScale(UnitLastCreated(), (lv_scale * 100.0), (lv_scale * 100.0), (lv_scale * 100.0));
    }
    UISetDragSelectEnabled(PlayerGroupAll(), true);
    UISetSelectionTypeEnabled(PlayerGroupAll(), c_localSelectionTypeUnknown, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUNIT_gt_SummonUnit_Init () {
    libUNIT_gt_SummonUnit = TriggerCreate("libUNIT_gt_SummonUnit_Func");
    TriggerAddEventChatMessage(libUNIT_gt_SummonUnit, c_playerAny, "summon", false);
    TriggerAddEventChatMessage(libUNIT_gt_SummonUnit, c_playerAny, "sum", false);
}

void libUNIT_InitTriggers () {
    libUNIT_gt_MapInit_Init();
    libUNIT_gt_AddEffectstoCamera_Init();
    libUNIT_gt_RemoveEffectsfromCamera_Init();
    libUNIT_gt_AddEffects_Init();
    libUNIT_gt_RemoveEffect_Init();
    libUNIT_gt_AddWeapon_Init();
    libUNIT_gt_RemoveWeapon_Init();
    libUNIT_gt_ToggleNoWeaponCD_Init();
    libUNIT_gt_RunNoWeaponCD_Init();
    libUNIT_gt_ChangeUnitOwnership_Init();
    libUNIT_gt_GetUnitOwnership_Init();
    libUNIT_gt_SendActorMessage_Init();
    libUNIT_gt_PlayAnimation_Init();
    libUNIT_gt_RemoveAnimation_Init();
    libUNIT_gt_AddBehavior_Init();
    libUNIT_gt_RemoveBehavior_Init();
    libUNIT_gt_CountBehavior_Init();
    libUNIT_gt_GetBehaviors_Init();
    libUNIT_gt_ClearBehaviors_Init();
    libUNIT_gt_ModifyUnitProperty_Init();
    libUNIT_gt_RunOutputUnitID_Init();
    libUNIT_gt_ToggleOutputID_Init();
    libUNIT_gt_KillUnits_Init();
    libUNIT_gt_SummonUnit_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool libUNIT_InitLib_completed = false;

void libUNIT_InitLib () {
    if (libUNIT_InitLib_completed) {
        return;
    }

    libUNIT_InitLib_completed = true;

    libUNIT_InitLibraries();
    libUNIT_InitVariables();
    libUNIT_InitTriggers();
}

