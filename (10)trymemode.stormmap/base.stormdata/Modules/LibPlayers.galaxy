include "TriggerLibs/NativeLib"

//--------------------------------------------------------------------------------------------------
// Library: Players
//--------------------------------------------------------------------------------------------------
// Validating: templates

// Variable Declarations
int libPLYR_gv_massQuestStacks;
bool libPLYR_gv_isRunningMassQuest;
bool libPLYR_gv_isPauseGameWhenShowingTalentPanel;
bool libPLYR_gv_isEnableTalentTree;
bool libPLYR_gv_haveUsedSetMasteryRingTrigger;

// Trigger Declarations
trigger libPLYR_gt_MapInit;
trigger libPLYR_gt_RunMassQuest;
trigger libPLYR_gt_ToggleRunMassQuest;
trigger libPLYR_gt_TogglePause;
trigger libPLYR_gt_TogglePause2;
trigger libPLYR_gt_AddTalent;
trigger libPLYR_gt_RemoveTalent;
trigger libPLYR_gt_EnableTalent;
trigger libPLYR_gt_DisableTalent;
trigger libPLYR_gt_OverrideRespawnPoint;
trigger libPLYR_gt_OverrideScoreBoard;
trigger libPLYR_gt_SetMasteryRing;
trigger libPLYR_gt_OverrideRespawnTime;
trigger libPLYR_gt_SetOverlay;
trigger libPLYR_gt_ResetOverlay;

// Library Initialization
void libPLYR_InitVariables ();

//--------------------------------------------------------------------------------------------------
// Library: Players
//--------------------------------------------------------------------------------------------------
// Validating: templates

// External Library Initialization
void libPLYR_InitLibraries () {
    libNtve_InitVariables();
}

// Variable Initialization
bool libPLYR_InitVariables_completed = false;

void libPLYR_InitVariables () {
    if (libPLYR_InitVariables_completed) {
        return;
    }

    libPLYR_InitVariables_completed = true;

    libPLYR_gv_massQuestStacks = 1;
    libPLYR_gv_isEnableTalentTree = true;
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: MapInit
//--------------------------------------------------------------------------------------------------
bool libPLYR_gt_MapInit_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Player Lib Initialized"));
    return true;
}

//--------------------------------------------------------------------------------------------------
void libPLYR_gt_MapInit_Init () {
    libPLYR_gt_MapInit = TriggerCreate("libPLYR_gt_MapInit_Func");
    TriggerAddEventMapInit(libPLYR_gt_MapInit);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Run Mass Quest
//--------------------------------------------------------------------------------------------------
bool libPLYR_gt_RunMassQuest_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libSprt_gf_DEBUGIncrementAllQuests(1, libPLYR_gv_massQuestStacks);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libPLYR_gt_RunMassQuest_Init () {
    libPLYR_gt_RunMassQuest = TriggerCreate("libPLYR_gt_RunMassQuest_Func");
    TriggerEnable(libPLYR_gt_RunMassQuest, false);
    TriggerAddEventTimePeriodic(libPLYR_gt_RunMassQuest, 0.0625, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Toggle Run Mass Quest
//--------------------------------------------------------------------------------------------------
bool libPLYR_gt_ToggleRunMassQuest_Func (bool testConds, bool runActions) {
    // Variable Declarations
    const int lv_defaultStacks = 1;
    int lv_stacks;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((StringWord(EventChatMessage(false), 1) == "tmq") || (StringWord(EventChatMessage(false), 1) == "togglemassquest")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libPLYR_gv_isRunningMassQuest = !(libPLYR_gv_isRunningMassQuest);
    lv_stacks = StringToInt(StringWord(EventChatMessage(false), 2));
    if (((libPLYR_gv_isRunningMassQuest == true) && (lv_stacks <= 0))) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText(("Unable to set quest stacks. Using default: " + IntToString(lv_defaultStacks))));
        lv_stacks = lv_defaultStacks;
    }

    if ((libPLYR_gv_isRunningMassQuest == true)) {
        libPLYR_gv_massQuestStacks = lv_stacks;
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Enabled Mass Quest Completion"));
        TriggerEnable(libPLYR_gt_RunMassQuest, true);
    }
    else {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Disabled Mass Quest Completion"));
        TriggerEnable(libPLYR_gt_RunMassQuest, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libPLYR_gt_ToggleRunMassQuest_Init () {
    libPLYR_gt_ToggleRunMassQuest = TriggerCreate("libPLYR_gt_ToggleRunMassQuest_Func");
    TriggerAddEventChatMessage(libPLYR_gt_ToggleRunMassQuest, c_playerAny, "tmq", false);
    TriggerAddEventChatMessage(libPLYR_gt_ToggleRunMassQuest, c_playerAny, "togglemassquest", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Toggle Pause Game When Show Talent
//--------------------------------------------------------------------------------------------------
bool libPLYR_gt_TogglePause_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libPLYR_gv_isPauseGameWhenShowingTalentPanel = !(libPLYR_gv_isPauseGameWhenShowingTalentPanel);
    if ((libPLYR_gv_isPauseGameWhenShowingTalentPanel == true)) {
        SetTalentTreePauseGameWhenSelectionPanelShown(true);
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Enabled pause game when showing talent panel."));
    }
    else {
        SetTalentTreePauseGameWhenSelectionPanelShown(false);
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Disabled pause game when showing talent panel."));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libPLYR_gt_TogglePause_Init () {
    libPLYR_gt_TogglePause = TriggerCreate("libPLYR_gt_TogglePause_Func");
    TriggerAddEventChatMessage(libPLYR_gt_TogglePause, c_playerAny, "tpgt", true);
    TriggerAddEventChatMessage(libPLYR_gt_TogglePause, c_playerAny, "togglepausegametalent", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Toggle Talent Tree
//--------------------------------------------------------------------------------------------------
bool libPLYR_gt_TogglePause2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libPLYR_gv_isEnableTalentTree = !(libPLYR_gv_isEnableTalentTree);
    if ((libPLYR_gv_isEnableTalentTree == true)) {
        SetTalentsEnabled(true);
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Enabled Talent Tree"));
    }
    else {
        SetTalentsEnabled(false);
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Disabled Talent Tree"));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libPLYR_gt_TogglePause2_Init () {
    libPLYR_gt_TogglePause2 = TriggerCreate("libPLYR_gt_TogglePause2_Func");
    TriggerAddEventChatMessage(libPLYR_gt_TogglePause2, c_playerAny, "ttt", true);
    TriggerAddEventChatMessage(libPLYR_gt_TogglePause2, c_playerAny, "toggletalenttree", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Add Talent
//--------------------------------------------------------------------------------------------------
bool libPLYR_gt_AddTalent_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_player;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_player = EventPlayer();

    // Conditions
    if (testConds) {
        if (!(((StringWord(EventChatMessage(false), 1) == "adt") || (StringWord(EventChatMessage(false), 1) == "addtalent")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((StringWord(EventChatMessage(false), 2) == null)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Usage: <adt|addtalent> <TalentName> [Player=EventPlayer]"));
    }
    else {
        if ((StringWord(EventChatMessage(false), 3) != null)) {
            lv_player = StringToInt(StringWord(EventChatMessage(false), 3));
        }

        PlayerAddTalent(lv_player, (StringWord(EventChatMessage(false), 2)));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText((("Added Talent \"" + StringWord(EventChatMessage(false), 2)) + ("\" to Player " + IntToString(lv_player)))));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libPLYR_gt_AddTalent_Init () {
    libPLYR_gt_AddTalent = TriggerCreate("libPLYR_gt_AddTalent_Func");
    TriggerAddEventChatMessage(libPLYR_gt_AddTalent, c_playerAny, "adt", false);
    TriggerAddEventChatMessage(libPLYR_gt_AddTalent, c_playerAny, "addtalent", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Remove Talent
//--------------------------------------------------------------------------------------------------
bool libPLYR_gt_RemoveTalent_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_player;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_player = EventPlayer();

    // Conditions
    if (testConds) {
        if (!(((StringWord(EventChatMessage(false), 1) == "rmt") || (StringWord(EventChatMessage(false), 1) == "removetalent")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((StringWord(EventChatMessage(false), 2) == null)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Usage: <rmt|removetalent> <TalentName> [Player=EventPlayer]"));
    }
    else {
        if ((StringWord(EventChatMessage(false), 3) != null)) {
            lv_player = StringToInt(StringWord(EventChatMessage(false), 3));
        }

        PlayerRemoveTalent(lv_player, (StringWord(EventChatMessage(false), 2)));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText((("Removed Talent \"" + StringWord(EventChatMessage(false), 2)) + ("\" from Player " + IntToString(lv_player)))));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libPLYR_gt_RemoveTalent_Init () {
    libPLYR_gt_RemoveTalent = TriggerCreate("libPLYR_gt_RemoveTalent_Func");
    TriggerAddEventChatMessage(libPLYR_gt_RemoveTalent, c_playerAny, "rmt", false);
    TriggerAddEventChatMessage(libPLYR_gt_RemoveTalent, c_playerAny, "removetalent", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Enable Talent
//--------------------------------------------------------------------------------------------------
bool libPLYR_gt_EnableTalent_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_talentName;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_talentName = "";

    // Conditions
    if (testConds) {
        if (!(((StringWord(EventChatMessage(false), 1) == "dist") || (StringWord(EventChatMessage(false), 1) == "disabletalent")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((StringWord(EventChatMessage(false), 2) == null)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Usage: <dist|disabletalent> <TalentName>"));
    }
    else {
        lv_talentName = StringWord(EventChatMessage(false), 2);
        SetTalentEnabled((lv_talentName), false);
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText((("Disabled Talent \"" + StringWord(EventChatMessage(false), 2)) + "")));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libPLYR_gt_EnableTalent_Init () {
    libPLYR_gt_EnableTalent = TriggerCreate("libPLYR_gt_EnableTalent_Func");
    TriggerAddEventChatMessage(libPLYR_gt_EnableTalent, c_playerAny, "dist", false);
    TriggerAddEventChatMessage(libPLYR_gt_EnableTalent, c_playerAny, "disabletalent", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Disable Talent
//--------------------------------------------------------------------------------------------------
bool libPLYR_gt_DisableTalent_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_talentName;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_talentName = "";

    // Conditions
    if (testConds) {
        if (!(((StringWord(EventChatMessage(false), 1) == "ent") || (StringWord(EventChatMessage(false), 1) == "enabletalent")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((StringWord(EventChatMessage(false), 2) == null)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Usage: <ent|enabletalent> <TalentName>"));
    }
    else {
        lv_talentName = StringWord(EventChatMessage(false), 2);
        SetTalentEnabled((lv_talentName), true);
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText((("Enabled Talent \"" + StringWord(EventChatMessage(false), 2)) + "")));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libPLYR_gt_DisableTalent_Init () {
    libPLYR_gt_DisableTalent = TriggerCreate("libPLYR_gt_DisableTalent_Func");
    TriggerAddEventChatMessage(libPLYR_gt_DisableTalent, c_playerAny, "ent", false);
    TriggerAddEventChatMessage(libPLYR_gt_DisableTalent, c_playerAny, "enabletalent", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Override Respawn Point
//--------------------------------------------------------------------------------------------------
bool libPLYR_gt_OverrideRespawnPoint_Func (bool testConds, bool runActions) {
    // Variable Declarations
    point lv_cameralocation;
    int lv_player;
    string lv_action;

    // Automatic Variable Declarations
    playergroup auto61B0F10C_g;
    playergroup auto9EDB3770_g;

    // Variable Initialization
    lv_action = "";

    // Conditions
    if (testConds) {
        if (!(((StringWord(EventChatMessage(false), 1) == "respawnpoint") || (StringWord(EventChatMessage(false), 1) == "rsp")))) {
            return false;
        }

        if (!((!((StringWord(EventChatMessage(false), 2) == null))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_action = StringWord(EventChatMessage(false), 2);
    lv_cameralocation = CameraGetTarget(EventPlayer());
    if ((!(((StringWord(EventChatMessage(false), 2) == "set") || (StringWord(EventChatMessage(false), 2) == "reset"))))) {
        return false;
    }

    if ((lv_action == "set")) {
        if ((StringWord(EventChatMessage(false), 3) == "all")) {
            auto61B0F10C_g = PlayerGroupAll();
            lv_player = -1;
            while (true) {
                lv_player = PlayerGroupNextPlayer(auto61B0F10C_g, lv_player);
                if (lv_player < 0) { break; }
                libGame_gv_players[lv_player].lv_spawnPoint = lv_cameralocation;
            }
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText(("Set All Players Respawn point to Camera Location: " + libNtve_gf_ConvertPointToString(lv_cameralocation))));
            return true;
        }
        else {
            if ((StringToInt(StringWord(EventChatMessage(false), 3)) == 0)) {
                lv_player = EventPlayer();
                libGame_gv_players[lv_player].lv_spawnPoint = lv_cameralocation;
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText((("Set Player " + IntToString(lv_player)) + ("'s Respawn Point to Camera Location: " + libNtve_gf_ConvertPointToString(lv_cameralocation)))));
                return true;
            }
            else {
                lv_player = StringToInt(StringWord(EventChatMessage(false), 3));
                libGame_gv_players[lv_player].lv_spawnPoint = lv_cameralocation;
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText((("Set Player " + IntToString(lv_player)) + ("'s Respawn Point to Camera Location: " + libNtve_gf_ConvertPointToString(lv_cameralocation)))));
                return true;
            }
        }
        return true;
    }

    if ((lv_action == "reset")) {
        if ((StringWord(EventChatMessage(false), 3) == "all")) {
            auto9EDB3770_g = PlayerGroupAll();
            lv_player = -1;
            while (true) {
                lv_player = PlayerGroupNextPlayer(auto9EDB3770_g, lv_player);
                if (lv_player < 0) { break; }
                libGame_gv_players[lv_player].lv_spawnPoint = PlayerStartLocation(lv_player);
            }
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Reset all Players Respawn Point to their default spawn point."));
            return true;
        }
        else {
            if ((StringToInt(StringWord(EventChatMessage(false), 3)) == 0)) {
                lv_player = EventPlayer();
                libGame_gv_players[lv_player].lv_spawnPoint = PlayerStartLocation(lv_player);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText(("Reset Player " + (IntToString(lv_player) + "'s Spawn Point to its default location."))));
                return true;
            }
            else {
                lv_player = StringToInt(StringWord(EventChatMessage(false), 3));
                libGame_gv_players[lv_player].lv_spawnPoint = PlayerStartLocation(lv_player);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText(("Reset Player " + (IntToString(lv_player) + "'s Spawn Point to its default location."))));
                return true;
            }
        }
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libPLYR_gt_OverrideRespawnPoint_Init () {
    libPLYR_gt_OverrideRespawnPoint = TriggerCreate("libPLYR_gt_OverrideRespawnPoint_Func");
    TriggerAddEventChatMessage(libPLYR_gt_OverrideRespawnPoint, c_playerAny, "respawnpoint", false);
    TriggerAddEventChatMessage(libPLYR_gt_OverrideRespawnPoint, c_playerAny, "rsp", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Override Score Board
//--------------------------------------------------------------------------------------------------
bool libPLYR_gt_OverrideScoreBoard_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_player;
    int lv_value;
    string lv_field;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_field = "";

    // Conditions
    if (testConds) {
        if (!(((StringWord(EventChatMessage(false), 1) == "setscore") || (StringWord(EventChatMessage(false), 1) == "score")))) {
            return false;
        }

        if (!((!(((StringWord(EventChatMessage(false), 2) == null) && (StringWord(EventChatMessage(false), 3) == null)))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_field = StringWord(EventChatMessage(false), 2);
    lv_value = StringToInt(StringWord(EventChatMessage(false), 3));
    if ((StringWord(EventChatMessage(false), 4) == null)) {
        lv_player = EventPlayer();
    }
    else {
        lv_player = StringToInt(StringWord(EventChatMessage(false), 4));
    }
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText((("Tried to modify Player " + (IntToString(lv_player) + "'s ")) + (lv_field + (" to " + IntToString(lv_value))))));
    PlayerScoreValueSetFromInt(lv_player, (lv_field), lv_value);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libPLYR_gt_OverrideScoreBoard_Init () {
    libPLYR_gt_OverrideScoreBoard = TriggerCreate("libPLYR_gt_OverrideScoreBoard_Func");
    TriggerAddEventChatMessage(libPLYR_gt_OverrideScoreBoard, c_playerAny, "setscore", false);
    TriggerAddEventChatMessage(libPLYR_gt_OverrideScoreBoard, c_playerAny, "score", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Mastery Ring
//--------------------------------------------------------------------------------------------------
bool libPLYR_gt_SetMasteryRing_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_currentUnit;
    int lv_level;

    // Automatic Variable Declarations
    unitgroup auto7BC3CC12_g;
    int auto7BC3CC12_u;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((StringWord(EventChatMessage(false), 1) == "smr") || (StringWord(EventChatMessage(false), 1) == "setmasteryring")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((StringWord(EventChatMessage(false), 2) == null)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Usage: <mw|masteryring> <level:Int>"));
    }
    else {
        lv_level = StringToInt(StringWord(EventChatMessage(false), 2));
        libNtve_gf_SetUpgradeLevelForPlayer(EventPlayer(), ("HeroRingMasteryUpgrade"), lv_level);
        auto7BC3CC12_g = UnitGroupSelected(EventPlayer());
        auto7BC3CC12_u = UnitGroupCount(auto7BC3CC12_g, c_unitCountAll);
        for (;; auto7BC3CC12_u -= 1) {
            lv_currentUnit = UnitGroupUnitFromEnd(auto7BC3CC12_g, auto7BC3CC12_u);
            if (lv_currentUnit == null) { break; }
            libNtve_gf_SendActorMessageToUnit(lv_currentUnit, ("Signal MasteryRingCreation"));
        }
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText(("Set Hero Mastery Ring to Level " + IntToString(lv_level))));
        if ((libPLYR_gv_haveUsedSetMasteryRingTrigger == true)) {
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Notice: Reapply Mastery Ring modification may requires unit to respawn for UI to take effect."));
        }
        else {
            libPLYR_gv_haveUsedSetMasteryRingTrigger = true;
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libPLYR_gt_SetMasteryRing_Init () {
    libPLYR_gt_SetMasteryRing = TriggerCreate("libPLYR_gt_SetMasteryRing_Func");
    TriggerAddEventChatMessage(libPLYR_gt_SetMasteryRing, c_playerAny, "smr", false);
    TriggerAddEventChatMessage(libPLYR_gt_SetMasteryRing, c_playerAny, "setmasteryring", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Override Respawn Time
//--------------------------------------------------------------------------------------------------
bool libPLYR_gt_OverrideRespawnTime_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_respawntime;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((StringWord(EventChatMessage(false), 1) == "respawntime") || (StringWord(EventChatMessage(false), 1) == "rst")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_respawntime = StringToFixed(StringWord(EventChatMessage(false), 2));
    if ((StringWord(EventChatMessage(false), 2) == null)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Invalid Respawn Time"));
        return false;
    }

    if ((lv_respawntime < 0.0625)) {
        lv_respawntime = 0.0625;
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Warning: Respawn time cannot be set lower than 0.0625."));
    }

    libCore_gv_bALDeathTimeOverride = lv_respawntime;
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText(("Override Respawn Timer to " + FixedToString(lv_respawntime, c_fixedPrecisionAny))));
    return true;
}

//--------------------------------------------------------------------------------------------------
void libPLYR_gt_OverrideRespawnTime_Init () {
    libPLYR_gt_OverrideRespawnTime = TriggerCreate("libPLYR_gt_OverrideRespawnTime_Func");
    TriggerAddEventChatMessage(libPLYR_gt_OverrideRespawnTime, c_playerAny, "respawntime", false);
    TriggerAddEventChatMessage(libPLYR_gt_OverrideRespawnTime, c_playerAny, "rst", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Set Overlay
//--------------------------------------------------------------------------------------------------
bool libPLYR_gt_SetOverlay_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_player;
    string lv_overlayPath;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_player = EventPlayer();
    lv_overlayPath = "";

    // Conditions
    if (testConds) {
        if (!(((StringWord(EventChatMessage(false), 1) == "sol") || (StringWord(EventChatMessage(false), 1) == "setoverlay")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((StringWord(EventChatMessage(false), 2) == null)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("Usage: <sol|setoverlay> <OverlayPath>"));
    }
    else {
        lv_overlayPath = StringWord(EventChatMessage(false), 2);
        libUIUI_gf_FullscreenOverlayPlayCutscene(lv_player, lv_overlayPath);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libPLYR_gt_SetOverlay_Init () {
    libPLYR_gt_SetOverlay = TriggerCreate("libPLYR_gt_SetOverlay_Func");
    TriggerAddEventChatMessage(libPLYR_gt_SetOverlay, c_playerAny, "sol", false);
    TriggerAddEventChatMessage(libPLYR_gt_SetOverlay, c_playerAny, "setoverlay", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Reset Overlay
//--------------------------------------------------------------------------------------------------
bool libPLYR_gt_ResetOverlay_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_player;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_player = EventPlayer();

    // Actions
    if (!runActions) {
        return true;
    }

    libUIUI_gf_FullscreenOverlayPlayCutscene(lv_player, libUIUI_gv_fullscreenOverlayQueue[lv_player].lv_cutscene[1]);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libPLYR_gt_ResetOverlay_Init () {
    libPLYR_gt_ResetOverlay = TriggerCreate("libPLYR_gt_ResetOverlay_Func");
    TriggerAddEventChatMessage(libPLYR_gt_ResetOverlay, c_playerAny, "rol", true);
    TriggerAddEventChatMessage(libPLYR_gt_ResetOverlay, c_playerAny, "resetoverlay", true);
}

void libPLYR_InitTriggers () {
    libPLYR_gt_MapInit_Init();
    libPLYR_gt_RunMassQuest_Init();
    libPLYR_gt_ToggleRunMassQuest_Init();
    libPLYR_gt_TogglePause_Init();
    libPLYR_gt_TogglePause2_Init();
    libPLYR_gt_AddTalent_Init();
    libPLYR_gt_RemoveTalent_Init();
    libPLYR_gt_EnableTalent_Init();
    libPLYR_gt_DisableTalent_Init();
    libPLYR_gt_OverrideRespawnPoint_Init();
    libPLYR_gt_OverrideScoreBoard_Init();
    libPLYR_gt_SetMasteryRing_Init();
    libPLYR_gt_OverrideRespawnTime_Init();
    libPLYR_gt_SetOverlay_Init();
    libPLYR_gt_ResetOverlay_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool libPLYR_InitLib_completed = false;

void libPLYR_InitLib () {
    if (libPLYR_InitLib_completed) {
        return;
    }

    libPLYR_InitLib_completed = true;

    libPLYR_InitLibraries();
    libPLYR_InitVariables();
    libPLYR_InitTriggers();
}

