include "TriggerLibs/NativeLib"
include "TriggerLibs/HeroesLib_h"
include "TriggerLibs/GameLib_h"
include "TriggerLibs/MapMechanicsLib_h"
include "TriggerLibs/UILib_h"

include "ModuleMimicLibs/MimicStartingExperienceLib_h"

//--------------------------------------------------------------------------------------------------
// Library: Starting Experience
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void MimicStartingExperienceLib_InitLibraries () {
    libNtve_InitVariables();
    libCore_InitVariables();
    libGame_InitVariables();
    libMapM_InitVariables();
    libUIUI_InitVariables();
}

// Variable Initialization
bool MimicStartingExperienceLib_InitVariables_completed = false;

void MimicStartingExperienceLib_InitVariables () {
    int init_i;
    int init_i1;
    int init_i2;

    if (MimicStartingExperienceLib_InitVariables_completed) {
        return;
    }

    MimicStartingExperienceLib_InitVariables_completed = true;

    for (init_i = 0; init_i <= 10; init_i += 1) {
        MimicStartingExperienceLib_gv_sE_AbilityHighlightFlash[init_i] = c_invalidDialogControlId;
    }
    MimicStartingExperienceLib_gv_sE_HintMsgDialog = c_invalidDialogId;
    MimicStartingExperienceLib_gv_sE_HintMsgPanel = c_invalidDialogControlId;
    MimicStartingExperienceLib_gv_sE_HintMsgLabel = c_invalidDialogControlId;
    MimicStartingExperienceLib_gv_sE_VOMsgDialog = c_invalidDialogId;
    MimicStartingExperienceLib_gv_sE_VOMsgPanel = c_invalidDialogControlId;
    MimicStartingExperienceLib_gv_sE_VOMsgLabel = c_invalidDialogControlId;
    MimicStartingExperienceLib_gv_sE_VOPausedMsgDialog = c_invalidDialogId;
    MimicStartingExperienceLib_gv_sE_VOPausedMsgFramePanel = c_invalidDialogControlId;
    MimicStartingExperienceLib_gv_sE_VOPausedMsgPanel = c_invalidDialogControlId;
    MimicStartingExperienceLib_gv_sE_VOPausedMsgIcon = c_invalidDialogControlId;
    MimicStartingExperienceLib_gv_sE_VOPausedMsgLabel = c_invalidDialogControlId;
    MimicStartingExperienceLib_gv_sE_VOPausedMsgButton = c_invalidDialogControlId;
    for (init_i = 0; init_i <= libCore_gv_bALMaxTeams; init_i += 1) {
        MimicStartingExperienceLib_gv_mapCutsceneStrings[init_i] = "";
    }
    MimicStartingExperienceLib_gv_tutorialCinematicRestoreSelection = true;
    MimicStartingExperienceLib_gv_sEUnitGroupRemovedRing = UnitGroupEmpty();
    MimicStartingExperienceLib_gv_sEMMIntroPlayersWatching = PlayerGroupEmpty();
    MimicStartingExperienceLib_gv_sEMMIntroPlayersInitiallyWatching = PlayerGroupEmpty();
    MimicStartingExperienceLib_gv_sE_MoveMouseButton = MimicStartingExperienceLib_ge_MouseButton_RightButton;
    MimicStartingExperienceLib_gv_sE_FrozenUnits = UnitGroupEmpty();
    MimicStartingExperienceLib_gv_sE_TrainingModeTalentPanelFlashingImage = c_invalidDialogControlId;
    for (init_i = 0; init_i <= 30; init_i += 1) {
        MimicStartingExperienceLib_gv_sE_TrainingModeTips[init_i].lv_iD = MimicStartingExperienceLib_ge_SE_TrainingModeTips_None;
        MimicStartingExperienceLib_gv_sE_TrainingModeTips[init_i].lv_vO = "TutorialVO|Line00568";
    }
    MimicStartingExperienceLib_gv_sE_TrainingModeTipDialog = c_invalidDialogId;
    MimicStartingExperienceLib_gv_objectives.lv_objectivePickOneTalent = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectivePickRemainingTalentsAndReady = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveTargetDummy = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveGraveGolemFight = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveGraveGolemFightUtherMustSurvive = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveMoshPitFight = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveMoshPitTeamMustSurvive = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveDefendKeep = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveDefendKeepVallaMustSurvive = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveEscapeHelpValla = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveEscapeKillJaina = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveEscapeAbathurMustSurvive = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveRoamHitTenFirst = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveRoamZeratulMustSurvive = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveSoakHitThirteenFirst = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveSoakAbathurMustSurvive = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveDragonKnightCapture = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveDragonKnightAbathurMustSurvive = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveDragonKnightAllyMustSurvive = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectiveTargetDummy = c_invalidObjectiveId;
    for (init_i = 0; init_i <= libCore_gv_talents_MaxTiers_C; init_i += 1) {
        for (init_i1 = 0; init_i1 <= libCore_gv_talents_MaxTalentsPerTier_C; init_i1 += 1) {
            for (init_i2 = 0; init_i2 <= libCore_gv_talents_MaxModificationsPerTalent_C; init_i2 += 1) {
                MimicStartingExperienceLib_gv_talents_TalentChoices[init_i].lv_talentData[init_i1].lv_abilityModificationData[init_i2].lv_changeType = c_talentModificationNone;
                MimicStartingExperienceLib_gv_talents_TalentChoices[init_i].lv_talentData[init_i1].lv_abilityModificationData[init_i2].lv_catalog = c_gameCatalogUnit;
                MimicStartingExperienceLib_gv_talents_TalentChoices[init_i].lv_talentData[init_i1].lv_abilityModificationData[init_i2].lv_entry = "";
                MimicStartingExperienceLib_gv_talents_TalentChoices[init_i].lv_talentData[init_i1].lv_abilityModificationData[init_i2].lv_field = "";
                MimicStartingExperienceLib_gv_talents_TalentChoices[init_i].lv_talentData[init_i1].lv_abilityModificationData[init_i2].lv_stringReplacementValue = "";
                MimicStartingExperienceLib_gv_talents_TalentChoices[init_i].lv_talentData[init_i1].lv_abilityModificationData[init_i2].lv_catalogReplaceFrom = "";
                MimicStartingExperienceLib_gv_talents_TalentChoices[init_i].lv_talentData[init_i1].lv_abilityModificationData[init_i2].lv_catalogChangeTo = "";
            }
        }
    }
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_mainPanel = c_invalidDialogControlId;
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_RespecButton = c_invalidDialogControlId;
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_RespecButton2 = c_invalidDialogControlId;
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_RetryButton = c_invalidDialogControlId;
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_ReadyButton = c_invalidDialogControlId;
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_challengeCompleteImage = c_invalidDialogControlId;
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_challengeTitleFrame = c_invalidDialogControlId;
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_challengeDescriptionLabel = c_invalidDialogControlId;
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_countdownFrame = c_invalidDialogControlId;
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_countdown3Image = c_invalidDialogControlId;
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_countdown2Image = c_invalidDialogControlId;
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_countdown1Image = c_invalidDialogControlId;
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_countdownGoLabel = c_invalidDialogControlId;
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_dummyPanel = c_invalidDialogControlId;
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_dummyDamageLabel = c_invalidDialogControlId;
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_dummyDPSLabel = c_invalidDialogControlId;
    MimicStartingExperienceLib_gv_targetDummyDamageTimer = TimerCreate();
    MimicStartingExperienceLib_gv_targetDummyPeaceTimer = TimerCreate();
    MimicStartingExperienceLib_gv_queryDialogResult = MimicStartingExperienceLib_ge_QueryDialogResult__None;
    MimicStartingExperienceLib_gv_tutorialHeroBtnJaina = c_invalidDialogControlId;
    MimicStartingExperienceLib_gv_tutorialHeroBtnMuradin = c_invalidDialogControlId;
    MimicStartingExperienceLib_gv_tutorialHeroBtnTyrande = c_invalidDialogControlId;
}

// Presets
string MimicStartingExperienceLib_ge_SE_TrainingModeTips_Ident (int lp_val) {
         if (lp_val == MimicStartingExperienceLib_ge_SE_TrainingModeTips_None) { return "None"; }
    else if (lp_val == MimicStartingExperienceLib_ge_SE_TrainingModeTips_WatchTower) { return "WatchTower"; }
    else if (lp_val == MimicStartingExperienceLib_ge_SE_TrainingModeTips_MercCamps) { return "MercCamps"; }
    else if (lp_val == MimicStartingExperienceLib_ge_SE_TrainingModeTips_HealingFountain) { return "HealingFountain"; }
    else if (lp_val == MimicStartingExperienceLib_ge_SE_TrainingModeTips_Experience) { return "Experience"; }
    else if (lp_val == MimicStartingExperienceLib_ge_SE_TrainingModeTips_Gates) { return "Gates"; }
    else if (lp_val == MimicStartingExperienceLib_ge_SE_TrainingModeTips_Ammo1) { return "Ammo1"; }
    else if (lp_val == MimicStartingExperienceLib_ge_SE_TrainingModeTips_Ammo2) { return "Ammo2"; }
    else if (lp_val == MimicStartingExperienceLib_ge_SE_TrainingModeTips_Bushes) { return "Bushes"; }
    else if (lp_val == MimicStartingExperienceLib_ge_SE_TrainingModeTips_Hearthstone) { return "Hearthstone"; }
    else if (lp_val == MimicStartingExperienceLib_ge_SE_TrainingModeTips_HearthstoneUsed) { return "HearthstoneUsed"; }
    else if (lp_val == MimicStartingExperienceLib_ge_SE_TrainingModeTips_Mount) { return "Mount"; }
    else if (lp_val == MimicStartingExperienceLib_ge_SE_TrainingModeTips_Mana) { return "Mana"; }
    else if (lp_val == MimicStartingExperienceLib_ge_SE_TrainingModeTips_Abilities) { return "Abilities"; }
    else if (lp_val == MimicStartingExperienceLib_ge_SE_TrainingModeTips_Death1) { return "Death1"; }
    else if (lp_val == MimicStartingExperienceLib_ge_SE_TrainingModeTips_Death2) { return "Death2"; }
    else if (lp_val == MimicStartingExperienceLib_ge_SE_TrainingModeTips_Spacebar) { return "Spacebar"; }
    else if (lp_val == MimicStartingExperienceLib_ge_SE_TrainingModeTips_Talents) { return "Talents"; }
    else if (lp_val == MimicStartingExperienceLib_ge_SE_TrainingModeTips_CoreShield) { return "CoreShield"; }
    else if (lp_val == MimicStartingExperienceLib_ge_SE_TrainingModeTips_Forts) { return "Forts"; }
    else if (lp_val == MimicStartingExperienceLib_ge_SE_TrainingModeTips_NewUserTip_Last) { return "NewUserTip_Last"; }
    return null;
}

// Functions
void MimicStartingExperienceLib_gf_HighlightCommandButton (bool lp_highlightUnhighlight, int lp_button) {
    // Automatic Variable Declarations
    int autoFA2999E1_val;

    // Implementation
    if ((MimicStartingExperienceLib_gv_sE_AbilityHighlightFlash[(lp_button)] == c_invalidDialogControlId) && (lp_highlightUnhighlight == true)) {
        autoFA2999E1_val = lp_button;
        if (autoFA2999E1_val == MimicStartingExperienceLib_ge_TutorialCommandButton_Ability1) {
            DialogControlHookupStandard(c_triggerControlTypePanel, "UIContainer/ConsoleUIContainer/CommandPanel/TutorialArrow00");
            MimicStartingExperienceLib_gv_sE_AbilityHighlightFlash[(lp_button)] = DialogControlLastCreated();
        }
        else if (autoFA2999E1_val == MimicStartingExperienceLib_ge_TutorialCommandButton_Ability2) {
            DialogControlHookupStandard(c_triggerControlTypePanel, "UIContainer/ConsoleUIContainer/CommandPanel/TutorialArrow01");
            MimicStartingExperienceLib_gv_sE_AbilityHighlightFlash[(lp_button)] = DialogControlLastCreated();
        }
        else if (autoFA2999E1_val == MimicStartingExperienceLib_ge_TutorialCommandButton_Ability3) {
            DialogControlHookupStandard(c_triggerControlTypePanel, "UIContainer/ConsoleUIContainer/CommandPanel/TutorialArrow04");
            MimicStartingExperienceLib_gv_sE_AbilityHighlightFlash[(lp_button)] = DialogControlLastCreated();
        }
        else if (autoFA2999E1_val == MimicStartingExperienceLib_ge_TutorialCommandButton_Heroic) {
            DialogControlHookupStandard(c_triggerControlTypePanel, "UIContainer/ConsoleUIContainer/CommandPanel/TutorialArrow05");
            MimicStartingExperienceLib_gv_sE_AbilityHighlightFlash[(lp_button)] = DialogControlLastCreated();
        }
        else if (autoFA2999E1_val == MimicStartingExperienceLib_ge_TutorialCommandButton_Hearth) {
            DialogControlHookupStandard(c_triggerControlTypePanel, "UIContainer/ConsoleUIContainer/CommandPanel/TutorialArrow02");
            MimicStartingExperienceLib_gv_sE_AbilityHighlightFlash[(lp_button)] = DialogControlLastCreated();
        }
        else if (autoFA2999E1_val == MimicStartingExperienceLib_ge_TutorialCommandButton_Mount) {
            DialogControlHookupStandard(c_triggerControlTypePanel, "UIContainer/ConsoleUIContainer/CommandPanel/TutorialArrow03");
            MimicStartingExperienceLib_gv_sE_AbilityHighlightFlash[(lp_button)] = DialogControlLastCreated();
        }
        else {
        }
    }

    if ((MimicStartingExperienceLib_gv_sE_AbilityHighlightFlash[(lp_button)] == c_invalidDialogControlId)) {
        return ;
    }

    if ((lp_highlightUnhighlight == true)) {
        DialogControlSetVisible(MimicStartingExperienceLib_gv_sE_AbilityHighlightFlash[(lp_button)], PlayerGroupAll(), true);
    }
    else {
        DialogControlSetVisible(MimicStartingExperienceLib_gv_sE_AbilityHighlightFlash[(lp_button)], PlayerGroupAll(), false);
    }
}

void MimicStartingExperienceLib_gf_DisplayHintMessage (text lp_msg, bool lp_writeOut, fixed lp_writeOutDuration) {
    // Automatic Variable Declarations
    // Implementation
    if ((libGame_gv_gameOver == true)) {
        return ;
    }

    if ((MimicStartingExperienceLib_gv_sE_HintMsgDialog == c_invalidDialogId)) {
        DialogCreate(1500, 250, c_anchorBottom, 0, 290, false);
        MimicStartingExperienceLib_gv_sE_HintMsgDialog = DialogLastCreated();
        DialogSetImageVisible(DialogLastCreated(), false);
        DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), true);
    }

    if ((MimicStartingExperienceLib_gv_sE_HintMsgPanel != c_invalidDialogControlId)) {
        DialogControlDestroy(MimicStartingExperienceLib_gv_sE_HintMsgPanel);
    }

    SoundPlay(SoundLink("UI_Tutorial01_Hint_Message_Display", -1), PlayerGroupAll(), 100.0, 0.0);
    SoundPlay(SoundLink("UI_Tutorial01_Text_Crawl", -1), PlayerGroupAll(), 100.0, 0.0);
    DialogControlCreateFromTemplate(MimicStartingExperienceLib_gv_sE_HintMsgDialog, c_triggerControlTypePanel, "TutorialUI/TutorialTextBoxTemplate");
    MimicStartingExperienceLib_gv_sE_HintMsgPanel = DialogControlLastCreated();
    DialogControlSendAnimationEvent(DialogControlLastCreated(), PlayerGroupAll(), "TriggerTutorialDialogAnim");
    DialogControlHookup(DialogControlLastCreated(), c_triggerControlTypeLabel, "Text");
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), lp_msg, PlayerGroupAll());
    libNtve_gf_SetDialogItemTextWriteout(DialogControlLastCreated(), lp_writeOut, PlayerGroupAll());
    libNtve_gf_SetDialogItemTextWriteoutDuration(DialogControlLastCreated(), MimicStartingExperienceLib_gv_sE_MsgWriteOutDuration, PlayerGroupAll());
    MimicStartingExperienceLib_gv_sE_HintMsgLabel = DialogControlLastCreated();
}

void MimicStartingExperienceLib_gf_ClearHintMessage () {
    // Automatic Variable Declarations
    // Implementation
    if ((MimicStartingExperienceLib_gv_sE_HintMsgPanel != c_invalidDialogControlId)) {
        DialogControlFadeTransparency(MimicStartingExperienceLib_gv_sE_HintMsgPanel, PlayerGroupAll(), 2.0, 100.0);
        DialogControlDestroy(MimicStartingExperienceLib_gv_sE_HintMsgPanel);
        MimicStartingExperienceLib_gv_sE_HintMsgPanel = c_invalidDialogControlId;
    }

}

trigger auto_MimicStartingExperienceLib_gf_DisplayVOMessage_Trigger = null;
text auto_MimicStartingExperienceLib_gf_DisplayVOMessage_lp_msg;
fixed auto_MimicStartingExperienceLib_gf_DisplayVOMessage_lp_duration;
bool auto_MimicStartingExperienceLib_gf_DisplayVOMessage_lp_writeOut;

void MimicStartingExperienceLib_gf_DisplayVOMessage (text lp_msg, fixed lp_duration, bool lp_writeOut) {
    auto_MimicStartingExperienceLib_gf_DisplayVOMessage_lp_msg = lp_msg;
    auto_MimicStartingExperienceLib_gf_DisplayVOMessage_lp_duration = lp_duration;
    auto_MimicStartingExperienceLib_gf_DisplayVOMessage_lp_writeOut = lp_writeOut;

    if (auto_MimicStartingExperienceLib_gf_DisplayVOMessage_Trigger == null) {
        auto_MimicStartingExperienceLib_gf_DisplayVOMessage_Trigger = TriggerCreate("auto_MimicStartingExperienceLib_gf_DisplayVOMessage_TriggerFunc");
    }

    TriggerExecute(auto_MimicStartingExperienceLib_gf_DisplayVOMessage_Trigger, false, false);
}

bool auto_MimicStartingExperienceLib_gf_DisplayVOMessage_TriggerFunc (bool testConds, bool runActions) {
    text lp_msg = auto_MimicStartingExperienceLib_gf_DisplayVOMessage_lp_msg;
    fixed lp_duration = auto_MimicStartingExperienceLib_gf_DisplayVOMessage_lp_duration;
    bool lp_writeOut = auto_MimicStartingExperienceLib_gf_DisplayVOMessage_lp_writeOut;

    // Variable Declarations
    int lv_localPanel;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_localPanel = c_invalidDialogControlId;

    // Implementation
    if ((libGame_gv_gameOver == true)) {
        return true;
    }

    if ((MimicStartingExperienceLib_gv_sE_VOMsgDialog == c_invalidDialogId)) {
        DialogCreate(1500, 250, c_anchorBottom, 0, 150, false);
        MimicStartingExperienceLib_gv_sE_VOMsgDialog = DialogLastCreated();
        DialogSetImageVisible(DialogLastCreated(), false);
        DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), true);
    }
    else {
        DialogSetPosition(MimicStartingExperienceLib_gv_sE_VOMsgDialog, c_anchorBottom, 0, 150);
    }
    if ((MimicStartingExperienceLib_gv_sE_VOMsgPanel != c_invalidDialogControlId)) {
        DialogControlSetVisible(MimicStartingExperienceLib_gv_sE_VOMsgPanel, PlayerGroupAll(), false);
        MimicStartingExperienceLib_gv_sE_VOMsgPanel = c_invalidDialogControlId;
    }

    SoundPlayForPlayer(SoundLink("UI_Tutorial01_VO_Message_Display", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    SoundPlayForPlayer(SoundLink("UI_Tutorial01_Text_Crawl", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    DialogControlCreateFromTemplate(MimicStartingExperienceLib_gv_sE_VOMsgDialog, c_triggerControlTypePanel, "TutorialUI/TutorialTextBoxTemplate");
    MimicStartingExperienceLib_gv_sE_VOMsgPanel = DialogControlLastCreated();
    lv_localPanel = DialogControlLastCreated();
    DialogControlSendAnimationEvent(DialogControlLastCreated(), PlayerGroupAll(), "TriggerTutorialDialogAnim");
    DialogControlHookup(MimicStartingExperienceLib_gv_sE_VOMsgPanel, c_triggerControlTypeLabel, "Text");
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), lp_msg, PlayerGroupAll());
    libNtve_gf_SetDialogItemTextWriteout(DialogControlLastCreated(), lp_writeOut, PlayerGroupAll());
    libNtve_gf_SetDialogItemTextWriteoutDuration(DialogControlLastCreated(), MimicStartingExperienceLib_gv_sE_MsgWriteOutDuration, PlayerGroupAll());
    Wait(lp_duration, c_timeGame);
    DialogControlFadeTransparency(lv_localPanel, PlayerGroupAll(), 1.0, 100.0);
    Wait(1.0, c_timeGame);
    if ((MimicStartingExperienceLib_gv_sE_VOMsgPanel == lv_localPanel)) {
        MimicStartingExperienceLib_gv_sE_VOMsgPanel = c_invalidDialogControlId;
    }

    DialogControlDestroy(lv_localPanel);
    return true;
}

trigger auto_MimicStartingExperienceLib_gf_DisplayVOMessageAtTop_Trigger = null;
text auto_MimicStartingExperienceLib_gf_DisplayVOMessageAtTop_lp_msg;
fixed auto_MimicStartingExperienceLib_gf_DisplayVOMessageAtTop_lp_duration;
bool auto_MimicStartingExperienceLib_gf_DisplayVOMessageAtTop_lp_writeOut;

void MimicStartingExperienceLib_gf_DisplayVOMessageAtTop (text lp_msg, fixed lp_duration, bool lp_writeOut) {
    auto_MimicStartingExperienceLib_gf_DisplayVOMessageAtTop_lp_msg = lp_msg;
    auto_MimicStartingExperienceLib_gf_DisplayVOMessageAtTop_lp_duration = lp_duration;
    auto_MimicStartingExperienceLib_gf_DisplayVOMessageAtTop_lp_writeOut = lp_writeOut;

    if (auto_MimicStartingExperienceLib_gf_DisplayVOMessageAtTop_Trigger == null) {
        auto_MimicStartingExperienceLib_gf_DisplayVOMessageAtTop_Trigger = TriggerCreate("auto_MimicStartingExperienceLib_gf_DisplayVOMessageAtTop_TriggerFunc");
    }

    TriggerExecute(auto_MimicStartingExperienceLib_gf_DisplayVOMessageAtTop_Trigger, false, false);
}

bool auto_MimicStartingExperienceLib_gf_DisplayVOMessageAtTop_TriggerFunc (bool testConds, bool runActions) {
    text lp_msg = auto_MimicStartingExperienceLib_gf_DisplayVOMessageAtTop_lp_msg;
    fixed lp_duration = auto_MimicStartingExperienceLib_gf_DisplayVOMessageAtTop_lp_duration;
    bool lp_writeOut = auto_MimicStartingExperienceLib_gf_DisplayVOMessageAtTop_lp_writeOut;

    // Variable Declarations
    int lv_localPanel;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_localPanel = c_invalidDialogControlId;

    // Implementation
    MimicStartingExperienceLib_gf_DisplayVOMessage(lp_msg, lp_duration, lp_writeOut);
    if ((MimicStartingExperienceLib_gv_sE_VOMsgDialog != c_invalidDialogId)) {
        DialogSetPosition(MimicStartingExperienceLib_gv_sE_VOMsgDialog, c_anchorTop, 0, 75);
    }

    return true;
}

void MimicStartingExperienceLib_gf_ClearVOMessage () {
    // Automatic Variable Declarations
    // Implementation
    if ((MimicStartingExperienceLib_gv_sE_VOMsgPanel != c_invalidDialogControlId)) {
        DialogControlFadeTransparency(MimicStartingExperienceLib_gv_sE_VOMsgPanel, PlayerGroupAll(), 0.0, 100.0);
        MimicStartingExperienceLib_gv_sE_VOMsgPanel = c_invalidDialogControlId;
    }

}

void MimicStartingExperienceLib_gf_DisplayVOMessageGamePaused (text lp_msg, int lp_icon, bool lp_writeOut) {
    // Variable Declarations
    int lv_localPanel;
    int lv_itCamp;

    // Automatic Variable Declarations
    int autoF2B4B23C_val;

    // Variable Initialization
    lv_localPanel = c_invalidDialogControlId;

    // Implementation
    if (((MimicStartingExperienceLib_gv_automation_Debug == true) || (GameIsTestMap(true) == true))) {
        return ;
    }

    if ((MimicStartingExperienceLib_gv_sE_HintMsgPanel != c_invalidDialogControlId)) {
        DialogControlSetVisible(MimicStartingExperienceLib_gv_sE_HintMsgPanel, PlayerGroupAll(), false);
    }

    SoundChannelMute(PlayerGroupAll(), c_soundCategoryDoodad, true);
    SoundChannelMute(PlayerGroupAll(), c_soundCategoryUser2, true);
    SoundChannelSetVolume(PlayerGroupAll(), c_soundCategoryMusic, 0.0, 0.25);
    Wait(0.25, c_timeGame);
    SoundPlayForPlayer(SoundLink("UI_Tutorial01_VO_Message_Paused_Display", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    SoundPlayForPlayer(SoundLink("UI_Tutorial01_VO_Message_Display", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    SoundPlayForPlayer(SoundLink("UI_Tutorial01_Text_Crawl", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    autoF2B4B23C_val = lp_icon;
    if (autoF2B4B23C_val == MimicStartingExperienceLib_ge_SE_VOMessageType_tribute) {
        UIShowCustomDialogWithTemplate(PlayerGroupAll(), libNtve_ge_CustomDialogType_c_customDialogTypeMessage, null, lp_msg, true, "TutorialUI/TutorialTextBoxPausedDialogTribute");
    }
    else if (autoF2B4B23C_val == MimicStartingExperienceLib_ge_SE_VOMessageType_tower) {
        UIShowCustomDialogWithTemplate(PlayerGroupAll(), libNtve_ge_CustomDialogType_c_customDialogTypeMessage, null, lp_msg, true, "TutorialUI/TutorialTextBoxPausedDialogTower");
    }
    else if (autoF2B4B23C_val == MimicStartingExperienceLib_ge_SE_VOMessageType_mount) {
        UIShowCustomDialogWithTemplate(PlayerGroupAll(), libNtve_ge_CustomDialogType_c_customDialogTypeMessage, null, lp_msg, true, "TutorialUI/TutorialTextBoxPausedDialogMount");
    }
    else if (autoF2B4B23C_val == MimicStartingExperienceLib_ge_SE_VOMessageType_level) {
        UIShowCustomDialogWithTemplate(PlayerGroupAll(), libNtve_ge_CustomDialogType_c_customDialogTypeMessage, null, lp_msg, true, "TutorialUI/TutorialTextBoxPausedDialogLevelup");
    }
    else if (autoF2B4B23C_val == MimicStartingExperienceLib_ge_SE_VOMessageType_globe) {
        UIShowCustomDialogWithTemplate(PlayerGroupAll(), libNtve_ge_CustomDialogType_c_customDialogTypeMessage, null, lp_msg, true, "TutorialUI/TutorialTextBoxPausedDialogGlobe");
    }
    else if (autoF2B4B23C_val == MimicStartingExperienceLib_ge_SE_VOMessageType_fountain) {
        UIShowCustomDialogWithTemplate(PlayerGroupAll(), libNtve_ge_CustomDialogType_c_customDialogTypeMessage, null, lp_msg, true, "TutorialUI/TutorialTextBoxPausedDialogFountain");
    }
    else if (autoF2B4B23C_val == MimicStartingExperienceLib_ge_SE_VOMessageType_ammo) {
        UIShowCustomDialogWithTemplate(PlayerGroupAll(), libNtve_ge_CustomDialogType_c_customDialogTypeMessage, null, lp_msg, true, "TutorialUI/TutorialTextBoxPausedDialogAmmo");
    }
    else {
        UIShowCustomDialogWithTemplate(PlayerGroupAll(), libNtve_ge_CustomDialogType_c_customDialogTypeMessage, null, lp_msg, true, "TutorialUI/TutorialTextBoxPausedDialogTemplate");
    }
    Wait(0.125, c_timeGame);
    SoundChannelSetVolume(PlayerGroupAll(), c_soundCategoryMusic, 100.0, 2.0);
    if ((MimicStartingExperienceLib_gv_sE_HintMsgPanel != c_invalidDialogControlId)) {
        DialogControlSetVisible(MimicStartingExperienceLib_gv_sE_HintMsgPanel, PlayerGroupAll(), true);
    }

}

void MimicStartingExperienceLib_gf_ClearVOMessageGamePaused (int lp_player) {
    // Variable Declarations
    int lv_itCamp;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if (((MimicStartingExperienceLib_gv_automation_Debug == true) || (GameIsTestMap(true) == true))) {
        return ;
    }

    SoundPlay(SoundLink("UI_Tutorial01_VO_Message_Paused_Clear", -1), libCore_gv_playerGroupFromPlayer[MimicStartingExperienceLib_gv_sE_Player], 100.0, 0.0);
    SoundChannelMute(PlayerGroupAll(), c_soundCategoryDoodad, false);
    SoundChannelMute(PlayerGroupAll(), c_soundCategoryUser2, false);
    SoundChannelSetVolume(PlayerGroupAll(), c_soundCategoryMusic, 100.0, 2.0);
}

bool MimicStartingExperienceLib_gf_PlayerIsInCombat (int lp_player) {
    // Variable Declarations
    fixed lv_combatTime;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((libNtve_gf_PlayerInCinematicMode(lp_player) == true)) {
        return false;
    }

    lv_combatTime = MaxF(PlayerGetPropertyFixed(lp_player, c_playerPropDamageTakenTime), PlayerGetPropertyFixed(lp_player, c_playerPropDamageDealtTime));
    lv_combatTime = (TimerGetElapsed(libGame_gv_gobalTimer) - lv_combatTime);
    return (lv_combatTime < 3.0);
}

bool MimicStartingExperienceLib_gf_PlayerIsBeingAttacked () {
    // Variable Declarations
    fixed lv_combatTime;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((libNtve_gf_PlayerInCinematicMode(1) == true)) {
        return false;
    }

    lv_combatTime = PlayerGetPropertyFixed(1, c_playerPropDamageTakenTime);
    lv_combatTime = (TimerGetElapsed(libGame_gv_gobalTimer) - lv_combatTime);
    return (lv_combatTime < 3.0);
}

bool MimicStartingExperienceLib_gf_PlayerIsAttacking () {
    // Variable Declarations
    fixed lv_combatTime;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((libNtve_gf_PlayerInCinematicMode(1) == true)) {
        return false;
    }

    lv_combatTime = PlayerGetPropertyFixed(1, c_playerPropDamageDealtTime);
    lv_combatTime = (TimerGetElapsed(libGame_gv_gobalTimer) - lv_combatTime);
    return (lv_combatTime < 3.0);
}

void MimicStartingExperienceLib_gf_MapCutsceneAdd (string lp_cutscene1Name, string lp_cutscene2Name, string lp_orderCutsceneFile, string lp_chaosCutsceneFile) {
    // Automatic Variable Declarations
    // Implementation
    MimicStartingExperienceLib_gv_mapCutsceneStrings[1] = lp_cutscene1Name;
    MimicStartingExperienceLib_gv_mapCutsceneStrings[2] = lp_cutscene2Name;
    MimicStartingExperienceLib_gv_mapCutsceneFiles[1] = lp_orderCutsceneFile;
    MimicStartingExperienceLib_gv_mapCutsceneFiles[2] = lp_chaosCutsceneFile;
}

bool MimicStartingExperienceLib_gf_TutorialCameraLocked () {
    // Automatic Variable Declarations
    // Implementation
    return MimicStartingExperienceLib_gv_sETutorialCameraLocked;
}

void MimicStartingExperienceLib_gf_DisplayCameraLockNotificationText (bool lp_lockUnlock, int lp_player) {
    // Variable Declarations
    text lv_label;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((lp_lockUnlock == true)) {
        lv_label = StringExternal("Param/Value/lib_StEx_AFF24376");
        SoundPlayForPlayer(SoundLink("UI_Game_Camera_Locked", -1), c_maxPlayers, libCore_gv_playerGroupFromPlayer[lp_player], 100.0, 0.0);
    }
    else {
        lv_label = StringExternal("Param/Value/lib_StEx_4C9338EF");
        SoundPlayForPlayer(SoundLink("UI_Game_Camera_Unlocked", -1), c_maxPlayers, libCore_gv_playerGroupFromPlayer[lp_player], 100.0, 0.0);
    }
    DialogControlHookupStandard(c_triggerControlTypeLabel, "UIContainer/ConsoleUIContainer/CameraLockChanges");
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), lv_label, libCore_gv_playerGroupFromPlayer[lp_player]);
    DialogControlFadeTransparency(DialogControlLastCreated(), libCore_gv_playerGroupFromPlayer[lp_player], 0.0, 0.0);
    DialogControlSetEnabled(DialogControlLastCreated(), libCore_gv_playerGroupFromPlayer[lp_player], false);
    DialogControlSetEnabled(DialogControlLastCreated(), libCore_gv_playerGroupFromPlayer[lp_player], true);
}

void MimicStartingExperienceLib_gf_LockUnlockTutorialCamera (bool lp_lockUnlock) {
    // Automatic Variable Declarations
    // Implementation
    if ((lp_lockUnlock == false)) {
        MimicStartingExperienceLib_gv_sETutorialCameraLocked = false;
        PlayerOptionOverride(1, "camerafollow", "0");
    }
    else {
        MimicStartingExperienceLib_gv_sETutorialCameraLocked = true;
        PlayerOptionOverride(1, "camerafollow", "1");
    }
}

void MimicStartingExperienceLib_gf_RestoreTutorialCameraLockSetting () {
    // Automatic Variable Declarations
    // Implementation
    if ((MimicStartingExperienceLib_gv_sETutorialCameraLocked == true)) {
        PlayerOptionOverride(1, "camerafollow", "1");
    }
    else {
        PlayerOptionOverride(1, "camerafollow", "0");
    }
}

void MimicStartingExperienceLib_gf_TurnCinematicCameraOnOff (int lp_player, bool lp_onOff) {
    // Automatic Variable Declarations
    int auto756E83E4_val;

    // Implementation
    if ((MimicStartingExperienceLib_gv_simpleCinematic_CameraLocked2[lp_player] == lp_onOff)) {
        return ;
    }

    MimicStartingExperienceLib_gv_simpleCinematic_CameraLocked2[lp_player] = lp_onOff;
    if ((lp_onOff == true)) {
        PlayerOptionOverride(lp_player, "camerafollow", "0");
        CameraLockInput(lp_player, true);
    }
    else {
        auto756E83E4_val = libCore_gv_sYSGameMode;
        if (auto756E83E4_val == libCore_ge_GameModes_Tutorial1Deprecated) {
            if ((MimicStartingExperienceLib_gv_sETutorialCameraLocked == true)) {
                MimicStartingExperienceLib_gf_LockUnlockTutorialCamera(true);
            }
            else {
                MimicStartingExperienceLib_gf_LockUnlockTutorialCamera(false);
            }
        }
        else if (auto756E83E4_val == libCore_ge_GameModes_Tutorial1) {
            PlayerOptionOverride(lp_player, "camerafollow", null);
        }
        else {
            PlayerOptionOverride(lp_player, "camerafollow", null);
        }
        CameraLockInput(lp_player, false);
    }
}

void MimicStartingExperienceLib_gf_CinematicModeTutorial (bool lp_onOff, playergroup lp_players, fixed lp_duration) {
    // Variable Declarations
    playergroup lv_validPlayers;
    int lv_itPlayer;
    unit lv_itUnit;
    int lv_deathStunFrame;

    // Automatic Variable Declarations
    playergroup autoDD6E9A98_g;
    playergroup auto7CFBEC26_g;
    playergroup auto0202F0E6_g;
    unitgroup autoF771BC5C_g;
    int autoF771BC5C_u;
    unitgroup autoB61E6A86_g;
    int autoB61E6A86_u;
    playergroup auto6C8C05E5_g;
    playergroup auto797452B9_g;

    // Variable Initialization
    lv_validPlayers = PlayerGroupEmpty();
    lv_deathStunFrame = c_invalidDialogControlId;

    // Implementation
    lv_validPlayers = PlayerGroupCopy(lp_players);
    if ((lp_onOff == true)) {
        auto7CFBEC26_g = lv_validPlayers;
        lv_itPlayer = -1;
        while (true) {
            	lv_itPlayer = PlayerGroupNextPlayer(auto7CFBEC26_g, lv_itPlayer);
            	if (lv_itPlayer<0) { break; }
            	if ((libNtve_gf_PlayerInCinematicMode(lv_itPlayer) == true)) {
                PlayerGroupRemove(lv_validPlayers, lv_itPlayer);
            }

        }
        if ((PlayerGroupCount(lv_validPlayers) == 0)) {
            return ;
        }

    }
    else {
        autoDD6E9A98_g = lv_validPlayers;
        lv_itPlayer = -1;
        while (true) {
            	lv_itPlayer = PlayerGroupNextPlayer(autoDD6E9A98_g, lv_itPlayer);
            	if (lv_itPlayer<0) { break; }
            	if ((libNtve_gf_PlayerInCinematicMode(lv_itPlayer) == false)) {
                PlayerGroupRemove(lv_validPlayers, lv_itPlayer);
            }

        }
        if ((PlayerGroupCount(lv_validPlayers) == 0)) {
            return ;
        }

    }
    libNtve_gf_CinematicMode(lp_onOff, lv_validPlayers, lp_duration);
    if ((lp_onOff == true)) {
        UISetFrameVisible(lv_validPlayers, c_syncFrameTypeTextTag, false);
        if ((libCore_gv_sYSGameMode != libCore_ge_GameModes_TutorialVeteran)) {
            UnitGroupClear(MimicStartingExperienceLib_gv_sEUnitGroupRemovedRing);
            autoB61E6A86_g = UnitGroup(null, c_playerAny, RegionEntireMap(), libCore_gv_filtersHeroic, 0);
            autoB61E6A86_u = UnitGroupCount(autoB61E6A86_g, c_unitCountAll);
            for (;; autoB61E6A86_u -= 1) {
                lv_itUnit = UnitGroupUnitFromEnd(autoB61E6A86_g, autoB61E6A86_u);
                if (lv_itUnit == null) { break; }
                if ((UnitHasBehavior2(lv_itUnit, "VideoDebug") == false)) {
                    UnitGroupAdd(MimicStartingExperienceLib_gv_sEUnitGroupRemovedRing, lv_itUnit);
                    UnitBehaviorAddPlayer(lv_itUnit, "VideoDebug", UnitGetOwner(lv_itUnit), 1);
                }

            }
        }

        auto6C8C05E5_g = lv_validPlayers;
        lv_itPlayer = -1;
        while (true) {
            	lv_itPlayer = PlayerGroupNextPlayer(auto6C8C05E5_g, lv_itPlayer);
            	if (lv_itPlayer<0) { break; }
            	if ((lv_itPlayer <= libCore_gv_bALMaxPlayers) && (libGame_gv_players[lv_itPlayer].lv_heroUnit != null)) {
                PlayerCreateEffectUnit(lv_itPlayer, "GodRayDestroyPersistent", libGame_gv_players[lv_itPlayer].lv_heroUnit);
            }

        }
        auto797452B9_g = lv_validPlayers;
        lv_itPlayer = -1;
        while (true) {
            	lv_itPlayer = PlayerGroupNextPlayer(auto797452B9_g, lv_itPlayer);
            	if (lv_itPlayer<0) { break; }
            	libNtve_gf_StoreUnitSelection(lv_itPlayer, libNtve_ge_UnitSelectionStoreOption_ClearUnitSelection);
        }
        if (((libCore_gv_sYSGameMode == libCore_ge_GameModes_Tutorial1Deprecated) || (libCore_gv_sYSGameMode == libCore_ge_GameModes_Tutorial1))) {
            DialogControlHookupStandard(c_triggerControlTypePanel, "UIContainer/FullscreenUpperContainer/ChatBar");
            DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorBottom, 0, 10);
        }

        SetHeroLeaderPanelEnabled(false);
    }
    else {
        if ((MimicStartingExperienceLib_gv_tutorialCinematicRestoreSelection == true)) {
            auto0202F0E6_g = lv_validPlayers;
            lv_itPlayer = -1;
            while (true) {
                	lv_itPlayer = PlayerGroupNextPlayer(auto0202F0E6_g, lv_itPlayer);
                	if (lv_itPlayer<0) { break; }
                	libNtve_gf_RestoreUnitSelection(lv_itPlayer);
            }
        }

        if ((libCore_gv_sYSGameMode != libCore_ge_GameModes_TutorialVeteran)) {
            autoF771BC5C_g = MimicStartingExperienceLib_gv_sEUnitGroupRemovedRing;
            autoF771BC5C_u = UnitGroupCount(autoF771BC5C_g, c_unitCountAll);
            for (;; autoF771BC5C_u -= 1) {
                lv_itUnit = UnitGroupUnitFromEnd(autoF771BC5C_g, autoF771BC5C_u);
                if (lv_itUnit == null) { break; }
                UnitBehaviorRemovePlayer(lv_itUnit, "VideoDebug", UnitGetOwner(lv_itUnit), 1);
            }
            UnitGroupClear(MimicStartingExperienceLib_gv_sEUnitGroupRemovedRing);
        }

        UISetFrameVisible(lv_validPlayers, c_syncFrameTypeTextTag, true);
        if ((libCore_gv_sYSGameMode == libCore_ge_GameModes_Tutorial1Deprecated)) {
            UISetHotkeyAllowed(PlayerGroupAll(), c_hotkeyCameraFollow, false);
        }

        if (((libCore_gv_sYSGameMode == libCore_ge_GameModes_Tutorial1Deprecated) || (libCore_gv_sYSGameMode == libCore_ge_GameModes_Tutorial1) || (libCore_gv_sYSGameMode == libCore_ge_GameModes_TutorialMapMechanics) || (libCore_gv_sYSGameMode == libCore_ge_GameModes_TutorialVeteran))) {
            DialogControlHookupStandard(c_triggerControlTypePanel, "UIContainer/ConsoleUIContainer/HeroDeathStunFrame");
            lv_deathStunFrame = DialogControlLastCreated();
            DialogControlHookupStandard(c_triggerControlTypePanel, "UIContainer/FullscreenUpperContainer/ChatBar");
            DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorBottom, lv_deathStunFrame, c_anchorTop, 0, 0);
        }

        if ((libCore_gv_sYSGameMode != libCore_ge_GameModes_Tutorial1Deprecated) && (libCore_gv_sYSGameMode != libCore_ge_GameModes_TutorialVeteran)) {
            SetHeroLeaderPanelEnabled(true);
        }

    }
}

void MimicStartingExperienceLib_gf_SemiCinematicModeTutorial (bool lp_onOff, fixed lp_period) {
    // Automatic Variable Declarations
    // Implementation
    if ((lp_onOff == true)) {
        MimicStartingExperienceLib_gf_TurnCinematicCameraOnOff(1, true);
        MimicStartingExperienceLib_gf_FreezeUnfreezeAllUnits(MimicStartingExperienceLib_ge_FreezeOptions_Freeze);
        UISetCursorVisible(PlayerGroupAll(), false);
        DialogControlHookupStandard(c_triggerControlTypePanel, "UIContainer/ConsolePanel/GameHudBackFill");
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupAll(), lp_period, 100.0);
        DialogControlHookupStandard(c_triggerControlTypePanel, "UIContainer/ConsoleUIContainer/CommandPanel");
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupAll(), lp_period, 100.0);
    }
    else {
        MimicStartingExperienceLib_gf_TurnCinematicCameraOnOff(1, false);
        MimicStartingExperienceLib_gf_FreezeUnfreezeAllUnits(MimicStartingExperienceLib_ge_FreezeOptions_Unfrezze);
        UISetCursorVisible(PlayerGroupAll(), true);
        DialogControlHookupStandard(c_triggerControlTypePanel, "UIContainer/ConsolePanel/GameHudBackFill");
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupAll(), lp_period, 0.0);
        DialogControlHookupStandard(c_triggerControlTypePanel, "UIContainer/ConsoleUIContainer/CommandPanel");
        DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupAll(), lp_period, 0.0);
    }
}

void MimicStartingExperienceLib_gf_GlobalCinematicSettingTutorial (bool lp_onOff) {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_GlobalCinematicSetting(lp_onOff);
    if ((lp_onOff == false)) {
        GameSetSpeedLocked(true);
    }

}

text MimicStartingExperienceLib_gf_CameraLockHotkeyText () {
    // Automatic Variable Declarations
    // Implementation
    if ((libCore_gv_sYSGameMode == libCore_ge_GameModes_Tutorial1Deprecated)) {
        return StringExternal("Param/Value/lib_StEx_CD8C6CA4");
    }
    else {
        TextExpressionSetToken("Param/Expression/lib_StEx_FD910C68", "A", StringExternal("Param/Value/lib_StEx_E5D4F3E4"));
        return TextExpressionAssemble("Param/Expression/lib_StEx_FD910C68");
    }
}

trigger auto_MimicStartingExperienceLib_gf_CinematicFade_Trigger = null;
bool auto_MimicStartingExperienceLib_gf_CinematicFade_lp_fadeIn;
fixed auto_MimicStartingExperienceLib_gf_CinematicFade_lp_duration;
color auto_MimicStartingExperienceLib_gf_CinematicFade_lp_color;
int auto_MimicStartingExperienceLib_gf_CinematicFade_lp_player;

void MimicStartingExperienceLib_gf_CinematicFade (bool lp_fadeIn, fixed lp_duration, color lp_color, int lp_player) {
    auto_MimicStartingExperienceLib_gf_CinematicFade_lp_fadeIn = lp_fadeIn;
    auto_MimicStartingExperienceLib_gf_CinematicFade_lp_duration = lp_duration;
    auto_MimicStartingExperienceLib_gf_CinematicFade_lp_color = lp_color;
    auto_MimicStartingExperienceLib_gf_CinematicFade_lp_player = lp_player;

    if (auto_MimicStartingExperienceLib_gf_CinematicFade_Trigger == null) {
        auto_MimicStartingExperienceLib_gf_CinematicFade_Trigger = TriggerCreate("auto_MimicStartingExperienceLib_gf_CinematicFade_TriggerFunc");
    }

    TriggerExecute(auto_MimicStartingExperienceLib_gf_CinematicFade_Trigger, false, false);
}

bool auto_MimicStartingExperienceLib_gf_CinematicFade_TriggerFunc (bool testConds, bool runActions) {
    bool lp_fadeIn = auto_MimicStartingExperienceLib_gf_CinematicFade_lp_fadeIn;
    fixed lp_duration = auto_MimicStartingExperienceLib_gf_CinematicFade_lp_duration;
    color lp_color = auto_MimicStartingExperienceLib_gf_CinematicFade_lp_color;
    int lp_player = auto_MimicStartingExperienceLib_gf_CinematicFade_lp_player;

    // Variable Declarations
    int lv_control;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_control = c_invalidDialogControlId;

    // Implementation
    DialogControlHookupStandard(c_triggerControlTypeImage, "FadeImagePlayer");
    lv_control = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), libCore_gv_playerGroupFromPlayer[lp_player], true);
    libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), lp_color, libCore_gv_playerGroupFromPlayer[lp_player]);
    if ((lp_fadeIn == true)) {
        DialogControlFadeTransparency(DialogControlLastCreated(), libCore_gv_playerGroupFromPlayer[lp_player], 0.0, 0.0);
        DialogControlFadeTransparency(DialogControlLastCreated(), libCore_gv_playerGroupFromPlayer[lp_player], lp_duration, 100.0);
        Wait(lp_duration, c_timeGame);
        DialogControlSetVisible(DialogControlLastCreated(), libCore_gv_playerGroupFromPlayer[lp_player], false);
    }
    else {
        DialogControlFadeTransparency(DialogControlLastCreated(), libCore_gv_playerGroupFromPlayer[lp_player], 0.0, 100.0);
        DialogControlFadeTransparency(DialogControlLastCreated(), libCore_gv_playerGroupFromPlayer[lp_player], lp_duration, 0.0);
    }
    return true;
}

playergroup MimicStartingExperienceLib_gf_MapMechanicIntroPlayers () {
    // Automatic Variable Declarations
    // Implementation
    return MimicStartingExperienceLib_gv_sEMMIntroPlayersWatching;
}

void MimicStartingExperienceLib_gf_SetMapMechanicTutorialCallback (trigger lp_callback) {
    // Automatic Variable Declarations
    // Implementation
    MimicStartingExperienceLib_gv_sEMMIntroCallback = lp_callback;
}

void MimicStartingExperienceLib_gf_SetMapMechanicTutorialCallbackPrepareCleanup (trigger lp_callbackPrepare, trigger lp_callbackCleanup) {
    // Automatic Variable Declarations
    // Implementation
    MimicStartingExperienceLib_gv_sEMMIntroCallbackPrepare = lp_callbackPrepare;
    MimicStartingExperienceLib_gv_sEMMIntroCallbackCleanup = lp_callbackCleanup;
}

trigger auto_MimicStartingExperienceLib_gf_PlayMapMechanicTutorial_Trigger = null;

void MimicStartingExperienceLib_gf_PlayMapMechanicTutorial () {
    if (auto_MimicStartingExperienceLib_gf_PlayMapMechanicTutorial_Trigger == null) {
        auto_MimicStartingExperienceLib_gf_PlayMapMechanicTutorial_Trigger = TriggerCreate("auto_MimicStartingExperienceLib_gf_PlayMapMechanicTutorial_TriggerFunc");
    }

    TriggerExecute(auto_MimicStartingExperienceLib_gf_PlayMapMechanicTutorial_Trigger, false, false);
}

bool auto_MimicStartingExperienceLib_gf_PlayMapMechanicTutorial_TriggerFunc (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_itPlayer;
    int lv_itCutscene;
    int lv_heroModelPickedCount;
    const int lv_heroModelPickedTotalCount_C = 4;
    string lv_heroModel;
    actor[lv_heroModelPickedTotalCount_C + 1] lv_heroActors;
    playergroup lv_players;
    playergroup lv_playersModelGood;
    int lv_playerHeroIndex;
    int lv_itIndex;
    playergroup lv_playersFinished;
    string[11] lv_availableHero;
    int lv_itAvailableHeroIndex;
    string[11] lv_usedHero;
    int lv_usedHeroCount;
    int lv_itUsedHeroIndex;
    bool lv_heroUsed;
    string lv_filter;

    // Automatic Variable Declarations
    const int autoD146BB97_ae = libCore_gv_bALMaxPlayers;
    const int autoD146BB97_ai = 1;
    const int auto5AA971D1_ae = libCore_gv_bALMaxTeams;
    const int auto5AA971D1_ai = 1;
    playergroup auto90121117_g;
    playergroup autoC85A5C0E_g;
    const int auto94DB76D7_ae = 4;
    const int auto94DB76D7_ai = 1;
    int auto3D71EA53_ae;
    const int auto3D71EA53_ai = 1;
    playergroup auto0AC6F8C5_g;
    playergroup auto8B09191C_g;
    int autoAB371E74_ae;
    const int autoAB371E74_ai = 1;

    // Variable Initialization
    lv_players = PlayerGroupEmpty();
    lv_playersModelGood = PlayerGroupEmpty();
    lv_playersFinished = PlayerGroupEmpty();
    lv_filter = "";

    // Implementation
    if (((libCore_gv_mAPMapStringID == "") || (libCore_gv_sYSGameMode != libCore_ge_GameModes_Normal))) {
        return true;
    }
    else {
        if ((libMapM_gf_MapMechanicExistsOnMap("BattlefieldOfEternity") == true)) {
            MimicStartingExperienceLib_gf_MapCutsceneAdd("Cutscenes\\\\Tutorial_BattlefieldOfEternity", "", "Cutscenes\\Tutorial_BattlefieldOfEternity.StormCutscene", "Cutscenes\\Tutorial_BattlefieldOfEternity.StormCutscene");
        }
        else {
            if ((libMapM_gf_MapMechanicExistsOnMap("BlackheartsBay") == true)) {
                MimicStartingExperienceLib_gf_MapCutsceneAdd("Cutscenes\\Tutorial_BlackheartsBay.StormCutscene", "Cutscenes\\Tutorial_BlackheartsBay_other.StormCutscene", "Cutscenes\\Tutorial_BlackheartsBay.StormCutscene", "Cutscenes\\Tutorial_BlackheartsBay_other.StormCutscene");
            }
            else {
                if ((libMapM_gf_MapMechanicExistsOnMap("HoldOut") == true)) {
                    MimicStartingExperienceLib_gf_MapCutsceneAdd("Cutscenes\\Tutorial_BraxisHoldout", "", "Cutscenes\\Tutorial_BraxisHoldout.StormCutscene", "Cutscenes\\Tutorial_BraxisHoldout.StormCutscene");
                }
                else {
                    if ((libMapM_gf_MapMechanicExistsOnMap("CursedHollow") == true)) {
                        MimicStartingExperienceLib_gf_MapCutsceneAdd("Cutscenes\\Tutorial_CursedHollow.StormCutscene", "Cutscenes\\Tutorial_CursedHollow_other.StormCutscene", "Cutscenes\\Tutorial_CursedHollow.StormCutscene", "Cutscenes\\Tutorial_CursedHollow_other.StormCutscene");
                    }
                    else {
                        if ((libMapM_gf_MapMechanicExistsOnMap("DragonShire") == true)) {
                            MimicStartingExperienceLib_gf_MapCutsceneAdd("Cutscenes\\Tutorial_Dragonshire.StormCutscene", "Cutscenes\\Tutorial_Dragonshire_other.StormCutscene", "Cutscenes\\Tutorial_Dragonshire.StormCutscene", "Cutscenes\\Tutorial_Dragonshire_other.StormCutscene");
                        }
                        else {
                            if ((libMapM_gf_MapMechanicExistsOnMap("GardenOfTerror") == true)) {
                                MimicStartingExperienceLib_gf_MapCutsceneAdd("Cutscenes\\Tutorial_GardenOfTerror.StormCutscene", "Cutscenes\\Tutorial_GardenOfTerror_other.StormCutscene", "Cutscenes\\Tutorial_GardenOfTerror.StormCutscene", "Cutscenes\\Tutorial_GardenOfTerror_other.StormCutscene");
                            }
                            else {
                                if ((libMapM_gf_MapMechanicExistsOnMap("HauntedMines") == true)) {
                                    MimicStartingExperienceLib_gf_MapCutsceneAdd("Cutscenes\\Tutorial_HauntedMines.StormCutscene", "Cutscenes\\Tutorial_HauntedMines_other.StormCutscene", "Cutscenes\\Tutorial_HauntedMines.StormCutscene", "Cutscenes\\Tutorial_HauntedMines_other.StormCutscene");
                                }
                                else {
                                    if ((libMapM_gf_MapMechanicExistsOnMap("InfernalShrines") == true)) {
                                        MimicStartingExperienceLib_gf_MapCutsceneAdd("Cutscenes\\Tutorial_InfernalShrines", "", "Cutscenes\\Tutorial_InfernalShrines.StormCutscene", "Cutscenes\\Tutorial_InfernalShrines.StormCutscene");
                                    }
                                    else {
                                        if ((libMapM_gf_MapMechanicExistsOnMap("SkyTemple") == true)) {
                                            MimicStartingExperienceLib_gf_MapCutsceneAdd("Cutscenes\\Tutorial_SkyTemple.StormCutscene", "", "Cutscenes\\Tutorial_SkyTemple.StormCutscene", "Cutscenes\\Tutorial_SkyTemple.StormCutscene");
                                        }
                                        else {
                                            if ((libMapM_gf_MapMechanicExistsOnMap("TombOfTheSpiderQueen") == true)) {
                                                MimicStartingExperienceLib_gf_MapCutsceneAdd("Cutscenes\\Tutorial_TombOfTheSpiderQueen", "", "Cutscenes\\Tutorial_TombOfTheSpiderQueen.StormCutscene", "Cutscenes\\Tutorial_TombOfTheSpiderQueen.StormCutscene");
                                            }
                                            else {
                                                if ((libMapM_gf_MapMechanicExistsOnMap("TowersOfDoom") == true)) {
                                                    MimicStartingExperienceLib_gf_MapCutsceneAdd("Cutscenes\\Tutorial_TowersOfDoom", "", "Cutscenes\\Tutorial_TowersOfDoom.StormCutscene", "Cutscenes\\Tutorial_TowersOfDoom.StormCutscene");
                                                }
                                                else {
                                                    if ((libMapM_gf_MapMechanicExistsOnMap("WarheadJunction") == true)) {
                                                        MimicStartingExperienceLib_gf_MapCutsceneAdd("Cutscenes\\Tutorial_WarheadJunction", "", ("Cutscenes\\Tutorial_WarheadJunction.StormCutscene"), ("Cutscenes\\Tutorial_WarheadJunction.StormCutscene"));
                                                    }

                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if (((MimicStartingExperienceLib_gv_mapCutsceneFiles[1] == null) || (MimicStartingExperienceLib_gv_mapCutsceneFiles[2] == null))) {
        return true;
    }

    PlayerGroupClear(MimicStartingExperienceLib_gv_sEMMIntroPlayersWatching);
    PlayerGroupClear(MimicStartingExperienceLib_gv_sEMMIntroPlayersInitiallyWatching);
    lv_itPlayer = 1;
    for ( ; ( (autoD146BB97_ai >= 0 && lv_itPlayer <= autoD146BB97_ae) || (autoD146BB97_ai < 0 && lv_itPlayer >= autoD146BB97_ae) ) ; lv_itPlayer += autoD146BB97_ai ) {
        if ((PlayerStatus(lv_itPlayer) != c_playerStatusUnused) && (PlayerType(lv_itPlayer) == c_playerTypeUser)) {
            if (((MimicStartingExperienceLib_gf_InTrainingMode() == true) || (MimicStartingExperienceLib_gf_InPracticeMode() == true))) {
                PlayerGroupAdd(MimicStartingExperienceLib_gv_sEMMIntroPlayersWatching, lv_itPlayer);
                PlayerGroupAdd(MimicStartingExperienceLib_gv_sEMMIntroPlayersInitiallyWatching, lv_itPlayer);
            }

        }

    }
    if ((PlayerGroupCount(MimicStartingExperienceLib_gv_sEMMIntroPlayersWatching) <= 0)) {
        return true;
    }

    if ((MimicStartingExperienceLib_gf_GameIsSinglePlayer() == true)) {
        libGame_gv_heroSpawnReady = false;
    }

    lv_itCutscene = 1;
    for ( ; ( (auto5AA971D1_ai >= 0 && lv_itCutscene <= auto5AA971D1_ae) || (auto5AA971D1_ai < 0 && lv_itCutscene >= auto5AA971D1_ae) ) ; lv_itCutscene += auto5AA971D1_ai ) {
        if ((MimicStartingExperienceLib_gv_mapCutsceneStrings[lv_itCutscene] != "")) {
            PreloadAsset(MimicStartingExperienceLib_gv_mapCutsceneStrings[lv_itCutscene], false);
        }

    }
    auto90121117_g = MimicStartingExperienceLib_gv_sEMMIntroPlayersWatching;
    lv_itPlayer = -1;
    while (true) {
        	lv_itPlayer = PlayerGroupNextPlayer(auto90121117_g, lv_itPlayer);
        	if (lv_itPlayer<0) { break; }
        	MimicStartingExperienceLib_gf_CinematicFade(false, 0.0, Color(0.00, 0.00, 0.00), lv_itPlayer);
        CutsceneFade(false, 0.0, Color(0,0,0), 0.0, libCore_gv_playerGroupFromPlayer[lv_itPlayer], false);
    }
    while (!((libGame_gv_heroPickDone == true))) {
        Wait(0.0625, c_timeGame);
    }
    libNtve_gf_AddPlayerGroupToPlayerGroup(libGame_gf_PlayersOnTeamHeroes(libGame_gv_teamOrderIndex_C, false), lv_players);
    libNtve_gf_AddPlayerGroupToPlayerGroup(libGame_gf_PlayersOnTeamHeroes(libGame_gv_teamChaosIndex_C, false), lv_players);
    autoC85A5C0E_g = lv_players;
    lv_itPlayer = -1;
    while (true) {
        	lv_itPlayer = PlayerGroupNextPlayer(autoC85A5C0E_g, lv_itPlayer);
        	if (lv_itPlayer<0) { break; }
        	if ((libGame_gv_players[lv_itPlayer].lv_heroIndex > 0) && (libGame_gv_players[lv_itPlayer].lv_heroData.lv_heroCatalogLink != null) && (CatalogFieldValueGet(c_gameCatalogHero, libGame_gv_players[lv_itPlayer].lv_heroData.lv_heroCatalogLink, "Flags[ExcludeFromMapIntro]", c_playerAny) != "1")) {
            PlayerGroupAdd(lv_playersModelGood, lv_itPlayer);
        }

    }
    while (true) {
        if (((lv_heroModelPickedCount >= lv_heroModelPickedTotalCount_C) || (PlayerGroupCount(lv_playersModelGood) == 0))) {
            break;
        }

        lv_itPlayer = PlayerGroupPlayer(lv_playersModelGood, RandomInt(1, PlayerGroupCount(lv_playersModelGood)));
        lv_playerHeroIndex = lv_itPlayer;
        PlayerGroupRemove(lv_playersModelGood, lv_itPlayer);
        lv_heroModel = (CatalogFieldValueGet(c_gameCatalogHero, libGame_gv_players[lv_itPlayer].lv_heroData.lv_heroCatalogLink, "Model", c_playerAny));
        if ((lv_heroModel != null)) {
            lv_heroModelPickedCount += 1;
            lv_usedHero[lv_heroModelPickedCount] = libGame_gv_players[lv_itPlayer].lv_heroData.lv_heroCatalogLink;
            libNtve_gf_CreateModelAtPoint(lv_heroModel, RegionGetBoundsMax(RegionPlayableMap()));
            lv_heroActors[lv_heroModelPickedCount] = libNtve_gf_ActorLastCreated();
            ActorSend(libNtve_gf_ActorLastCreated(), "ExternalFinderAdd");
            ActorSend(libNtve_gf_ActorLastCreated(), (("AliasAdd HeroModel_" + IntToString(lv_heroModelPickedCount))));
        }

    }
    if ((lv_heroModelPickedCount < lv_heroModelPickedTotalCount_C)) {
        lv_availableHero[1] = "Raynor";
        lv_availableHero[2] = "Tyrael";
        lv_availableHero[3] = "DemonHunter";
        lv_availableHero[4] = "Arthas";
        lv_itAvailableHeroIndex = 1;
        lv_usedHeroCount = lv_heroModelPickedCount;
        lv_itAvailableHeroIndex = 1;
        for ( ; ( (auto94DB76D7_ai >= 0 && lv_itAvailableHeroIndex <= auto94DB76D7_ae) || (auto94DB76D7_ai < 0 && lv_itAvailableHeroIndex >= auto94DB76D7_ae) ) ; lv_itAvailableHeroIndex += auto94DB76D7_ai ) {
            lv_heroUsed = false;
            auto3D71EA53_ae = lv_usedHeroCount;
            lv_itUsedHeroIndex = 1;
            for ( ; ( (auto3D71EA53_ai >= 0 && lv_itUsedHeroIndex <= auto3D71EA53_ae) || (auto3D71EA53_ai < 0 && lv_itUsedHeroIndex >= auto3D71EA53_ae) ) ; lv_itUsedHeroIndex += auto3D71EA53_ai ) {
                if ((lv_usedHero[lv_itUsedHeroIndex] == lv_availableHero[lv_itAvailableHeroIndex])) {
                    lv_heroUsed = true;
                    break;
                }

            }
            if ((lv_heroUsed == true)) {
                continue;
            }

            lv_heroModel = (CatalogFieldValueGet(c_gameCatalogHero, lv_availableHero[lv_itAvailableHeroIndex], "Model", c_playerAny));
            if ((lv_heroModel != null)) {
                lv_heroModelPickedCount += 1;
                libNtve_gf_CreateModelAtPoint(lv_heroModel, RegionGetBoundsMax(RegionPlayableMap()));
                lv_heroActors[lv_heroModelPickedCount] = libNtve_gf_ActorLastCreated();
                ActorSend(libNtve_gf_ActorLastCreated(), "ExternalFinderAdd");
                ActorSend(libNtve_gf_ActorLastCreated(), (("AliasAdd HeroModel_" + IntToString(lv_heroModelPickedCount))));
                if ((lv_heroModelPickedCount >= lv_heroModelPickedTotalCount_C)) {
                    break;
                }

            }

        }
    }

    if ((MimicStartingExperienceLib_gv_sEMMIntroCallback != null)) {
        TriggerExecute(MimicStartingExperienceLib_gv_sEMMIntroCallback, true, false);
    }

    if ((MimicStartingExperienceLib_gv_sEMMIntroCallbackPrepare != null)) {
        TriggerExecute(MimicStartingExperienceLib_gv_sEMMIntroCallbackPrepare, true, false);
    }

    auto0AC6F8C5_g = MimicStartingExperienceLib_gv_sEMMIntroPlayersWatching;
    lv_itPlayer = -1;
    while (true) {
        	lv_itPlayer = PlayerGroupNextPlayer(auto0AC6F8C5_g, lv_itPlayer);
        	if (lv_itPlayer<0) { break; }
        	if ((libGame_gf_TeamNumberOfPlayer(lv_itPlayer) == libGame_gv_teamChaosIndex_C)) {
            libMapM_gf_PlayMapMechanicIntroForPlayer(lv_itPlayer, MimicStartingExperienceLib_gv_mapCutsceneFiles[2], lv_filter);
        }
        else {
            libMapM_gf_PlayMapMechanicIntroForPlayer(lv_itPlayer, MimicStartingExperienceLib_gv_mapCutsceneFiles[1], lv_filter);
        }
    }
    TriggerExecute(MimicStartingExperienceLib_gt_SEMMHideHeroes, true, false);
    while (true) {
        PlayerGroupClear(lv_playersFinished);
        auto8B09191C_g = MimicStartingExperienceLib_gv_sEMMIntroPlayersWatching;
        lv_itPlayer = -1;
        while (true) {
            	lv_itPlayer = PlayerGroupNextPlayer(auto8B09191C_g, lv_itPlayer);
            	if (lv_itPlayer<0) { break; }
            	if ((libMapM_gf_MapMechanicIntroFinished(lv_itPlayer) == true)) {
                PlayerGroupAdd(lv_playersFinished, lv_itPlayer);
            }

        }
        if ((PlayerGroupCount(lv_playersFinished) > 0)) {
            libNtve_gf_RemovePlayerGroupFromPlayerGroup(lv_playersFinished, MimicStartingExperienceLib_gv_sEMMIntroPlayersWatching);
            if ((MimicStartingExperienceLib_gv_sEMMIntroCallbackCleanup != null)) {
                TriggerExecute(MimicStartingExperienceLib_gv_sEMMIntroCallbackCleanup, true, false);
            }

        }

        if ((PlayerGroupCount(MimicStartingExperienceLib_gv_sEMMIntroPlayersWatching) == 0)) {
            break;
        }

        Wait(0.0625, c_timeGame);
    }
    libGame_gv_heroSpawnReady = true;
    autoAB371E74_ae = lv_heroModelPickedCount;
    lv_itIndex = 1;
    for ( ; ( (autoAB371E74_ai >= 0 && lv_itIndex <= autoAB371E74_ae) || (autoAB371E74_ai < 0 && lv_itIndex >= autoAB371E74_ae) ) ; lv_itIndex += autoAB371E74_ai ) {
        ActorSend(lv_heroActors[lv_itIndex], "Destroy Immediate");
    }
    return true;
}

void MimicStartingExperienceLib_gf_SetMapStartupVideo (string lp_movie) {
    // Automatic Variable Declarations
    // Implementation
    MimicStartingExperienceLib_gv_tradeShowMovieLink = lp_movie;
}

string MimicStartingExperienceLib_gf_HotkeyProfile_MouseButtonImage (int lp_mouseButton) {
    // Automatic Variable Declarations
    int auto22816B09_val;

    // Implementation
    auto22816B09_val = lp_mouseButton;
    if (auto22816B09_val == MimicStartingExperienceLib_ge_MouseButton_LeftButton) {
        return "Assets\\Textures\\ui_tutorial_mouseleftbuttondown.dds";
    }
    else if (auto22816B09_val == MimicStartingExperienceLib_ge_MouseButton_RightButton) {
        return "Assets\\Textures\\ui_tutorial_mouserightbuttondown.dds";
    }
    else {
    }
    return null;
}

text MimicStartingExperienceLib_gf_HotkeyProfile_MouseButtonImageStringTag (int lp_mouseButton, int lp_width, int lp_height) {
    // Variable Declarations
    text lv_value;
    int lv_width_L;
    int lv_height_L;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_width_L = lp_width;
    lv_height_L = lp_height;
    if ((lv_width_L <= 0)) {
        lv_width_L = MimicStartingExperienceLib_gv_sEC_MouseButtonWidth;
    }

    if ((lv_height_L <= 0)) {
        lv_height_L = MimicStartingExperienceLib_gv_sEC_MouseButtonHeight;
    }

    TextExpressionSetToken("Param/Expression/lib_StEx_1B0DBA0D", "A", StringToText((MimicStartingExperienceLib_gf_HotkeyProfile_MouseButtonImage(lp_mouseButton))));
    TextExpressionSetToken("Param/Expression/lib_StEx_1B0DBA0D", "B", IntToText(lv_width_L));
    TextExpressionSetToken("Param/Expression/lib_StEx_1B0DBA0D", "C", IntToText(lv_height_L));
    lv_value = TextExpressionAssemble("Param/Expression/lib_StEx_1B0DBA0D");
    return lv_value;
}

text MimicStartingExperienceLib_gf_HotkeyProfile_MouseButtonText (int lp_mouseButton) {
    // Automatic Variable Declarations
    int auto6D367A5D_val;

    // Implementation
    auto6D367A5D_val = lp_mouseButton;
    if (auto6D367A5D_val == MimicStartingExperienceLib_ge_MouseButton_LeftButton) {
        return StringExternal("Param/Value/lib_StEx_963CE12D");
    }
    else if (auto6D367A5D_val == MimicStartingExperienceLib_ge_MouseButton_RightButton) {
        return StringExternal("Param/Value/lib_StEx_8F25EE33");
    }
    else {
    }
    return StringExternal("Param/Value/lib_StEx_70B526BF");
}

int MimicStartingExperienceLib_gf_HotkeyProfile_SmartCommandMouseButton (int lp_player) {
    // Automatic Variable Declarations
    // Implementation
    return MimicStartingExperienceLib_gv_sE_MoveMouseButton;
}

void MimicStartingExperienceLib_gf_HotkeyProfile_SetSmartCommandMouseButton (int lp_player, int lp_button) {
    // Variable Declarations
    string lv_profile;

    // Automatic Variable Declarations
    int autoDC44CD62_val;

    // Variable Initialization
    lv_profile = "";

    // Implementation
    MimicStartingExperienceLib_gv_sE_MoveMouseButton = lp_button;
    autoDC44CD62_val = lp_button;
    if (autoDC44CD62_val == MimicStartingExperienceLib_ge_MouseButton_LeftButton) {
        lv_profile = MimicStartingExperienceLib_gv_sEC_HotkeyProfile_LeftClick;
    }
    else if (autoDC44CD62_val == MimicStartingExperienceLib_ge_MouseButton_RightButton) {
        lv_profile = MimicStartingExperienceLib_gv_sEC_HotkeyProfile_RightClick;
    }
    else {
        lv_profile = MimicStartingExperienceLib_gv_sEC_HotkeyProfile_RightClick;
    }
    UISetHotkeyProfile(libCore_gv_playerGroupFromPlayer[lp_player], lv_profile);
}

void MimicStartingExperienceLib_gf_HotkeyProfile_LoadSmartCommandMouseButtonProfile (int lp_player) {
    // Automatic Variable Declarations
    string auto000E9E93_val;

    // Implementation
    auto000E9E93_val = PlayerGetHotkeyProfile(lp_player);
    if (auto000E9E93_val == MimicStartingExperienceLib_gv_sEC_HotkeyProfile_LeftClick) {
        MimicStartingExperienceLib_gv_sE_MoveMouseButton = MimicStartingExperienceLib_ge_MouseButton_LeftButton;
    }
    else if (auto000E9E93_val == MimicStartingExperienceLib_gv_sEC_HotkeyProfile_RightClick) {
        MimicStartingExperienceLib_gv_sE_MoveMouseButton = MimicStartingExperienceLib_ge_MouseButton_RightButton;
    }
    else {
        MimicStartingExperienceLib_gv_sE_MoveMouseButton = MimicStartingExperienceLib_ge_MouseButton_RightButton;
    }
}

void MimicStartingExperienceLib_gf_FreezeUnfreezeAllUnits (int lp_freezeOptions) {
    // Variable Declarations
    unit lv_indexUnit;
    int lv_indexPlayer;

    // Automatic Variable Declarations
    unitgroup auto272E39FD_g;
    int auto272E39FD_u;
    const int autoA8B89EDC_ae = libCore_gv_bALMaxPlayers;
    const int autoA8B89EDC_ai = 1;
    unitgroup autoB6CD080F_g;
    int autoB6CD080F_u;
    const int auto834CCB86_ae = libCore_gv_bALMaxPlayers;
    const int auto834CCB86_ai = 1;

    // Variable Initialization

    // Implementation
    if ((lp_freezeOptions == MimicStartingExperienceLib_ge_FreezeOptions_Freeze)) {
        MimicStartingExperienceLib_gv_sE_FreezeUnitsGameTimerUnpaused = true;
        TimerPause(libGame_gv_gameTimer, true);
        UnitPauseAll(true);
        MimicStartingExperienceLib_gv_sE_FrozenUnits = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        autoB6CD080F_g = MimicStartingExperienceLib_gv_sE_FrozenUnits;
        autoB6CD080F_u = UnitGroupCount(autoB6CD080F_g, c_unitCountAll);
        for (;; autoB6CD080F_u -= 1) {
            lv_indexUnit = UnitGroupUnitFromEnd(autoB6CD080F_g, autoB6CD080F_u);
            if (lv_indexUnit == null) { break; }
            libNtve_gf_SendActorMessageToUnit(lv_indexUnit, "AnimSetPausedAll");
        }
        lv_indexPlayer = 1;
        for ( ; ( (auto834CCB86_ai >= 0 && lv_indexPlayer <= auto834CCB86_ae) || (auto834CCB86_ai < 0 && lv_indexPlayer >= auto834CCB86_ae) ) ; lv_indexPlayer += auto834CCB86_ai ) {
            if ((libGame_gv_players[lv_indexPlayer].lv_heroUnit != null)) {
                libNtve_gf_SendActorMessageToUnit(libGame_gv_players[lv_indexPlayer].lv_heroUnit, "AnimSetPausedAll 0");
            }

        }
        libGame_gf_MinionPauseUnpauseMinionSystem(true);
    }
    else {
        if ((MimicStartingExperienceLib_gv_sE_FreezeUnitsGameTimerUnpaused == true)) {
            TimerPause(libGame_gv_gameTimer, false);
            MimicStartingExperienceLib_gv_sE_FreezeUnitsGameTimerUnpaused = false;
        }

        UnitPauseAll(false);
        auto272E39FD_g = MimicStartingExperienceLib_gv_sE_FrozenUnits;
        auto272E39FD_u = UnitGroupCount(auto272E39FD_g, c_unitCountAll);
        for (;; auto272E39FD_u -= 1) {
            lv_indexUnit = UnitGroupUnitFromEnd(auto272E39FD_g, auto272E39FD_u);
            if (lv_indexUnit == null) { break; }
            libNtve_gf_SendActorMessageToUnit(lv_indexUnit, "AnimSetPausedAll 0");
        }
        lv_indexPlayer = 1;
        for ( ; ( (autoA8B89EDC_ai >= 0 && lv_indexPlayer <= autoA8B89EDC_ae) || (autoA8B89EDC_ai < 0 && lv_indexPlayer >= autoA8B89EDC_ae) ) ; lv_indexPlayer += autoA8B89EDC_ai ) {
            if ((libGame_gv_players[lv_indexPlayer].lv_heroUnit != null)) {
                UnitXPGainEnable(libGame_gv_players[lv_indexPlayer].lv_heroUnit, null, true);
            }

        }
        libGame_gf_MinionPauseUnpauseMinionSystem(false);
    }
}

void MimicStartingExperienceLib_gf_FreezeUnfreezeUnit (int lp_freezeOptions, unit lp_target) {
    // Automatic Variable Declarations
    // Implementation
    if ((lp_freezeOptions == MimicStartingExperienceLib_ge_FreezeOptions_Freeze)) {
        UnitGroupAdd(MimicStartingExperienceLib_gv_sE_FrozenUnits, lp_target);
        libNtve_gf_PauseUnit(lp_target, true);
        libNtve_gf_SendActorMessageToUnit(lp_target, "AnimSetPausedAll");
    }
    else {
        UnitGroupRemove(MimicStartingExperienceLib_gv_sE_FrozenUnits, lp_target);
        libNtve_gf_PauseUnit(lp_target, false);
        libNtve_gf_SendActorMessageToUnit(lp_target, "AnimSetPausedAll 0");
    }
}

void MimicStartingExperienceLib_gf_SetTrainingMode (bool lp_mode) {
    // Automatic Variable Declarations
    // Implementation
    MimicStartingExperienceLib_gv_sE_TrainingMode = lp_mode;
}

bool MimicStartingExperienceLib_gf_InTrainingMode () {
    // Automatic Variable Declarations
    // Implementation
    if ((MimicStartingExperienceLib_gv_sE_TrainingMode == true)) {
        return true;
    }

    return MimicStartingExperienceLib_gf_InPracticeMode();
}

bool MimicStartingExperienceLib_gf_InPracticeMode () {
    // Automatic Variable Declarations
    // Implementation
    if ((libCore_gv_sYSGameMode != libCore_ge_GameModes_Normal)) {
        return false;
    }

    return GameIsPractice();
}

void MimicStartingExperienceLib_gf_SE_ShowHideTalentPortraitFlashingImage (bool lp_showHide) {
    // Automatic Variable Declarations
    // Implementation
    if ((MimicStartingExperienceLib_gv_sE_TrainingModeTalentPanelFlashingImage == c_invalidDialogControlId)) {
        DialogControlHookupStandard(c_triggerControlTypePanel, "UIContainer\\ConsolePanel\\TutorialPortraitHighlight");
        MimicStartingExperienceLib_gv_sE_TrainingModeTalentPanelFlashingImage = DialogControlLastCreated();
    }

    DialogControlSetVisible(MimicStartingExperienceLib_gv_sE_TrainingModeTalentPanelFlashingImage, PlayerGroupAll(), lp_showHide);
}

int MimicStartingExperienceLib_gf_SE_TrainingModeTipCount () {
    // Automatic Variable Declarations
    // Implementation
    return ((MimicStartingExperienceLib_ge_SE_TrainingModeTips_NewUserTip_Last) - 1);
}

void MimicStartingExperienceLib_gf_SE_TrainingModeTipSetDisplayed (int lp_tip) {
    // Variable Declarations
    string lv_bankKey;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_bankKey = "";

    // Implementation
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(lp_tip)].lv_doneTimes += 1;
    lv_bankKey = (MimicStartingExperienceLib_gv_sE_TrainingModeBankkey_Tip_C + IntToString((lp_tip)));
    BankValueSetFromInt(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_bankData.lv_bank, MimicStartingExperienceLib_gv_sE_TrainingModeBankSection_C, lv_bankKey, MimicStartingExperienceLib_gv_sE_TrainingModeTips[(lp_tip)].lv_doneTimes);
    BankSave(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_bankData.lv_bank);
}

bool MimicStartingExperienceLib_gf_SE_TrainingModeTipIsOld (int lp_tip) {
    // Automatic Variable Declarations
    int autoAE3162CA_val;

    // Implementation
    autoAE3162CA_val = lp_tip;
    if (autoAE3162CA_val == MimicStartingExperienceLib_ge_SE_TrainingModeTips_Talents) {
        return (MimicStartingExperienceLib_gv_sE_TrainingModeTips[(lp_tip)].lv_doneTimes > 20);
    }
    else if (autoAE3162CA_val == MimicStartingExperienceLib_ge_SE_TrainingModeTips_Mana) {
        return (MimicStartingExperienceLib_gv_sE_TrainingModeTips[(lp_tip)].lv_doneTimes > 3);
    }
    else if (autoAE3162CA_val == MimicStartingExperienceLib_ge_SE_TrainingModeTips_Mount) {
        return (MimicStartingExperienceLib_gv_sE_TrainingModeTips[(lp_tip)].lv_doneTimes > 40);
    }
    else if (autoAE3162CA_val == MimicStartingExperienceLib_ge_SE_TrainingModeTips_Hearthstone) {
        return (MimicStartingExperienceLib_gv_sE_TrainingModeTips[(lp_tip)].lv_doneTimes > 2);
    }
    else if (autoAE3162CA_val == MimicStartingExperienceLib_ge_SE_TrainingModeTips_HealingFountain) {
        return (MimicStartingExperienceLib_gv_sE_TrainingModeTips[(lp_tip)].lv_doneTimes > 3);
    }
    else {
    }
    return (MimicStartingExperienceLib_gv_sE_TrainingModeTips[(lp_tip)].lv_doneTimes > 0);
}

trigger auto_MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay_Trigger = null;
int auto_MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay_lp_tip;

void MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay (int lp_tip) {
    auto_MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay_lp_tip = lp_tip;

    if (auto_MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay_Trigger == null) {
        auto_MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay_Trigger = TriggerCreate("auto_MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay_TriggerFunc");
    }

    TriggerExecute(auto_MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay_Trigger, false, false);
}

bool auto_MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay_TriggerFunc (bool testConds, bool runActions) {
    int lp_tip = auto_MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay_lp_tip;

    // Automatic Variable Declarations
    // Implementation
    if ((MimicStartingExperienceLib_gv_sE_TrainingModeTipDialog != c_invalidDialogId)) {
        DialogDestroy(MimicStartingExperienceLib_gv_sE_TrainingModeTipDialog);
        MimicStartingExperienceLib_gv_sE_TrainingModeTipDialog = c_invalidDialogId;
    }

    MimicStartingExperienceLib_gv_sE_TrainingModeTipDisplaying = true;
    SoundPlayForPlayer(SoundLink("UI_CampaignHintNotify", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    DialogCreate(1000, 100, c_anchorBottom, 0, 160, true);
    MimicStartingExperienceLib_gv_sE_TrainingModeTipDialog = DialogLastCreated();
    DialogSetImageVisible(DialogLastCreated(), false);
    TextExpressionSetToken("Param/Expression/lib_StEx_9B5ACB60", "A", MimicStartingExperienceLib_gv_sE_TrainingModeTips[(lp_tip)].lv_description);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 200, 50, c_anchorCenter, 50, 50, TextExpressionAssemble("Param/Expression/lib_StEx_9B5ACB60"), ColorWithAlpha(0,0,0,0), false, 2.0);
    DialogControlSetFullDialog(DialogControlLastCreated(), libCore_gv_playerGroupFromPlayer[MimicStartingExperienceLib_gv_sE_Player], true);
    DialogSetVisible(DialogLastCreated(), libCore_gv_playerGroupFromPlayer[MimicStartingExperienceLib_gv_sE_Player], true);
    MimicStartingExperienceLib_gf_SE_TrainingModeTipPlayTransmission(lp_tip);
    Wait(MimicStartingExperienceLib_gv_sE_TrainingModeTipDuration_C, c_timeGame);
    DialogControlFadeTransparency(DialogControlLastCreated(), libCore_gv_playerGroupFromPlayer[MimicStartingExperienceLib_gv_sE_Player], 2.0, 100.0);
    Wait(2.0, c_timeGame);
    DialogDestroy(DialogLastCreated());
    MimicStartingExperienceLib_gv_sE_TrainingModeTipDialog = c_invalidDialogId;
    Wait(5.0, c_timeGame);
    MimicStartingExperienceLib_gv_sE_TrainingModeTipDisplaying = false;
    return true;
}

trigger auto_MimicStartingExperienceLib_gf_SE_TrainingModeTipPlayTransmission_Trigger = null;
int auto_MimicStartingExperienceLib_gf_SE_TrainingModeTipPlayTransmission_lp_tip;

void MimicStartingExperienceLib_gf_SE_TrainingModeTipPlayTransmission (int lp_tip) {
    auto_MimicStartingExperienceLib_gf_SE_TrainingModeTipPlayTransmission_lp_tip = lp_tip;

    if (auto_MimicStartingExperienceLib_gf_SE_TrainingModeTipPlayTransmission_Trigger == null) {
        auto_MimicStartingExperienceLib_gf_SE_TrainingModeTipPlayTransmission_Trigger = TriggerCreate("auto_MimicStartingExperienceLib_gf_SE_TrainingModeTipPlayTransmission_TriggerFunc");
    }

    TriggerExecute(auto_MimicStartingExperienceLib_gf_SE_TrainingModeTipPlayTransmission_Trigger, false, false);
}

bool auto_MimicStartingExperienceLib_gf_SE_TrainingModeTipPlayTransmission_TriggerFunc (bool testConds, bool runActions) {
    int lp_tip = auto_MimicStartingExperienceLib_gf_SE_TrainingModeTipPlayTransmission_lp_tip;

    // Automatic Variable Declarations
    // Implementation
    Wait(1.0, c_timeGame);
    TriggerQueueEnter();
    libCore_gf_SetAllSoundChannelVolumesStandardTiming(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll());
    libCore_gf_SendTransmissionCampaign(null, MimicStartingExperienceLib_gv_sE_TrainingModeTips[(lp_tip)].lv_vO, c_transmissionDurationAdd, 0.0, true, libCore_ge_TransmissionPortraitOptioins_HidePortraitAfter, libCore_ge_TransmissionCueSoundOptions_DefaultCueSoundBehavior);
    libCore_gf_SetAllSoundChannelVolumesStandardTiming(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll());
    TriggerQueueExit();
    return true;
}

void MimicStartingExperienceLib_gf_SE_TrainingModeTipBushesSendActorMessageToBushes (string lp_message, region lp_area) {
    // Automatic Variable Declarations
    // Implementation
    libCore_gf_SendActorMessageToDoodadsInRegion(lp_message, lp_area, "Storm_Doodad_KingsCrest_Docks_Curtain");
    libCore_gf_SendActorMessageToDoodadsInRegion(lp_message, lp_area, "Storm_Doodad_KingsCrest_Curtain");
    libCore_gf_SendActorMessageToDoodadsInRegion(lp_message, lp_area, "Storm_Doodad_KingsCrest_Docks_Curtain_Grass");
    libCore_gf_SendActorMessageToDoodadsInRegion(lp_message, lp_area, "Storm_Doodad_CyberWorld_Curtain");
    libCore_gf_SendActorMessageToDoodadsInRegion(lp_message, lp_area, "Storm_Doodad_KingsCrest_Docks_CurtainLarge");
    libCore_gf_SendActorMessageToDoodadsInRegion(lp_message, lp_area, "Storm_Doodad_KingsCrest_CurtainLarge");
    libCore_gf_SendActorMessageToDoodadsInRegion(lp_message, lp_area, "Storm_Doodad_KingsCrest_Docks_CurtainLarge_Grass");
    libCore_gf_SendActorMessageToDoodadsInRegion(lp_message, lp_area, "Storm_Doodad_CyberWorld_CurtainLarge");
    libCore_gf_SendActorMessageToDoodadsInRegion(lp_message, lp_area, "Storm_Doodad_KingsCrest_RavenCourt_CurtainLarge");
    libCore_gf_SendActorMessageToDoodadsInRegion(lp_message, lp_area, "Storm_Doodad_KingsCrest_RavenCourt_Curtain");
}

void MimicStartingExperienceLib_gf_TutorialPlayerHitsReadyButton (trigger t) {
    // Automatic Variable Declarations
    // Implementation
    TriggerAddEventGeneric(t, MimicStartingExperienceLib_gv_eventID_TutorialPlayerHitsReadyButton_C);
}

void MimicStartingExperienceLib_gf_SendEventTutorialPlayerHitsReadyButton () {
    // Automatic Variable Declarations
    // Implementation
    TriggerSendEvent(MimicStartingExperienceLib_gv_eventID_TutorialPlayerHitsReadyButton_C);
}

void MimicStartingExperienceLib_gf_TutorialPlayerHitsRetryButton (trigger t) {
    // Automatic Variable Declarations
    // Implementation
    TriggerAddEventGeneric(t, MimicStartingExperienceLib_gv_eventID_TutorialPlayerHitsRetryButton_C);
}

void MimicStartingExperienceLib_gf_SendEventTutorialPlayerHitsRetryButton () {
    // Automatic Variable Declarations
    // Implementation
    TriggerSendEvent(MimicStartingExperienceLib_gv_eventID_TutorialPlayerHitsRetryButton_C);
}

void MimicStartingExperienceLib_gf_TutorialPlayerHitsRespecButton (trigger t) {
    // Automatic Variable Declarations
    // Implementation
    TriggerAddEventGeneric(t, MimicStartingExperienceLib_gv_eventID_TutorialPlayerHitsRespecButton_C);
}

void MimicStartingExperienceLib_gf_SendEventTutorialPlayerHitsRespecButton () {
    // Automatic Variable Declarations
    // Implementation
    TriggerSendEvent(MimicStartingExperienceLib_gv_eventID_TutorialPlayerHitsRespecButton_C);
}

void MimicStartingExperienceLib_gf_TutorialPlayerReachedDamageGoalOnTargetDummy (trigger t) {
    // Automatic Variable Declarations
    // Implementation
    TriggerAddEventGeneric(t, MimicStartingExperienceLib_gv_eventID_TutorialPlayerReachedDamageGoalOnTargetDummy_C);
}

void MimicStartingExperienceLib_gf_SendEventTutorialPlayerReachedDamageGoalOnTargetDummy () {
    // Automatic Variable Declarations
    // Implementation
    TriggerSendEvent(MimicStartingExperienceLib_gv_eventID_TutorialPlayerReachedDamageGoalOnTargetDummy_C);
}

void MimicStartingExperienceLib_gf_TutorialPlayerKilledStage1Boss (trigger t) {
    // Automatic Variable Declarations
    // Implementation
    TriggerAddEventGeneric(t, MimicStartingExperienceLib_gv_eventID_TutorialPlayerKilledStage1Boss_C);
}

void MimicStartingExperienceLib_gf_SendEventTutorialPlayerKilledStage1Boss () {
    // Automatic Variable Declarations
    // Implementation
    TriggerSendEvent(MimicStartingExperienceLib_gv_eventID_TutorialPlayerKilledStage1Boss_C);
}

trigger auto_MimicStartingExperienceLib_gf_TVActivateUtherAI_Trigger = null;
unit auto_MimicStartingExperienceLib_gf_TVActivateUtherAI_lp_uther;
unit auto_MimicStartingExperienceLib_gf_TVActivateUtherAI_lp_valla;
unit auto_MimicStartingExperienceLib_gf_TVActivateUtherAI_lp_boss;

void MimicStartingExperienceLib_gf_TVActivateUtherAI (unit lp_uther, unit lp_valla, unit lp_boss) {
    auto_MimicStartingExperienceLib_gf_TVActivateUtherAI_lp_uther = lp_uther;
    auto_MimicStartingExperienceLib_gf_TVActivateUtherAI_lp_valla = lp_valla;
    auto_MimicStartingExperienceLib_gf_TVActivateUtherAI_lp_boss = lp_boss;

    if (auto_MimicStartingExperienceLib_gf_TVActivateUtherAI_Trigger == null) {
        auto_MimicStartingExperienceLib_gf_TVActivateUtherAI_Trigger = TriggerCreate("auto_MimicStartingExperienceLib_gf_TVActivateUtherAI_TriggerFunc");
    }

    TriggerExecute(auto_MimicStartingExperienceLib_gf_TVActivateUtherAI_Trigger, false, false);
}

bool auto_MimicStartingExperienceLib_gf_TVActivateUtherAI_TriggerFunc (bool testConds, bool runActions) {
    unit lp_uther = auto_MimicStartingExperienceLib_gf_TVActivateUtherAI_lp_uther;
    unit lp_valla = auto_MimicStartingExperienceLib_gf_TVActivateUtherAI_lp_valla;
    unit lp_boss = auto_MimicStartingExperienceLib_gf_TVActivateUtherAI_lp_boss;

    // Variable Declarations
    unit lv_currentTargetOfBoss;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    while ((UnitIsAlive(lp_uther) == true) && (UnitIsAlive(lp_valla) == true) && (UnitIsAlive(lp_boss) == true)) {
        lv_currentTargetOfBoss = OrderGetTargetUnit(UnitOrder(lp_boss, 0));
        if ((UnitIsValid(lv_currentTargetOfBoss) == true)) {
            if ((UnitGetPropertyFixed(lv_currentTargetOfBoss, c_unitPropLifePercent, c_unitPropCurrent) > 80.0) && (UnitGetPropertyFixed(lp_uther, c_unitPropEnergyPercent, c_unitPropCurrent) > 50.0)) {
                UnitIssueOrder(lp_uther, OrderTargetingUnit(AbilityCommand("UtherHammerOfJustice", 0), lp_boss), c_orderQueueAddToFront);
            }

            if ((UnitGetPropertyFixed(lv_currentTargetOfBoss, c_unitPropLifePercent, c_unitPropCurrent) < 80.0)) {
                UnitIssueOrder(lp_uther, OrderTargetingUnit(AbilityCommand("UtherHolyLight", 0), lv_currentTargetOfBoss), c_orderQueueAddToFront);
            }

            Wait(0.25, c_timeGame);
            if ((UnitIsValid(lv_currentTargetOfBoss) == true) && (UnitGetPropertyFixed(lv_currentTargetOfBoss, c_unitPropLifePercent, c_unitPropCurrent) < 80.0)) {
                UnitIssueOrder(lp_uther, OrderTargetingPoint(AbilityCommand("UtherHolyRadiance", 0), UnitGetPosition(lv_currentTargetOfBoss)), c_orderQueueAddToFront);
            }

            Wait(0.25, c_timeGame);
        }

        Wait(0.25, c_timeGame);
    }
    return true;
}

void MimicStartingExperienceLib_gf_ActivateDamageforUnit (unit lp_unit) {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_MakeUnitInvulnerable(lp_unit, false);
    libNtve_gf_ChangeUnitDamage(lp_unit, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Full);
    libNtve_gf_ChangeUnitDamage(lp_unit, libNtve_ge_UnitDamageTakenDealt_Damage_Deal, libNtve_ge_UnitDamageChangeOption_Full);
}

void MimicStartingExperienceLib_gf_SwaptoNewHeroforPlayer (int lp_playerNumber, string lp_hero, int lp_desiredLevel) {
    // Automatic Variable Declarations
    // Implementation
    libUIUI_gf_UIDebugPanelSpawnOrSwapHeroForPlayer(libCore_gf_GetIndexFromHero(lp_hero), 1, 0, libCore_gf_GetTotalXPForLevel(lp_desiredLevel), lp_playerNumber, 1);
    UnitIssueOrder(libGame_gv_players[lp_playerNumber].lv_heroUnit, Order(AbilityCommand("move", 2)), c_orderQueueReplace);
    libNtve_gf_ChangeUnitDamage(libGame_gv_players[lp_playerNumber].lv_heroUnit, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
}

void MimicStartingExperienceLib_gf_ResetHeroUnitforPlayer (int lp_player) {
    // Variable Declarations
    unit lv_itUnit;

    // Automatic Variable Declarations
    unitgroup autoA925B367_g;
    int autoA925B367_u;

    // Variable Initialization

    // Implementation
    if ((TimerGetRemaining(libGame_gv_players[lp_player].lv_respawnTimer) > 0.0)) {
        libGame_gf_HeroDeathUpdateRespawnTimer(lp_player, 0.0625);
        libNtve_gf_WaitForTimer(libGame_gv_players[lp_player].lv_respawnTimer, 0.0, false);
    }

    UnitSetPropertyFixed(libGame_gv_players[lp_player].lv_heroUnit, c_unitPropLifePercent, 100.0);
    UnitSetPropertyFixed(libGame_gv_players[lp_player].lv_heroUnit, c_unitPropEnergyPercent, 100.0);
    UnitSetPosition(libGame_gv_players[lp_player].lv_heroUnit, libGame_gv_players[lp_player].lv_spawnPoint, false);
    UnitSetFacing(libGame_gv_players[lp_player].lv_heroUnit, PointGetFacing(libGame_gv_players[lp_player].lv_spawnPoint), 0.0);
    UnitIssueOrder(libGame_gv_players[lp_player].lv_heroUnit, Order(AbilityCommand("move", 2)), c_orderQueueReplace);
    UnitBehaviorRemove(libGame_gv_players[lp_player].lv_heroUnit, "HealingFountainCooldown", 1);
    libCore_gf_ClearAllNonpermanentBehaviorsonUnit(libGame_gv_players[lp_player].lv_heroUnit);
    UnitClearCooldowns(libGame_gv_players[lp_player].lv_heroUnit, true);
    autoA925B367_g = UnitGroup(null, lp_player, RegionEntireMap(), UnitFilter(0, (1 << (c_targetFilterSummoned - 32)), (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterEnemy) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoA925B367_u = UnitGroupCount(autoA925B367_g, c_unitCountAll);
    for (;; autoA925B367_u -= 1) {
        lv_itUnit = UnitGroupUnitFromEnd(autoA925B367_g, autoA925B367_u);
        if (lv_itUnit == null) { break; }
        UnitKill(lv_itUnit);
    }
    libGame_gf_HeroRefreshCooldowns(lp_player, true);
    libNtve_gf_ChangeUnitDamage(libGame_gv_players[lp_player].lv_heroUnit, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    libNtve_gf_MakeUnitInvulnerable(libGame_gv_players[lp_player].lv_heroUnit, false);
    UnitCreateEffectUnit(libGame_gv_players[lp_player].lv_heroUnit, "DryadAbolishMagicRemoveCCsTarget", libGame_gv_players[lp_player].lv_heroUnit);
}

void MimicStartingExperienceLib_gf_ResetUnit (unit lp_targetUnit) {
    // Automatic Variable Declarations
    // Implementation
    UnitIssueOrder(lp_targetUnit, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    UnitSetPropertyFixed(lp_targetUnit, c_unitPropLifePercent, 100.0);
    UnitSetPropertyFixed(lp_targetUnit, c_unitPropEnergyPercent, 100.0);
    UnitCreateEffectUnit(lp_targetUnit, "DryadAbolishMagicRemoveCCsTarget", lp_targetUnit);
}

trigger auto_MimicStartingExperienceLib_gf_ClearUltimateEvolutionClone_Trigger = null;

void MimicStartingExperienceLib_gf_ClearUltimateEvolutionClone () {
    if (auto_MimicStartingExperienceLib_gf_ClearUltimateEvolutionClone_Trigger == null) {
        auto_MimicStartingExperienceLib_gf_ClearUltimateEvolutionClone_Trigger = TriggerCreate("auto_MimicStartingExperienceLib_gf_ClearUltimateEvolutionClone_TriggerFunc");
    }

    TriggerExecute(auto_MimicStartingExperienceLib_gf_ClearUltimateEvolutionClone_Trigger, false, false);
}

bool auto_MimicStartingExperienceLib_gf_ClearUltimateEvolutionClone_TriggerFunc (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Implementation
    if ((libGame_gv_players[MimicStartingExperienceLib_gv_pLAYER_01_USER].lv_activeVehicle != null)) {
        libNtve_gf_MakeUnitInvulnerable(libGame_gv_players[MimicStartingExperienceLib_gv_pLAYER_01_USER].lv_activeVehicle, true);
    }

    Wait(2.0, c_timeGame);
    if ((libGame_gv_players[MimicStartingExperienceLib_gv_pLAYER_01_USER].lv_activeVehicle != null)) {
        UnitKill(libGame_gv_players[MimicStartingExperienceLib_gv_pLAYER_01_USER].lv_activeVehicle);
    }

    return true;
}

void MimicStartingExperienceLib_gf_LevelUpPlayer (int lp_player, int lp_level) {
    // Automatic Variable Declarations
    // Implementation
    libGame_gf_GrantXPToPlayer((libCore_gf_GetTotalXPForLevel(lp_level) - UnitGetPropertyFixed(libGame_gv_players[lp_player].lv_heroUnit, c_unitPropXP, c_unitPropCurrent)), lp_player, libGame_ge_XPSources_Debug);
}

void MimicStartingExperienceLib_gf_RespecPlayer (int lp_player, bool lp_message) {
    // Automatic Variable Declarations
    // Implementation
    libGame_gf_TalentsRespecHeroForPlayer(lp_player);
    MimicStartingExperienceLib_gf_ResetHeroUnitforPlayer(lp_player);
    ShowTalentPanel(libCore_gv_playerGroupFromPlayer[lp_player], true, 1);
    Wait(0.0625, c_timeGame);
    SoundPlayForPlayer(SoundLink("UI_Game_Flyin_TalentsReset", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    if ((lp_message == true)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_StEx_A4EE4078"));
    }

}

bool MimicStartingExperienceLib_gf_PlayerPickedAllTalents () {
    // Variable Declarations
    int lv_itChoice;

    // Automatic Variable Declarations
    const int auto585F4F9F_ae = libCore_gv_talents_MaxTiers_C;
    const int auto585F4F9F_ai = 1;

    // Variable Initialization

    // Implementation
    lv_itChoice = 1;
    for ( ; ( (auto585F4F9F_ai >= 0 && lv_itChoice <= auto585F4F9F_ae) || (auto585F4F9F_ai < 0 && lv_itChoice >= auto585F4F9F_ae) ) ; lv_itChoice += auto585F4F9F_ai ) {
        if ((libGame_gv_talents_TalentChoices[MimicStartingExperienceLib_gv_pLAYER_01_USER][lv_itChoice].lv_selection <= 0) && (MimicStartingExperienceLib_gf_PlayerTalentTierEnabled(lv_itChoice) == true)) {
            return false;
        }

    }
    return true;
}

void MimicStartingExperienceLib_gf_StorePlayerTalents () {
    // Variable Declarations
    int lv_itTier;

    // Automatic Variable Declarations
    const int autoE62AC3C4_ae = libCore_gv_talents_MaxTiers_C;
    const int autoE62AC3C4_ai = 1;

    // Variable Initialization

    // Implementation
    lv_itTier = 1;
    for ( ; ( (autoE62AC3C4_ai >= 0 && lv_itTier <= autoE62AC3C4_ae) || (autoE62AC3C4_ai < 0 && lv_itTier >= autoE62AC3C4_ae) ) ; lv_itTier += autoE62AC3C4_ai ) {
        MimicStartingExperienceLib_gv_talents_TalentChoices[lv_itTier].lv_selection = libGame_gv_talents_TalentChoices[MimicStartingExperienceLib_gv_pLAYER_01_USER][lv_itTier].lv_selection;
    }
}

bool MimicStartingExperienceLib_gf_PlayerTalentTierEnabled (int lp_tier) {
    // Variable Declarations
    int lv_team;
    int lv_playerLevel;
    int lv_tierUnlocked;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_playerLevel = UnitLevel(libGame_gv_players[MimicStartingExperienceLib_gv_pLAYER_01_USER].lv_heroUnit);
    if ((lv_playerLevel >= libGame_gv_players[MimicStartingExperienceLib_gv_pLAYER_01_USER].lv_talents_TierLevels[lp_tier].lv_level) && (GetTalentTierEnabled(lp_tier) == true)) {
        return true;
    }

    return false;
}

void MimicStartingExperienceLib_gf_RestorePlayerTalents () {
    // Variable Declarations
    int lv_itTier;
    int lv_numPreviousTalents;
    int lv_currentTier;

    // Automatic Variable Declarations
    const int auto4871E4B0_ae = libCore_gv_talents_MaxTiers_C;
    const int auto4871E4B0_ai = 1;

    // Variable Initialization
    lv_numPreviousTalents = -1;

    // Implementation
    lv_itTier = 1;
    for ( ; ( (auto4871E4B0_ai >= 0 && lv_itTier <= auto4871E4B0_ae) || (auto4871E4B0_ai < 0 && lv_itTier >= auto4871E4B0_ae) ) ; lv_itTier += auto4871E4B0_ai ) {
        ShowTalentPanel(libCore_gv_playerGroupFromPlayer[MimicStartingExperienceLib_gv_pLAYER_01_USER], true, lv_itTier);
        TalentTreeSetSelectedHeroTalentTree(MimicStartingExperienceLib_gv_pLAYER_01_USER, (MimicStartingExperienceLib_gv_talents_TalentChoices[lv_itTier].lv_selection + lv_numPreviousTalents));
        libGame_gf_TalentsChooseTalentForPlayer(lv_itTier, MimicStartingExperienceLib_gv_talents_TalentChoices[lv_itTier].lv_selection, MimicStartingExperienceLib_gv_pLAYER_01_USER);
        if ((MimicStartingExperienceLib_gv_talents_TalentChoices[lv_itTier].lv_selection <= 0)) {
            if ((MimicStartingExperienceLib_gf_PlayerTalentTierEnabled(lv_itTier) == true)) {
                lv_currentTier = lv_itTier;
            }
            else {
                lv_currentTier = (lv_itTier - 1);
            }
            break;
        }

        lv_numPreviousTalents += libGame_gv_talents_TalentChoices[MimicStartingExperienceLib_gv_pLAYER_01_USER][lv_itTier].lv_numberOfTalentsForThisTier;
    }
    ShowTalentPanel(libCore_gv_playerGroupFromPlayer[MimicStartingExperienceLib_gv_pLAYER_01_USER], true, lv_currentTier);
    ShowTalentPanel(libCore_gv_playerGroupFromPlayer[MimicStartingExperienceLib_gv_pLAYER_01_USER], false, lv_currentTier);
}

void MimicStartingExperienceLib_gf_TutorialVeteranShowHideDummyPanel (bool lp_showHide) {
    // Automatic Variable Declarations
    // Implementation
    DialogControlSetVisible(MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_dummyPanel, PlayerGroupAll(), false);
}

void MimicStartingExperienceLib_gf_TutorialVeteranShowHideRetryButton (bool lp_showHide) {
    // Automatic Variable Declarations
    // Implementation
    DialogControlSetVisible(MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_RetryButton, PlayerGroupAll(), lp_showHide);
}

void MimicStartingExperienceLib_gf_TutorialVeteranShowHideReadyButton (bool lp_showHide) {
    // Automatic Variable Declarations
    // Implementation
    DialogControlSetVisible(MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_ReadyButton, PlayerGroupAll(), lp_showHide);
}

void MimicStartingExperienceLib_gf_TutorialVeteranShowHideRespecButton (bool lp_showHide) {
    // Automatic Variable Declarations
    // Implementation
    DialogControlSetVisible(MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_RespecButton, PlayerGroupAll(), lp_showHide);
    if ((lp_showHide == false)) {
        MimicStartingExperienceLib_gf_TutorialVeteranFlashRespecButton(false);
    }

}

void MimicStartingExperienceLib_gf_TutorialVeteranFlashRespecButton (bool lp_showHide) {
    // Automatic Variable Declarations
    // Implementation
    if ((lp_showHide == true)) {
        if ((MimicStartingExperienceLib_gv_tutorialVeteranPanelFlashing == true)) {
            return ;
        }

        MimicStartingExperienceLib_gv_tutorialVeteranPanelFlashing = true;
        TriggerExecute(MimicStartingExperienceLib_gt_TutorialVeteranFlashRespecButtonInternal, true, false);
    }
    else {
        if ((MimicStartingExperienceLib_gv_tutorialVeteranPanelFlashing == false)) {
            return ;
        }

        MimicStartingExperienceLib_gv_tutorialVeteranPanelFlashing = false;
    }
}

void MimicStartingExperienceLib_gf_SetTargetDummyGlobalVariable (unit lp_targetDummy) {
    // Automatic Variable Declarations
    // Implementation
    MimicStartingExperienceLib_gv_targetDummyUnit = lp_targetDummy;
    MimicStartingExperienceLib_gv_targetDummyLocation = UnitGetPosition(MimicStartingExperienceLib_gv_targetDummyUnit);
}

trigger auto_MimicStartingExperienceLib_gf_TargetDummyReset_Trigger = null;

void MimicStartingExperienceLib_gf_TargetDummyReset () {
    if (auto_MimicStartingExperienceLib_gf_TargetDummyReset_Trigger == null) {
        auto_MimicStartingExperienceLib_gf_TargetDummyReset_Trigger = TriggerCreate("auto_MimicStartingExperienceLib_gf_TargetDummyReset_TriggerFunc");
    }

    TriggerExecute(auto_MimicStartingExperienceLib_gf_TargetDummyReset_Trigger, false, false);
}

bool auto_MimicStartingExperienceLib_gf_TargetDummyReset_TriggerFunc (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Implementation
    UnitSetPropertyFixed(MimicStartingExperienceLib_gv_targetDummyUnit, c_unitPropLifePercent, 100.0);
    libNtve_gf_ChangeUnitDamage(MimicStartingExperienceLib_gv_targetDummyUnit, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    MimicStartingExperienceLib_gf_TutorialVeteranShowHideDummyPanel(false);
    TriggerEnable(MimicStartingExperienceLib_gt_TargetDummyTakesDamage, false);
    return true;
}

void MimicStartingExperienceLib_gf_TargetDummyStart () {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_ChangeUnitDamage(MimicStartingExperienceLib_gv_targetDummyUnit, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Full);
    TriggerEnable(MimicStartingExperienceLib_gt_TargetDummyTakesDamage, true);
}

bool MimicStartingExperienceLib_gf_QueryForYesNo (text lp_question) {
    // Automatic Variable Declarations
    // Implementation
    UIShowCustomDialog(libCore_gv_playerGroupFromPlayer[MimicStartingExperienceLib_gv_pLAYER_01_USER], libNtve_ge_CustomDialogType_c_customDialogTypeQuery, StringExternal("Param/Value/lib_StEx_DCBF9B21"), lp_question, true);
    Wait(0.125, c_timeGame);
    if ((MimicStartingExperienceLib_gv_queryDialogResult == MimicStartingExperienceLib_ge_QueryDialogResult_Yes)) {
        return true;
    }

    return false;
}

fixed MimicStartingExperienceLib_gf_DataConversationSoundDuration (string lp_line, fixed lp_duration) {
    // Automatic Variable Declarations
    // Implementation
    if ((lp_duration > 0.0)) {
        return lp_duration;
    }

    return SoundLengthSync(SoundLink(ConversationDataGetSound(lp_line, false), c_soundIndexAny));
}

void MimicStartingExperienceLib_gf_CinematicModeTutorial2 (bool lp_onOff, playergroup lp_players, fixed lp_duration) {
    // Automatic Variable Declarations
    // Implementation
    MimicStartingExperienceLib_gf_CinematicModeTutorial(lp_onOff, lp_players, lp_duration);
}

void MimicStartingExperienceLib_gf_SetAllSoundChannelVolumesStandardTiming (int lp_mode, playergroup lp_players) {
    // Automatic Variable Declarations
    // Implementation
    libCore_gf_SetAllSoundChannelVolumesStandardTiming(lp_mode, lp_players);
    if ((lp_mode == libNtve_ge_VolumeChannelMode_Speech)) {
        SoundChannelSetVolume(lp_players, c_soundCategoryUser17, 30.0, 1.0);
        SoundChannelSetVolume(lp_players, c_soundCategoryUser18, 30.0, 1.0);
        SoundChannelSetVolume(lp_players, c_soundCategoryUser19, 30.0, 1.0);
        SoundChannelSetVolume(lp_players, c_soundCategoryUser20, 30.0, 1.0);
        SoundChannelSetVolume(lp_players, c_soundCategoryUser22, 30.0, 1.0);
        SoundChannelSetVolume(lp_players, c_soundCategoryUser23, 30.0, 1.0);
        SoundChannelSetVolume(lp_players, c_soundCategoryUser27, 30.0, 1.0);
        SoundChannelSetVolume(lp_players, c_soundCategoryUser28, 30.0, 1.0);
        SoundChannelSetVolume(lp_players, c_soundCategoryUser30, 30.0, 1.0);
        SoundChannelSetVolume(lp_players, c_soundCategoryUser32, 30.0, 1.0);
        SoundChannelSetVolume(lp_players, c_soundCategoryUser33, 30.0, 1.0);
    }
    else {
        SoundChannelSetVolume(lp_players, c_soundCategoryUser17, 100.0, 1.0);
        SoundChannelSetVolume(lp_players, c_soundCategoryUser18, 100.0, 1.0);
        SoundChannelSetVolume(lp_players, c_soundCategoryUser19, 100.0, 1.0);
        SoundChannelSetVolume(lp_players, c_soundCategoryUser20, 100.0, 1.0);
        SoundChannelSetVolume(lp_players, c_soundCategoryUser22, 100.0, 1.0);
        SoundChannelSetVolume(lp_players, c_soundCategoryUser23, 100.0, 1.0);
        SoundChannelSetVolume(lp_players, c_soundCategoryUser27, 100.0, 1.0);
        SoundChannelSetVolume(lp_players, c_soundCategoryUser28, 100.0, 1.0);
        SoundChannelSetVolume(lp_players, c_soundCategoryUser30, 100.0, 1.0);
        SoundChannelSetVolume(lp_players, c_soundCategoryUser32, 100.0, 1.0);
        SoundChannelSetVolume(lp_players, c_soundCategoryUser33, 100.0, 1.0);
    }
}

bool MimicStartingExperienceLib_gf_IsthisanAutomatedPlaythrough () {
    // Automatic Variable Declarations
    // Implementation
    if (((MimicStartingExperienceLib_gv_automation_Debug == true) || ((GameIsTestMap(true) == true) && ((GameTestConfigType() == 5) || (GameTestConfigType() == 6) || (GameTestConfigType() == 7))))) {
        return true;
    }

    return false;
}

bool MimicStartingExperienceLib_gf_TargetLocationIsGood (point lp_locationTarget, point lp_locationFrom) {
    // Automatic Variable Declarations
    // Implementation
    if (((PathingType(lp_locationTarget) == c_pathingUnpathable) || (PathingType(lp_locationTarget) != c_pathingGround))) {
        return false;
    }

    if ((lp_locationFrom != null) && ((PointPathingCliffLevel(lp_locationTarget) != PointPathingCliffLevel(lp_locationFrom)) || (CrossCliff(lp_locationFrom, lp_locationTarget) == true))) {
        return false;
    }

    return true;
}

void MimicStartingExperienceLib_gf_RestoreUnit (unit lp_unit) {
    // Automatic Variable Declarations
    // Implementation
    UnitClearCooldowns(lp_unit, false);
    UnitSetPropertyFixed(lp_unit, c_unitPropLifePercent, 100.0);
    UnitSetPropertyFixed(lp_unit, c_unitPropEnergyPercent, 100.0);
    UnitSetPropertyFixed(lp_unit, c_unitPropShieldsPercent, 100.0);
}

void MimicStartingExperienceLib_gf_MoveUnit (unit lp_unit, point lp_targetLocation, bool lp_blend) {
    // Automatic Variable Declarations
    // Implementation
    UnitSetPosition(lp_unit, lp_targetLocation, lp_blend);
    UnitSetFacing(lp_unit, PointGetFacing(lp_targetLocation), 0.0);
    UnitIssueOrder(lp_unit, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
}

bool MimicStartingExperienceLib_gf_GameIsSinglePlayer () {
    // Variable Declarations
    int lv_itPlayer;
    int lv_count;

    // Automatic Variable Declarations
    const int autoC8AF2A66_ae = libCore_gv_bALMaxPlayers;
    const int autoC8AF2A66_ai = 1;

    // Variable Initialization

    // Implementation
    lv_itPlayer = 1;
    for ( ; ( (autoC8AF2A66_ai >= 0 && lv_itPlayer <= autoC8AF2A66_ae) || (autoC8AF2A66_ai < 0 && lv_itPlayer >= autoC8AF2A66_ae) ) ; lv_itPlayer += autoC8AF2A66_ai ) {
        if ((PlayerStatus(lv_itPlayer) == c_playerStatusActive) && (PlayerType(lv_itPlayer) == c_playerTypeUser)) {
            lv_count += 1;
        }

    }
    return (lv_count == 1);
}

string MimicStartingExperienceLib_gf_TutorialHero () {
    // Variable Declarations
    int lv_label;

    // Automatic Variable Declarations
    int auto8B88B8A9_val;

    // Variable Initialization
    lv_label = c_invalidDialogControlId;

    // Implementation
    if ((MimicStartingExperienceLib_gv_tutorialHero != null) && (MimicStartingExperienceLib_gv_tutorialHero != libCore_gv_heroes_RandomHeroID)) {
        return MimicStartingExperienceLib_gv_tutorialHero;
    }

    MimicStartingExperienceLib_gv_tutorialHero = PlayerHero(MimicStartingExperienceLib_gv_pLAYER_01_USER);
    if (((MimicStartingExperienceLib_gv_tutorialHero == null) || (MimicStartingExperienceLib_gv_tutorialHero == libCore_gv_heroes_RandomHeroID))) {
        if (((MimicStartingExperienceLib_gv_automation_Debug == true) || (GameIsTestMap(true) == true))) {
            auto8B88B8A9_val = GameTestConfigType();
            if (auto8B88B8A9_val == 5) {
                MimicStartingExperienceLib_gv_tutorialHero = "Muradin";
            }
            else if (auto8B88B8A9_val == 6) {
                MimicStartingExperienceLib_gv_tutorialHero = "Jaina";
            }
            else if (auto8B88B8A9_val == 7) {
                MimicStartingExperienceLib_gv_tutorialHero = "Tyrande";
            }
            else {
                MimicStartingExperienceLib_gv_tutorialHero = "Muradin";
            }
            return MimicStartingExperienceLib_gv_tutorialHero;
        }

        UISetCursorVisible(PlayerGroupAll(), true);
        DialogCreate(500, 400, c_anchorCenter, 0, 0, true);
        DialogSetFullscreen(DialogLastCreated(), true);
        DialogSetImageVisible(DialogLastCreated(), false);
        libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 1000, 50, c_anchorTop, 0, 400, StringExternal("Param/Value/lib_StEx_31549B6D"), ColorWithAlpha(0,0,0,0), false, 2.0);
        lv_label = DialogControlLastCreated();
        libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "Storm_Map_Large_Bold_Centered", PlayerGroupAll());
        DialogControlCreateFromTemplate(DialogLastCreated(), c_triggerControlTypeButton, "StandardTemplates/StandardButtonSmallTemplate");
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), StringExternal("Param/Value/lib_StEx_1F3189D1"), PlayerGroupAll());
        MimicStartingExperienceLib_gv_tutorialHeroBtnJaina = DialogControlLastCreated();
        DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, lv_label, c_anchorBottom, 0, 50);
        DialogControlCreateFromTemplate(DialogLastCreated(), c_triggerControlTypeButton, "StandardTemplates/StandardButtonSmallTemplate");
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), StringExternal("Param/Value/lib_StEx_32598B9C"), PlayerGroupAll());
        MimicStartingExperienceLib_gv_tutorialHeroBtnMuradin = DialogControlLastCreated();
        DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, MimicStartingExperienceLib_gv_tutorialHeroBtnJaina, c_anchorBottom, 0, 20);
        DialogControlCreateFromTemplate(DialogLastCreated(), c_triggerControlTypeButton, "StandardTemplates/StandardButtonSmallTemplate");
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), StringExternal("Param/Value/lib_StEx_C880FFA9"), PlayerGroupAll());
        MimicStartingExperienceLib_gv_tutorialHeroBtnTyrande = DialogControlLastCreated();
        DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, MimicStartingExperienceLib_gv_tutorialHeroBtnMuradin, c_anchorBottom, 0, 20);
        DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), true);
        TriggerEnable(MimicStartingExperienceLib_gt_TutorialHeroSelected, true);
        while (!((MimicStartingExperienceLib_gv_tutorialHero != null) && (MimicStartingExperienceLib_gv_tutorialHero != libCore_gv_heroes_RandomHeroID))) {
            Wait(0.0625, c_timeGame);
        }
        DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), false);
        UISetCursorVisible(PlayerGroupAll(), false);
    }

    return MimicStartingExperienceLib_gv_tutorialHero;
}

void MimicStartingExperienceLib_gf_TutorialHeroTalentRecommendation () {
    // Automatic Variable Declarations
    string auto8F850C63_val;

    // Implementation
    auto8F850C63_val = MimicStartingExperienceLib_gf_TutorialHero();
    if (auto8F850C63_val == "Jaina") {
        SetTalentHighlighted("JainaFrostbiteLingeringChill", true);
        SetTalentHighlighted("JainaFrostbiteArcaneIntellect", true);
        SetTalentHighlighted("JainaConeOfColdIceFloes", true);
        SetTalentHighlighted("JainaHeroicSummonWaterElemental", true);
        SetTalentHighlighted("JainaBlizzardStormFront", true);
        SetTalentHighlighted("JainaBlizzardSnowstorm", true);
        SetTalentHighlighted("JainaSummonWaterElementalWintermute", true);
    }
    else if (auto8F850C63_val == "Muradin") {
        SetTalentHighlighted("MuradinCombatStyleThirdWind", true);
        SetTalentHighlighted("MuradinMasteryThunderburn", true);
        SetTalentHighlighted("MuradinStormboltPiercingBolt", true);
        SetTalentHighlighted("MuradinHeroicAbilityAvatar", true);
        SetTalentHighlighted("GenericTalentBurningRage", true);
        SetTalentHighlighted("MuradinMasteryDwarfTossHeavyImpact", true);
        SetTalentHighlighted("MuradinMasteryAvatarUnstoppableForce", true);
    }
    else if (auto8F850C63_val == "Tyrande") {
        SetTalentHighlighted("TyrandeMasteryLunarBlaze", true);
        SetTalentHighlighted("TyrandeMoonlitArrows", true);
        SetTalentHighlighted("TyrandeHuntressFury", true);
        SetTalentHighlighted("TyrandeHeroicAbilityStarfall", true);
        SetTalentHighlighted("TyrandeMasteryLightofEluneQuickeningBlessing", true);
        SetTalentHighlighted("TyrandeOverflowingLight", true);
        SetTalentHighlighted("TyrandeMasteryStarfallCelestialWrath", true);
    }
    else {
    }
}

void MimicStartingExperienceLib_gf_AddInGameTip (int lp_tip) {
    // Automatic Variable Declarations
    int autoD6B947EF_val;

    // Implementation
    autoD6B947EF_val = lp_tip;
    if (autoD6B947EF_val == MimicStartingExperienceLib_ge_InGameTip_Abilities) {
        HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_StEx_0CE727AE"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_StEx_E19BA64B"), StringToText(""), "Assets\\Textures\\storm_ui_tutorial_help_abilities.dds");
    }
    else if (autoD6B947EF_val == MimicStartingExperienceLib_ge_InGameTip_Experience) {
        HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_StEx_0737CA73"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_StEx_45CA47BF"), StringToText(""), "Assets\\Textures\\storm_ui_tutorial_help_xp.dds");
    }
    else if (autoD6B947EF_val == MimicStartingExperienceLib_ge_InGameTip_BattlegroundMechanics) {
        HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_StEx_97C55EC6"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_StEx_C7FB4256"), StringToText(""), "Assets\\Textures\\storm_ui_tutorial_help_map_mechanic.dds");
    }
    else if (autoD6B947EF_val == MimicStartingExperienceLib_ge_InGameTip_Healing) {
        HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_StEx_B60E19F5"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_StEx_3896CC49"), StringToText(""), "Assets\\Textures\\storm_ui_tutorial_help_healing.dds");
    }
    else if (autoD6B947EF_val == MimicStartingExperienceLib_ge_InGameTip_Hearthstone) {
        HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_StEx_2E35BAF5"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_StEx_3682D851"), StringToText(""), "Assets\\Textures\\storm_ui_tutorial_help_hearthstone.dds");
    }
    else if (autoD6B947EF_val == MimicStartingExperienceLib_ge_InGameTip_HeroicAbilities) {
        HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_StEx_80505C32"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_StEx_37DF965F"), StringToText(""), "Assets\\Textures\\storm_ui_tutorial_help_heroic.dds");
    }
    else if (autoD6B947EF_val == MimicStartingExperienceLib_ge_InGameTip_MercenaryCamps) {
        HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_StEx_FDD67387"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_StEx_52663342"), StringToText(""), "Assets\\Textures\\storm_ui_tutorial_help_mercs.dds");
    }
    else if (autoD6B947EF_val == MimicStartingExperienceLib_ge_InGameTip_Mounts) {
        HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_StEx_99089475"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_StEx_741B5677"), StringToText(""), "Assets\\Textures\\storm_ui_tutorial_help_mount.dds");
    }
    else if (autoD6B947EF_val == MimicStartingExperienceLib_ge_InGameTip_Talent) {
        HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_StEx_7F8B70CB"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_StEx_BF002365"), StringToText(""), "Assets\\Textures\\storm_ui_tutorial_help_talents.dds");
    }
    else if (autoD6B947EF_val == MimicStartingExperienceLib_ge_InGameTip_Tower) {
        HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_StEx_EE76EC22"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_StEx_3DF27B85"), StringToText(""), "Assets\\Textures\\storm_ui_tutorial_help_tower.dds");
    }
    else if (autoD6B947EF_val == MimicStartingExperienceLib_ge_InGameTip_Watchtowers) {
        HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_StEx_DA082888"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_StEx_266E5468"), StringToText(""), "Assets\\Textures\\storm_ui_tutorial_help_watch_tower.dds");
    }
    else {
    }
}

void MimicStartingExperienceLib_gf_AddAllInGameTips (bool lp_checkCondition) {
    // Automatic Variable Declarations
    // Implementation
    if ((lp_checkCondition == true)) {
        return ;
    }

    MimicStartingExperienceLib_gf_AddInGameTip(MimicStartingExperienceLib_ge_InGameTip_Experience);
    MimicStartingExperienceLib_gf_AddInGameTip(MimicStartingExperienceLib_ge_InGameTip_Talent);
    MimicStartingExperienceLib_gf_AddInGameTip(MimicStartingExperienceLib_ge_InGameTip_Abilities);
    MimicStartingExperienceLib_gf_AddInGameTip(MimicStartingExperienceLib_ge_InGameTip_HeroicAbilities);
    MimicStartingExperienceLib_gf_AddInGameTip(MimicStartingExperienceLib_ge_InGameTip_Mounts);
    MimicStartingExperienceLib_gf_AddInGameTip(MimicStartingExperienceLib_ge_InGameTip_Hearthstone);
    MimicStartingExperienceLib_gf_AddInGameTip(MimicStartingExperienceLib_ge_InGameTip_Healing);
    MimicStartingExperienceLib_gf_AddInGameTip(MimicStartingExperienceLib_ge_InGameTip_Tower);
    MimicStartingExperienceLib_gf_AddInGameTip(MimicStartingExperienceLib_ge_InGameTip_Watchtowers);
    MimicStartingExperienceLib_gf_AddInGameTip(MimicStartingExperienceLib_ge_InGameTip_MercenaryCamps);
    MimicStartingExperienceLib_gf_AddInGameTip(MimicStartingExperienceLib_ge_InGameTip_BattlegroundMechanics);
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: #Include Starting Experience
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_IncludeStartingExperience_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_IncludeStartingExperience_Init () {
    MimicStartingExperienceLib_gt_IncludeStartingExperience = TriggerCreate("MimicStartingExperienceLib_gt_IncludeStartingExperience_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_VOPausedMessageClosed
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_VOPausedMessageClosed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == MimicStartingExperienceLib_gv_sE_VOPausedMsgButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    MimicStartingExperienceLib_gf_ClearVOMessageGamePaused(EventPlayer());
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_VOPausedMessageClosed_Init () {
    MimicStartingExperienceLib_gt_SE_VOPausedMessageClosed = TriggerCreate("MimicStartingExperienceLib_gt_SE_VOPausedMessageClosed_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_SE_VOPausedMessageClosed, false);
    TriggerAddEventDialogControl(MimicStartingExperienceLib_gt_SE_VOPausedMessageClosed, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SEMMHideHeroes
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SEMMHideHeroes_Func (bool testConds, bool runActions) {
    int init_i;

    // Variable Declarations
    int lv_itPlayerInIntro;
    int lv_itPlayer;
    playergroup lv_playersInIntro;
    playergroup lv_playersFinished;
    unit lv_itHero;
    unitgroup[libCore_gv_bALMaxPlayers + 1] lv_heroessHidden;

    // Automatic Variable Declarations
    playergroup autoF2FBC528_g;
    const int autoFBBE4B3F_ae = libCore_gv_bALMaxPlayers;
    const int autoFBBE4B3F_ai = 1;
    unitgroup auto68063C19_g;
    int auto68063C19_u;
    playergroup auto57D4A7F3_g;
    playergroup autoD7DBDC57_g;
    unitgroup auto24AF5347_g;
    int auto24AF5347_u;

    // Variable Initialization
    lv_playersInIntro = PlayerGroupEmpty();
    lv_playersFinished = PlayerGroupEmpty();
    for (init_i = 0; init_i <= libCore_gv_bALMaxPlayers; init_i += 1) {
        lv_heroessHidden[init_i] = UnitGroupEmpty();
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_playersInIntro = PlayerGroupCopy(MimicStartingExperienceLib_gv_sEMMIntroPlayersWatching);
    while (true) {
        autoF2FBC528_g = lv_playersInIntro;
        lv_itPlayerInIntro = -1;
        while (true) {
            	lv_itPlayerInIntro = PlayerGroupNextPlayer(autoF2FBC528_g, lv_itPlayerInIntro);
            	if (lv_itPlayerInIntro<0) { break; }
            	lv_itPlayer = 1;
            for ( ; ( (autoFBBE4B3F_ai >= 0 && lv_itPlayer <= autoFBBE4B3F_ae) || (autoFBBE4B3F_ai < 0 && lv_itPlayer >= autoFBBE4B3F_ae) ) ; lv_itPlayer += autoFBBE4B3F_ai ) {
                auto68063C19_g = libGame_gv_players[lv_itPlayer].lv_heroUnitGroup;
                auto68063C19_u = UnitGroupCount(auto68063C19_g, c_unitCountAll);
                for (;; auto68063C19_u -= 1) {
                    lv_itHero = UnitGroupUnitFromEnd(auto68063C19_g, auto68063C19_u);
                    if (lv_itHero == null) { break; }
                    if ((UnitGroupHasUnit(lv_heroessHidden[lv_itPlayerInIntro], lv_itHero) == false)) {
                        UnitGroupAdd(lv_heroessHidden[lv_itPlayerInIntro], lv_itHero);
                        ActorScopeSend(ActorScopeFromUnit(lv_itHero), (("SetFilterPlayers " + IntToString(lv_itPlayerInIntro))));
                    }

                }
            }
        }
        PlayerGroupClear(lv_playersFinished);
        auto57D4A7F3_g = lv_playersInIntro;
        lv_itPlayerInIntro = -1;
        while (true) {
            	lv_itPlayerInIntro = PlayerGroupNextPlayer(auto57D4A7F3_g, lv_itPlayerInIntro);
            	if (lv_itPlayerInIntro<0) { break; }
            	if ((libMapM_gf_MapMechanicIntroFinished(lv_itPlayerInIntro) == true)) {
                PlayerGroupAdd(lv_playersFinished, lv_itPlayerInIntro);
            }

        }
        autoD7DBDC57_g = lv_playersFinished;
        lv_itPlayerInIntro = -1;
        while (true) {
            	lv_itPlayerInIntro = PlayerGroupNextPlayer(autoD7DBDC57_g, lv_itPlayerInIntro);
            	if (lv_itPlayerInIntro<0) { break; }
            	auto24AF5347_g = lv_heroessHidden[lv_itPlayerInIntro];
            auto24AF5347_u = UnitGroupCount(auto24AF5347_g, c_unitCountAll);
            for (;; auto24AF5347_u -= 1) {
                lv_itHero = UnitGroupUnitFromEnd(auto24AF5347_g, auto24AF5347_u);
                if (lv_itHero == null) { break; }
                ActorScopeSend(ActorScopeFromUnit(lv_itHero), (("SetFilterPlayers " + IntToString(lv_itPlayerInIntro) + " Clear")));
            }
            UnitGroupClear(lv_heroessHidden[lv_itPlayerInIntro]);
        }
        libNtve_gf_RemovePlayerGroupFromPlayerGroup(lv_playersFinished, lv_playersInIntro);
        if ((PlayerGroupCount(lv_playersInIntro) == 0)) {
            break;
        }

        Wait(0.25, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SEMMHideHeroes_Init () {
    MimicStartingExperienceLib_gt_SEMMHideHeroes = TriggerCreate("MimicStartingExperienceLib_gt_SEMMHideHeroes_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Training Mode Init
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_TrainingModeInit_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_bankKey;
    unit lv_itUnitToHideMinimap;
    int lv_itPlayer;

    // Automatic Variable Declarations
    unitgroup auto2AF5D1CA_g;
    int auto2AF5D1CA_u;

    // Variable Initialization
    lv_bankKey = "";

    // Actions
    if (!runActions) {
        return true;
    }

    if ((MimicStartingExperienceLib_gf_InTrainingMode() == false) && (MimicStartingExperienceLib_gf_InPracticeMode() == false)) {
        return true;
    }

    if ((MimicStartingExperienceLib_gf_GameIsSinglePlayer() == false)) {
        return true;
    }

    if (((MimicStartingExperienceLib_gv_sE_Player < 1) || (MimicStartingExperienceLib_gv_sE_Player > libCore_gv_bALMaxPlayers))) {
        return true;
    }

    MimicStartingExperienceLib_gv_sE_Team = libGame_gf_TeamNumberOfPlayer(MimicStartingExperienceLib_gv_sE_Player);
    if ((libMapM_gf_PrimaryMapMechanic() == "")) {
        auto2AF5D1CA_g = UnitGroup("VehicleDragon", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto2AF5D1CA_u = UnitGroupCount(auto2AF5D1CA_g, c_unitCountAll);
        for (;; auto2AF5D1CA_u -= 1) {
            lv_itUnitToHideMinimap = UnitGroupUnitFromEnd(auto2AF5D1CA_g, auto2AF5D1CA_u);
            if (lv_itUnitToHideMinimap == null) { break; }
            libNtve_gf_SendActorMessageToUnit(lv_itUnitToHideMinimap, "SetMinimapVisibility");
            libNtve_gf_SendActorMessageToUnit(lv_itUnitToHideMinimap, "SetMinimapVisibilityAlways");
            UnitSetState(lv_itUnitToHideMinimap, c_unitStateHighlightable, false);
        }
    }

    TriggerExecute(MimicStartingExperienceLib_gt_SE_TrainingModeReferenceCardDisplay, true, false);
    TriggerExecute(MimicStartingExperienceLib_gt_SE_TrainingModeTipInitData, true, false);
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipDebugModeOnOff, true);
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTalentStart, true);
    if ((MimicStartingExperienceLib_gf_SE_TrainingModeTipIsOld(MimicStartingExperienceLib_ge_SE_TrainingModeTips_WatchTower) == false)) {
        TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipWatchTower, true);
    }

    if ((MimicStartingExperienceLib_gf_SE_TrainingModeTipIsOld(MimicStartingExperienceLib_ge_SE_TrainingModeTips_HealingFountain) == false)) {
        TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipHearthstoneHealingFountainMana, true);
        TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipHealingFountainDrinking, true);
    }

    if ((MimicStartingExperienceLib_gf_SE_TrainingModeTipIsOld(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Experience) == false)) {
        TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipExperience, true);
    }

    if ((MimicStartingExperienceLib_gf_SE_TrainingModeTipIsOld(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Forts) == false)) {
        TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipForts, true);
    }

    if ((MimicStartingExperienceLib_gf_SE_TrainingModeTipIsOld(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Gates) == false)) {
        TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipGates, true);
    }

    if ((MimicStartingExperienceLib_gf_SE_TrainingModeTipIsOld(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Mana) == false)) {
        TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipHearthstoneHealingFountainMana, true);
    }

    if ((MimicStartingExperienceLib_gf_SE_TrainingModeTipIsOld(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Ammo1) == false)) {
        TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipAmmunition1, true);
    }

    if ((MimicStartingExperienceLib_gf_SE_TrainingModeTipIsOld(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Bushes) == false)) {
        TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipBushes, true);
    }

    if ((MimicStartingExperienceLib_gf_SE_TrainingModeTipIsOld(MimicStartingExperienceLib_ge_SE_TrainingModeTips_MercCamps) == false)) {
        TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipMercCamps, true);
    }

    if ((MimicStartingExperienceLib_gf_SE_TrainingModeTipIsOld(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Hearthstone) == false)) {
        TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipHearthstoneHealingFountainMana, true);
    }

    if ((MimicStartingExperienceLib_gf_SE_TrainingModeTipIsOld(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Mount) == false) && (libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroData.lv_usesMounts == true)) {
        TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipMount, true);
    }

    if ((MimicStartingExperienceLib_gf_SE_TrainingModeTipIsOld(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Abilities) == false)) {
        TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipAbilities, true);
    }

    if ((MimicStartingExperienceLib_gf_SE_TrainingModeTipIsOld(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Death1) == false)) {
        TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipDeath1, true);
    }

    if ((MimicStartingExperienceLib_gf_SE_TrainingModeTipIsOld(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Spacebar) == false)) {
        TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipSpacebar, true);
    }

    if ((MimicStartingExperienceLib_gf_SE_TrainingModeTipIsOld(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Talents) == false)) {
        TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipTalents, true);
    }

    if ((MimicStartingExperienceLib_gf_SE_TrainingModeTipIsOld(MimicStartingExperienceLib_ge_SE_TrainingModeTips_CoreShield) == false)) {
        TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipCore, true);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_TrainingModeInit_Init () {
    MimicStartingExperienceLib_gt_TrainingModeInit = TriggerCreate("MimicStartingExperienceLib_gt_TrainingModeInit_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Training Mode Bank Init
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_TrainingModeBankInit_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_itPlayer;
    string lv_bankKey;
    int lv_itNewUserTip;

    // Automatic Variable Declarations
    const int autoF8F6748A_ae = libCore_gv_bALMaxPlayers;
    const int autoF8F6748A_ai = 1;
    int auto6F0AEFF1_ae;
    const int auto6F0AEFF1_ai = 1;

    // Variable Initialization
    lv_bankKey = "";

    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    MimicStartingExperienceLib_gv_sE_Player = 0;
    if ((MimicStartingExperienceLib_gf_GameIsSinglePlayer() == true)) {
        lv_itPlayer = 1;
        for ( ; ( (autoF8F6748A_ai >= 0 && lv_itPlayer <= autoF8F6748A_ae) || (autoF8F6748A_ai < 0 && lv_itPlayer >= autoF8F6748A_ae) ) ; lv_itPlayer += autoF8F6748A_ai ) {
            if ((PlayerStatus(lv_itPlayer) == c_playerStatusActive) && (PlayerType(lv_itPlayer) == c_playerTypeUser)) {
                MimicStartingExperienceLib_gv_sE_Player = lv_itPlayer;
                break;
            }

        }
    }

    lv_bankKey = MimicStartingExperienceLib_gv_sE_TrainingModeBankkey_RefCard_C;
    if ((BankKeyExists(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_bankData.lv_bank, MimicStartingExperienceLib_gv_sE_TrainingModeBankSection_C, lv_bankKey) == true)) {
        MimicStartingExperienceLib_gv_sE_TrainingModeRefCardTimes = BankValueGetAsInt(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_bankData.lv_bank, MimicStartingExperienceLib_gv_sE_TrainingModeBankSection_C, lv_bankKey);
    }
    else {
        MimicStartingExperienceLib_gv_sE_TrainingModeRefCardTimes = 0;
        BankValueSetFromInt(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_bankData.lv_bank, MimicStartingExperienceLib_gv_sE_TrainingModeBankSection_C, lv_bankKey, MimicStartingExperienceLib_gv_sE_TrainingModeRefCardTimes);
    }
    TriggerExecute(MimicStartingExperienceLib_gt_SE_TrainingModeTipInitData, true, false);
    if ((MimicStartingExperienceLib_gv_sE_Player > 0)) {
        lv_bankKey = MimicStartingExperienceLib_gv_sE_TrainingModeBankkey_OnOff_C;
        if ((BankKeyExists(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_bankData.lv_bank, MimicStartingExperienceLib_gv_sE_TrainingModeBankSection_C, lv_bankKey) == true)) {
            MimicStartingExperienceLib_gv_sE_TrainingMode = BankValueGetAsFlag(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_bankData.lv_bank, MimicStartingExperienceLib_gv_sE_TrainingModeBankSection_C, lv_bankKey);
        }
        else {
            MimicStartingExperienceLib_gv_sE_TrainingMode = false;
            BankValueSetFromFlag(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_bankData.lv_bank, MimicStartingExperienceLib_gv_sE_TrainingModeBankSection_C, lv_bankKey, MimicStartingExperienceLib_gv_sE_TrainingMode);
        }
        auto6F0AEFF1_ae = MimicStartingExperienceLib_gf_SE_TrainingModeTipCount();
        lv_itNewUserTip = 1;
        for ( ; ( (auto6F0AEFF1_ai >= 0 && lv_itNewUserTip <= auto6F0AEFF1_ae) || (auto6F0AEFF1_ai < 0 && lv_itNewUserTip >= auto6F0AEFF1_ae) ) ; lv_itNewUserTip += auto6F0AEFF1_ai ) {
            lv_bankKey = (MimicStartingExperienceLib_gv_sE_TrainingModeBankkey_Tip_C + IntToString((MimicStartingExperienceLib_gv_sE_TrainingModeTips[lv_itNewUserTip].lv_iD)));
            if ((BankKeyExists(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_bankData.lv_bank, MimicStartingExperienceLib_gv_sE_TrainingModeBankSection_C, lv_bankKey) == true)) {
                MimicStartingExperienceLib_gv_sE_TrainingModeTips[lv_itNewUserTip].lv_doneTimes = BankValueGetAsInt(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_bankData.lv_bank, MimicStartingExperienceLib_gv_sE_TrainingModeBankSection_C, lv_bankKey);
            }
            else {
                MimicStartingExperienceLib_gv_sE_TrainingModeTips[lv_itNewUserTip].lv_doneTimes = 0;
                BankValueSetFromInt(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_bankData.lv_bank, MimicStartingExperienceLib_gv_sE_TrainingModeBankSection_C, lv_bankKey, MimicStartingExperienceLib_gv_sE_TrainingModeTips[lv_itNewUserTip].lv_doneTimes);
            }
        }
        lv_bankKey = MimicStartingExperienceLib_gv_sE_TrainingModeBankkey_Talent_C;
        if ((BankKeyExists(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_bankData.lv_bank, MimicStartingExperienceLib_gv_sE_TrainingModeBankSection_C, lv_bankKey) == true)) {
            MimicStartingExperienceLib_gv_sE_TrainingModeTalentTaught = BankValueGetAsFlag(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_bankData.lv_bank, MimicStartingExperienceLib_gv_sE_TrainingModeBankSection_C, lv_bankKey);
        }
        else {
            MimicStartingExperienceLib_gv_sE_TrainingModeTalentTaught = false;
            BankValueSetFromFlag(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_bankData.lv_bank, MimicStartingExperienceLib_gv_sE_TrainingModeBankSection_C, lv_bankKey, MimicStartingExperienceLib_gv_sE_TrainingModeTalentTaught);
        }
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_TrainingModeBankInit_Init () {
    MimicStartingExperienceLib_gt_TrainingModeBankInit = TriggerCreate("MimicStartingExperienceLib_gt_TrainingModeBankInit_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingMode Talents Ready
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTalentsReady_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_bankKey;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_bankKey = "";

    // Conditions
    if (testConds) {
        if (!((libGame_gf_HeroLevelUpPlayer() == MimicStartingExperienceLib_gv_sE_Player))) {
            return false;
        }

        if (!((libGame_gv_teams[MimicStartingExperienceLib_gv_sE_Team].lv_teamLevel == 1))) {
            return false;
        }

        if (!((libGame_gv_talents_ActiveChoiceTierForPlayer[MimicStartingExperienceLib_gv_sE_Player] > 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    MimicStartingExperienceLib_gv_sE_TrainingModeTalentTaught = true;
    lv_bankKey = MimicStartingExperienceLib_gv_sE_TrainingModeBankkey_Talent_C;
    BankValueSetFromFlag(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_bankData.lv_bank, MimicStartingExperienceLib_gv_sE_TrainingModeBankSection_C, lv_bankKey, MimicStartingExperienceLib_gv_sE_TrainingModeTalentTaught);
    BankSave(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_bankData.lv_bank);
    libGame_gv_xPTrickleEnabled = false;
    TriggerExecute(MimicStartingExperienceLib_gt_SE_TrainingModeTalentsSuggestToOpenPanelQ, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTalentsReady_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTalentsReady = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTalentsReady_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTalentsReady, false);
    libGame_gf_HeroLevelUp(MimicStartingExperienceLib_gt_SE_TrainingModeTalentsReady);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingMode Talents Suggest To Open Panel Q
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTalentsSuggestToOpenPanelQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPanelOpened, true);
    if ((TimerGetElapsed(libGame_gv_gameTimer) == 0.0)) {
        libGame_gv_gateTimerReady = false;
        if ((TimerIsPaused(libGame_gv_openTheGatesTimer) == false)) {
            TimerPause(libGame_gv_openTheGatesTimer, true);
            MimicStartingExperienceLib_gv_sE_TrainingModeTalentTeachingOpenTheGateTimerPaused = true;
        }

        TriggerQueueEnter();
        if ((MimicStartingExperienceLib_gv_sE_TrainingModeTalentPanelOpened == false)) {
            Wait(1.0, c_timeGame);
            libCore_gf_SetAllSoundChannelVolumesStandardTiming(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll());
            libCore_gf_SendTransmissionCampaign(null, "TutorialVO|Line00561", c_transmissionDurationAdd, 0.0, false, libCore_ge_TransmissionPortraitOptioins_DontShowPortrait, libCore_ge_TransmissionCueSoundOptions_DefaultCueSoundBehavior);
            Wait(6.5, c_timeGame);
            if ((MimicStartingExperienceLib_gv_sE_TrainingModeTalentPanelOpened == false)) {
                MimicStartingExperienceLib_gf_SE_ShowHideTalentPortraitFlashingImage(true);
                libCore_gf_SendTransmissionCampaign(null, "TutorialVO|Line00562", c_transmissionDurationAdd, 0.0, false, libCore_ge_TransmissionPortraitOptioins_DontShowPortrait, libCore_ge_TransmissionCueSoundOptions_DefaultCueSoundBehavior);
                Wait(2.5, c_timeGame);
                if ((MimicStartingExperienceLib_gv_sE_TrainingModeTalentPanelOpened == false)) {
                    MimicStartingExperienceLib_gf_DisplayHintMessage(StringExternal("Param/Value/lib_StEx_26D54DC7"), true, 1.0);
                }

                TransmissionWait(TransmissionLastSent(), 0.0);
            }

            libCore_gf_SetAllSoundChannelVolumesStandardTiming(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll());
        }

        TriggerQueueExit();
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTalentsSuggestToOpenPanelQ_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTalentsSuggestToOpenPanelQ = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTalentsSuggestToOpenPanelQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingMode Talents Panel Opened
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPanelOpened_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    MimicStartingExperienceLib_gf_SE_ShowHideTalentPortraitFlashingImage(false);
    MimicStartingExperienceLib_gv_sE_TrainingModeTalentPanelOpened = true;
    CameraLockInput(MimicStartingExperienceLib_gv_sE_Player, true);
    CameraPan(MimicStartingExperienceLib_gv_sE_Player, UnitGetPosition(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit), 1.0, -1, 10.0, false);
    MimicStartingExperienceLib_gf_FreezeUnfreezeAllUnits(MimicStartingExperienceLib_ge_FreezeOptions_Freeze);
    libNtve_gf_MakeUnitUncommandable(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit, true);
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPicked, true);
    TransmissionClearGroup(PlayerGroupSingle(MimicStartingExperienceLib_gv_sE_Player));
    if ((MimicStartingExperienceLib_gv_sE_HintMsgPanel != c_invalidDialogControlId)) {
        DialogControlSetVisible(MimicStartingExperienceLib_gv_sE_HintMsgPanel, PlayerGroupAll(), true);
    }

    TriggerExecute(MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPanelFlashTalents, true, false);
    TriggerQueueEnter();
    if ((MimicStartingExperienceLib_gv_sE_TrainingModeTalentPicked == false)) {
        libCore_gf_SetAllSoundChannelVolumesStandardTiming(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll());
        libCore_gf_SendTransmissionCampaign(null, "TutorialVO|Line00563", c_transmissionDurationAdd, 0.0, true, libCore_ge_TransmissionPortraitOptioins_DontShowPortrait, libCore_ge_TransmissionCueSoundOptions_DefaultCueSoundBehavior);
        libCore_gf_SetAllSoundChannelVolumesStandardTiming(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll());
    }

    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPanelOpened_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPanelOpened = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPanelOpened_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPanelOpened, false);
    TriggerAddEventHeroTalentTreeSelectionPanelShown(MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPanelOpened, c_playerAny);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingMode Talents Panel - Flash Talents
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPanelFlashTalents_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DialogControlHookupStandard(c_triggerControlTypePanel, "UIContainer\\ConsoleUIContainer\\FloatingCombatUnitSelectionPanel\\UnitStatusFrame0\\HeroTalentTreeSelectionPanel\\TalentTreePanel\\TutorialTalentHighlight");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), true);
    while (!((MimicStartingExperienceLib_gv_sE_TrainingModeTalentPicked == true))) {
        Wait(0.5, c_timeGame);
    }
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPanelFlashTalents_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPanelFlashTalents = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPanelFlashTalents_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingMode Talents Picked
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPicked_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_bankKey;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_bankKey = "";

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    MimicStartingExperienceLib_gv_sE_TrainingModeTalentPicked = true;
    CameraLockInput(MimicStartingExperienceLib_gv_sE_Player, false);
    TransmissionClearGroup(PlayerGroupSingle(MimicStartingExperienceLib_gv_sE_Player));
    if ((MimicStartingExperienceLib_gv_sE_HintMsgPanel != c_invalidDialogControlId)) {
        DialogControlSetVisible(MimicStartingExperienceLib_gv_sE_HintMsgPanel, PlayerGroupAll(), true);
    }

    SetTalentTreePauseGameWhenSelectionPanelShown(true);
    CinematicMode(PlayerGroupAll(), false, 0.0);
    MimicStartingExperienceLib_gf_FreezeUnfreezeAllUnits(MimicStartingExperienceLib_ge_FreezeOptions_Unfrezze);
    libGame_gv_xPTrickleEnabled = true;
    libNtve_gf_MakeUnitUncommandable(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit, false);
    SoundPlayForPlayer(SoundLink("UI_Game_Training_PickTalentSound", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(1.0, c_timeGame);
    TriggerExecute(MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPickedTransmissionQ, true, false);
    Wait(1.0, c_timeGame);
    if ((MimicStartingExperienceLib_gv_sE_TrainingModeTalentTeachingOpenTheGateTimerPaused == true)) {
        TimerPause(libGame_gv_openTheGatesTimer, false);
    }

    libGame_gv_gateTimerReady = true;
    SetTalentTreeSelectionPanelDismissAllowed(true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPicked_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPicked = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPicked_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPicked, false);
    TriggerAddEventHeroTalentTreeSelected(MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPicked, c_playerAny);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingMode Talents Picked Transmission Q
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPickedTransmissionQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    libCore_gf_SetAllSoundChannelVolumesStandardTiming(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll());
    libCore_gf_SendTransmissionCampaign(null, "TutorialVO|Line00593", c_transmissionDurationAdd, 0.0, true, libCore_ge_TransmissionPortraitOptioins_DontShowPortrait, libCore_ge_TransmissionCueSoundOptions_DefaultCueSoundBehavior);
    libCore_gf_SendTransmissionCampaign(null, "TutorialVO|Line00564", c_transmissionDurationAdd, 0.0, true, libCore_ge_TransmissionPortraitOptioins_DontShowPortrait, libCore_ge_TransmissionCueSoundOptions_DefaultCueSoundBehavior);
    libCore_gf_SetAllSoundChannelVolumesStandardTiming(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll());
    TriggerQueueExit();
    MimicStartingExperienceLib_gv_sE_TrainingModeTalentPanelOpened = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPickedTransmissionQ_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPickedTransmissionQ = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPickedTransmissionQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingMode Talent Start
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTalentStart_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    SetTalentTreePauseGameWhenSelectionPanelShown(true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTalentStart_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTalentStart = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTalentStart_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTalentStart, false);
    TriggerAddEventTimer(MimicStartingExperienceLib_gt_SE_TrainingModeTalentStart, libGame_gv_openTheGatesTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingMode Reference Card Display
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeReferenceCardDisplay_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_itPlayer;
    bool lv_heroSpawned;
    string lv_bankKey;

    // Automatic Variable Declarations
    const int autoB5550F23_ae = libCore_gv_bALMaxPlayers;
    const int autoB5550F23_ai = 1;

    // Variable Initialization
    lv_bankKey = "";

    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    while (!((TimerGetDuration(libGame_gv_openTheGatesTimer) > 0.0) && (TimerGetRemaining(libGame_gv_openTheGatesTimer) <= 22.0))) {
        Wait(0.5, c_timeGame);
    }
    while (true) {
        lv_itPlayer = 1;
        for ( ; ( (autoB5550F23_ai >= 0 && lv_itPlayer <= autoB5550F23_ae) || (autoB5550F23_ai < 0 && lv_itPlayer >= autoB5550F23_ae) ) ; lv_itPlayer += autoB5550F23_ai ) {
            if ((UnitIsAlive(libGame_gv_players[lv_itPlayer].lv_heroUnit) == true)) {
                lv_heroSpawned = true;
                break;
            }

        }
        if ((lv_heroSpawned == true)) {
            break;
        }

        Wait(1.0, c_timeGame);
    }
    Wait(2.0, c_timeGame);
    if ((MimicStartingExperienceLib_gf_InTrainingMode() == true)) {
        MimicStartingExperienceLib_gv_sE_TrainingModeRefCardTimes += 1;
        lv_bankKey = MimicStartingExperienceLib_gv_sE_TrainingModeBankkey_RefCard_C;
        BankValueSetFromInt(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_bankData.lv_bank, MimicStartingExperienceLib_gv_sE_TrainingModeBankSection_C, lv_bankKey, MimicStartingExperienceLib_gv_sE_TrainingModeRefCardTimes);
        BankSave(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_bankData.lv_bank);
    }

    libUIUI_gf_AddTutorialReferenceItemPreset(libUIUI_ge_TutorialReferenceItem_Move);
    libUIUI_gf_AddTutorialReferenceItemPreset(libUIUI_ge_TutorialReferenceItem_Attack);
    libUIUI_gf_AddTutorialReferenceItemPreset(libUIUI_ge_TutorialReferenceItem_Abilities);
    libUIUI_gf_AddTutorialReferenceItemPreset(libUIUI_ge_TutorialReferenceItem_Mount);
    libUIUI_gf_AddTutorialReferenceItemPreset(libUIUI_ge_TutorialReferenceItem_Camera);
    if ((MimicStartingExperienceLib_gv_sE_TrainingModeRefCardTimes >= MimicStartingExperienceLib_gv_sE_TrainingModeRefCardTimesMax_C)) {
        DialogControlSetVisible(libUIUI_gv_tutorialReferencePanel, PlayerGroupAll(), false);
        DialogControlSetVisible(libUIUI_gv_tutorialReferenceShowHelp, PlayerGroupAll(), true);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeReferenceCardDisplay_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeReferenceCardDisplay = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeReferenceCardDisplay_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingModeTip Init Data
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTipInitData_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Abilities)].lv_iD = MimicStartingExperienceLib_ge_SE_TrainingModeTips_Abilities;
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Abilities)].lv_name = StringExternal("Param/Value/lib_StEx_44414396");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Abilities)].lv_description = StringExternal("Param/Value/lib_StEx_D36B2FCF");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Abilities)].lv_vO = "TutorialVO|Line00568";
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Ammo1)].lv_iD = MimicStartingExperienceLib_ge_SE_TrainingModeTips_Ammo1;
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Ammo1)].lv_name = StringToText("");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Ammo1)].lv_description = StringExternal("Param/Value/lib_StEx_37E7365C");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Ammo1)].lv_vO = "TutorialVO|Line00569";
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Ammo2)].lv_iD = MimicStartingExperienceLib_ge_SE_TrainingModeTips_Ammo2;
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Ammo2)].lv_name = StringToText("");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Ammo2)].lv_description = StringExternal("Param/Value/lib_StEx_FD5E621E");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Bushes)].lv_iD = MimicStartingExperienceLib_ge_SE_TrainingModeTips_Bushes;
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Bushes)].lv_name = StringToText("");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Bushes)].lv_description = StringExternal("Param/Value/lib_StEx_D9433DF9");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Bushes)].lv_vO = "TutorialVO|Line00570";
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_CoreShield)].lv_iD = MimicStartingExperienceLib_ge_SE_TrainingModeTips_CoreShield;
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_CoreShield)].lv_name = StringToText("");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_CoreShield)].lv_description = StringExternal("Param/Value/lib_StEx_93C5656C");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_CoreShield)].lv_vO = "TutorialVO|Line00571";
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Death1)].lv_iD = MimicStartingExperienceLib_ge_SE_TrainingModeTips_Death1;
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Death1)].lv_name = StringToText("");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Death1)].lv_description = StringExternal("Param/Value/lib_StEx_E3B176AC");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Death1)].lv_vO = "TutorialVO|Line00572";
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Death2)].lv_iD = MimicStartingExperienceLib_ge_SE_TrainingModeTips_Death2;
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Death2)].lv_name = StringToText("");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Death2)].lv_description = StringExternal("Param/Value/lib_StEx_9BBA30FD");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Death2)].lv_vO = "TutorialVO|Line00573";
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Experience)].lv_iD = MimicStartingExperienceLib_ge_SE_TrainingModeTips_Experience;
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Experience)].lv_name = StringToText("");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Experience)].lv_description = StringExternal("Param/Value/lib_StEx_C4306643");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Experience)].lv_vO = "TutorialVO|Line00580";
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Forts)].lv_iD = MimicStartingExperienceLib_ge_SE_TrainingModeTips_Forts;
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Forts)].lv_name = StringToText("");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Forts)].lv_description = StringExternal("Param/Value/lib_StEx_53947FF6");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Forts)].lv_vO = "TutorialVO|Line00581";
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Gates)].lv_iD = MimicStartingExperienceLib_ge_SE_TrainingModeTips_Gates;
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Gates)].lv_name = StringToText("");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Gates)].lv_description = StringExternal("Param/Value/lib_StEx_42ED54A0");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Gates)].lv_vO = "TutorialVO|Line00574";
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_HealingFountain)].lv_iD = MimicStartingExperienceLib_ge_SE_TrainingModeTips_HealingFountain;
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_HealingFountain)].lv_name = StringToText("");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_HealingFountain)].lv_description = StringExternal("Param/Value/lib_StEx_5FB0A15F");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_HealingFountain)].lv_vO = "TutorialVO|Line00582";
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Hearthstone)].lv_iD = MimicStartingExperienceLib_ge_SE_TrainingModeTips_Hearthstone;
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Hearthstone)].lv_name = StringToText("");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Hearthstone)].lv_description = StringExternal("Param/Value/lib_StEx_7FA8863D");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Hearthstone)].lv_vO = "TutorialVO|Line00583";
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_HearthstoneUsed)].lv_iD = MimicStartingExperienceLib_ge_SE_TrainingModeTips_HearthstoneUsed;
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_HearthstoneUsed)].lv_name = StringToText("");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_HearthstoneUsed)].lv_description = StringExternal("Param/Value/lib_StEx_8CBED564");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_HearthstoneUsed)].lv_vO = "TutorialVO|Line00584";
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Mana)].lv_iD = MimicStartingExperienceLib_ge_SE_TrainingModeTips_Mana;
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Mana)].lv_name = StringToText("");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Mana)].lv_description = StringExternal("Param/Value/lib_StEx_500B9D83");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Mana)].lv_vO = "TutorialVO|Line00588";
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_MercCamps)].lv_iD = MimicStartingExperienceLib_ge_SE_TrainingModeTips_MercCamps;
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_MercCamps)].lv_name = StringToText("");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_MercCamps)].lv_description = StringExternal("Param/Value/lib_StEx_15B05B80");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_MercCamps)].lv_vO = "TutorialVO|Line00605";
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Mount)].lv_iD = MimicStartingExperienceLib_ge_SE_TrainingModeTips_Mount;
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Mount)].lv_name = StringToText("");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Mount)].lv_description = StringExternal("Param/Value/lib_StEx_DEBAB952");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Mount)].lv_vO = "TutorialVO|Line00576";
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Spacebar)].lv_iD = MimicStartingExperienceLib_ge_SE_TrainingModeTips_Spacebar;
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Spacebar)].lv_name = StringToText("");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Spacebar)].lv_description = StringExternal("Param/Value/lib_StEx_F98F289B");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Spacebar)].lv_vO = "TutorialVO|Line00577";
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Talents)].lv_iD = MimicStartingExperienceLib_ge_SE_TrainingModeTips_Talents;
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Talents)].lv_name = StringToText("");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Talents)].lv_description = StringExternal("Param/Value/lib_StEx_38391ADB");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Talents)].lv_vO = "TutorialVO|Line00578";
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_WatchTower)].lv_iD = MimicStartingExperienceLib_ge_SE_TrainingModeTips_WatchTower;
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_WatchTower)].lv_name = StringToText("");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_WatchTower)].lv_description = StringExternal("Param/Value/lib_StEx_90394BFA");
    MimicStartingExperienceLib_gv_sE_TrainingModeTips[(MimicStartingExperienceLib_ge_SE_TrainingModeTips_WatchTower)].lv_vO = "TutorialVO|Line00579";
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTipInitData_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTipInitData = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTipInitData_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingModeTipAbilities
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTipAbilities_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipAbilitiesQWERUsed, true);
    Wait(120.0, c_timeGame);
    while (true) {
        if ((libGame_gv_gameOver == true)) {
            return true;
        }

        if ((UnitIsAlive(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit) == true) && (MimicStartingExperienceLib_gf_PlayerIsBeingAttacked() == false) && (MimicStartingExperienceLib_gv_sE_TrainingModeTipDisplaying == false)) {
            TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipAbilitiesQWERUsed, false);
            MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Abilities);
            MimicStartingExperienceLib_gf_SE_TrainingModeTipSetDisplayed(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Abilities);
            Wait(180.0, c_timeGame);
        }

        Wait(0.5, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTipAbilities_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTipAbilities = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTipAbilities_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipAbilities, false);
    TriggerAddEventTimer(MimicStartingExperienceLib_gt_SE_TrainingModeTipAbilities, libGame_gv_openTheGatesTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingModeTipAbilitiesQWERUsed
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTipAbilitiesQWERUsed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == MimicStartingExperienceLib_gv_sE_Player))) {
            return false;
        }

        if (!((libGame_gv_gameOver == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerStop(MimicStartingExperienceLib_gt_SE_TrainingModeTipAbilities);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTipAbilitiesQWERUsed_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTipAbilitiesQWERUsed = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTipAbilitiesQWERUsed_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipAbilitiesQWERUsed, false);
    TriggerAddEventKeyPressed(MimicStartingExperienceLib_gt_SE_TrainingModeTipAbilitiesQWERUsed, c_playerAny, c_keyQ, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateIgnore);
    TriggerAddEventKeyPressed(MimicStartingExperienceLib_gt_SE_TrainingModeTipAbilitiesQWERUsed, c_playerAny, c_keyW, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateIgnore);
    TriggerAddEventKeyPressed(MimicStartingExperienceLib_gt_SE_TrainingModeTipAbilitiesQWERUsed, c_playerAny, c_keyE, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateIgnore);
    TriggerAddEventKeyPressed(MimicStartingExperienceLib_gt_SE_TrainingModeTipAbilitiesQWERUsed, c_playerAny, c_keyR, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingModeTipAmmunition 1
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTipAmmunition1_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_towers;
    unit lv_itTower;

    // Automatic Variable Declarations
    unitgroup auto1125102F_g;
    int auto1125102F_u;

    // Variable Initialization
    lv_towers = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    Wait(2.0, c_timeGame);
    lv_towers = UnitGroupAlliance(MimicStartingExperienceLib_gv_sE_Player, c_unitAllianceEnemy, RegionEntireMap(), UnitFilter((1 << c_targetFilterTower) | (1 << c_targetFilterStructure), 0, (1 << c_targetFilterCreep) | (1 << c_targetFilterImmuneToSkillshots) | (1 << c_targetFilterMissile) | (1 << c_targetFilterItem), (1 << (c_targetFilterStasis - 32)) | (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32)) | (1 << (c_targetFilterOrdersPaused - 32))), 0);
    if ((libNtve_gf_UnitGroupIsDead(lv_towers) == true)) {
        return true;
    }

    while (true) {
        if ((libGame_gv_gameOver == true)) {
            return true;
        }

        if ((UnitIsAlive(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit) == true) && (MimicStartingExperienceLib_gf_PlayerIsBeingAttacked() == false) && (MimicStartingExperienceLib_gv_sE_TrainingModeTipDisplaying == false)) {
            auto1125102F_g = lv_towers;
            auto1125102F_u = UnitGroupCount(auto1125102F_g, c_unitCountAll);
            for (;; auto1125102F_u -= 1) {
                lv_itTower = UnitGroupUnitFromEnd(auto1125102F_g, auto1125102F_u);
                if (lv_itTower == null) { break; }
                if ((UnitGetPropertyFixed(lv_itTower, c_unitPropEnergy, c_unitPropCurrent) == 0.0) && (DistanceBetweenPoints(UnitGetPosition(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit), UnitGetPosition(lv_itTower)) < 12.0)) {
                    libCore_gf_AttachReticleEffectAndTextTagOnUnit(libCore_ge_ReticleType_Enemy, libCore_ge_ReticleSize_Medium, StringToText(""), lv_itTower, "Ref_Center");
                    MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Ammo1);
                    MimicStartingExperienceLib_gf_SE_TrainingModeTipSetDisplayed(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Ammo1);
                    Wait(MimicStartingExperienceLib_gv_sE_TrainingModeTipDuration_C, c_timeGame);
                    libNtve_gf_KillModel(libNtve_gf_ActorLastCreated());
                    return true;
                }

            }
        }

        Wait(0.5, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTipAmmunition1_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTipAmmunition1 = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTipAmmunition1_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipAmmunition1, false);
    TriggerAddEventTimer(MimicStartingExperienceLib_gt_SE_TrainingModeTipAmmunition1, libGame_gv_openTheGatesTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingModeTipBushes
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTipBushes_Func (bool testConds, bool runActions) {
    // Variable Declarations
    region lv_area;

    // Automatic Variable Declarations
    const int auto69DED0F3_n = 5;
    int auto69DED0F3_i;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    Wait(2.0, c_timeGame);
    while (true) {
        if ((libGame_gv_gameOver == true)) {
            return true;
        }

        if ((UnitIsAlive(libGame_gv_players[1].lv_heroUnit) == true) && (MimicStartingExperienceLib_gf_PlayerIsInCombat(1) == false) && (MimicStartingExperienceLib_gv_sE_TrainingModeTipDisplaying == false)) {
            if ((UnitHasBehavior2(libGame_gv_players[1].lv_heroUnit, "ShrubStatusController") == true) && (UnitBehaviorEnabled(libGame_gv_players[1].lv_heroUnit, "ShrubStatusController") == true) && (UnitBehaviorCount(libGame_gv_players[1].lv_heroUnit, "ShrubStatusController") > 0)) {
                MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Bushes);
                MimicStartingExperienceLib_gf_SE_TrainingModeTipSetDisplayed(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Bushes);
                lv_area = RegionCircle(UnitGetPosition(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit), 12.0);
                MimicStartingExperienceLib_gf_SE_TrainingModeTipBushesSendActorMessageToBushes("HaloSetColor 255,255,0", lv_area);
                for (auto69DED0F3_i = 1; auto69DED0F3_i <= auto69DED0F3_n; auto69DED0F3_i += 1) {
                    MimicStartingExperienceLib_gf_SE_TrainingModeTipBushesSendActorMessageToBushes("HaloStart", lv_area);
                    Wait(0.4, c_timeGame);
                    MimicStartingExperienceLib_gf_SE_TrainingModeTipBushesSendActorMessageToBushes("HaloStop", lv_area);
                    Wait(0.7, c_timeGame);
                }
                MimicStartingExperienceLib_gf_SE_TrainingModeTipBushesSendActorMessageToBushes("HaloClearColor", lv_area);
                return true;
            }

        }

        Wait(0.25, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTipBushes_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTipBushes = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTipBushes_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipBushes, false);
    TriggerAddEventTimer(MimicStartingExperienceLib_gt_SE_TrainingModeTipBushes, libGame_gv_openTheGatesTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingModeTipCore
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTipCore_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto92CE80BB_n = 8;
    int auto92CE80BB_i;

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    for (auto92CE80BB_i = 1; auto92CE80BB_i <= auto92CE80BB_n; auto92CE80BB_i += 1) {
        if ((libGame_gv_gameOver == true)) {
            return true;
        }

        if ((UnitIsAlive(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit) == true) && (DistanceBetweenPoints(UnitGetPosition(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit), UnitGetPosition(libGame_gv_teams[libGame_gf_EnemyTeam(MimicStartingExperienceLib_gv_sE_Team)].lv_core)) < 12.0) && (MimicStartingExperienceLib_gv_sE_TrainingModeTipDisplaying == false)) {
            libCore_gf_AttachReticleEffectAndTextTagOnUnit(libCore_ge_ReticleType_Enemy, libCore_ge_ReticleSize_Medium, StringToText(""), libGame_gv_teams[libGame_gf_EnemyTeam(MimicStartingExperienceLib_gv_sE_Team)].lv_core, "Ref_Center");
            MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Forts);
            MimicStartingExperienceLib_gf_SE_TrainingModeTipSetDisplayed(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Forts);
            Wait(MimicStartingExperienceLib_gv_sE_TrainingModeTipDuration_C, c_timeGame);
            libNtve_gf_KillModel(libNtve_gf_ActorLastCreated());
            return true;
        }

        Wait(0.5, c_timeGame);
    }
    TriggerEnable(TriggerGetCurrent(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTipCore_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTipCore = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTipCore_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipCore, false);
    TriggerAddEventTimer(MimicStartingExperienceLib_gt_SE_TrainingModeTipCore, libGame_gv_openTheGatesTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingModeTipDeath1
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTipDeath1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libGame_gf_HeroKilledPlayer() == MimicStartingExperienceLib_gv_sE_Player))) {
            return false;
        }

        if (!((libGame_gv_gameOver == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    Wait(2.0, c_timeGame);
    MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Death1);
    MimicStartingExperienceLib_gf_SE_TrainingModeTipSetDisplayed(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Death1);
    Wait(MimicStartingExperienceLib_gv_sE_TrainingModeTipDuration_C, c_timeGame);
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipDeath2, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTipDeath1_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTipDeath1 = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTipDeath1_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipDeath1, false);
    libGame_gf_HeroKilled(MimicStartingExperienceLib_gt_SE_TrainingModeTipDeath1);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingModeTipDeath2
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTipDeath2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libGame_gf_HeroKilledPlayer() == MimicStartingExperienceLib_gv_sE_Player))) {
            return false;
        }

        if (!((libGame_gv_gameOver == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    Wait(2.0, c_timeGame);
    MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Death2);
    MimicStartingExperienceLib_gf_SE_TrainingModeTipSetDisplayed(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Death2);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTipDeath2_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTipDeath2 = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTipDeath2_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipDeath2, false);
    libGame_gf_HeroKilled(MimicStartingExperienceLib_gt_SE_TrainingModeTipDeath2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingModeTipExperience
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTipExperience_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libGame_gf_HeroLevelUpPlayer() == MimicStartingExperienceLib_gv_sE_Player))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    while (true) {
        if ((libGame_gv_gameOver == true)) {
            return true;
        }

        if ((UnitIsAlive(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit) == true) && (MimicStartingExperienceLib_gf_PlayerIsBeingAttacked() == false) && (MimicStartingExperienceLib_gv_sE_TrainingModeTipDisplaying == false) && ((libNtve_gf_UnitGroupIsDead(UnitGroup(libCore_gf_DataMinionUnitTypeFromPreset(libCore_ge_MinionTypes_Footmen), libGame_gf_ComputerPlayerInTeam(libGame_gf_EnemyTeam(MimicStartingExperienceLib_gv_sE_Team)), RegionCircle(UnitGetPosition(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit), 8.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1)) == false) || (libNtve_gf_UnitGroupIsDead(UnitGroup(libCore_gf_DataMinionUnitTypeFromPreset(libCore_ge_MinionTypes_Wizard), libGame_gf_ComputerPlayerInTeam(libGame_gf_EnemyTeam(MimicStartingExperienceLib_gv_sE_Team)), RegionCircle(UnitGetPosition(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit), 8.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1)) == false) || (libNtve_gf_UnitGroupIsDead(UnitGroup(libCore_gf_DataMinionUnitTypeFromPreset(libCore_ge_MinionTypes_Ranged), libGame_gf_ComputerPlayerInTeam(libGame_gf_EnemyTeam(MimicStartingExperienceLib_gv_sE_Team)), RegionCircle(UnitGetPosition(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit), 8.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 1)) == false))) {
            MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Experience);
            MimicStartingExperienceLib_gf_SE_TrainingModeTipSetDisplayed(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Experience);
            return true;
        }

        Wait(0.5, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTipExperience_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTipExperience = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTipExperience_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipExperience, false);
    libGame_gf_HeroLevelUp(MimicStartingExperienceLib_gt_SE_TrainingModeTipExperience);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingModeTipForts
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTipForts_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_forts;

    // Automatic Variable Declarations
    const int autoE83221F0_n = 8;
    int autoE83221F0_i;

    // Variable Initialization
    lv_forts = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    for (autoE83221F0_i = 1; autoE83221F0_i <= autoE83221F0_n; autoE83221F0_i += 1) {
        if ((libGame_gv_gameOver == true)) {
            return true;
        }

        if ((UnitIsAlive(libGame_gv_players[1].lv_heroUnit) == true) && (MimicStartingExperienceLib_gv_sE_TrainingModeTipDisplaying == false)) {
            lv_forts = UnitGroup("TownTownHallL2", libGame_gf_ComputerPlayerInTeam(libGame_gf_EnemyTeam(MimicStartingExperienceLib_gv_sE_Team)), RegionCircle(UnitGetPosition(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit), 10.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
            if ((libNtve_gf_UnitGroupIsDead(lv_forts) == true)) {
                lv_forts = UnitGroup("TownTownHallL3", libGame_gf_ComputerPlayerInTeam(libGame_gf_EnemyTeam(MimicStartingExperienceLib_gv_sE_Team)), RegionCircle(UnitGetPosition(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit), 10.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
            }

            if ((libNtve_gf_UnitGroupIsDead(lv_forts) == false)) {
                libCore_gf_AttachReticleEffectAndTextTagOnUnit(libCore_ge_ReticleType_Enemy, libCore_ge_ReticleSize_Medium, StringToText(""), UnitGroupUnit(lv_forts, 1), "Ref_Center");
                MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Forts);
                MimicStartingExperienceLib_gf_SE_TrainingModeTipSetDisplayed(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Forts);
                Wait(MimicStartingExperienceLib_gv_sE_TrainingModeTipDuration_C, c_timeGame);
                libNtve_gf_KillModel(libNtve_gf_ActorLastCreated());
                return true;
            }

        }

        Wait(0.5, c_timeGame);
    }
    TriggerEnable(TriggerGetCurrent(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTipForts_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTipForts = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTipForts_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipForts, false);
    TriggerAddEventTimer(MimicStartingExperienceLib_gt_SE_TrainingModeTipForts, libGame_gv_openTheGatesTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingModeTipGates
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTipGates_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_gates;
    int lv_itTown;
    int lv_itTownStructures;
    unit lv_itGate;

    // Automatic Variable Declarations
    int auto05588EDB_ae;
    const int auto05588EDB_ai = 1;
    int autoCA607DED_ae;
    const int autoCA607DED_ai = 1;
    unitgroup autoBDCF1F76_g;
    int autoBDCF1F76_u;

    // Variable Initialization
    lv_gates = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    Wait(2.0, c_timeGame);
    auto05588EDB_ae = libGame_gv_townTownCount;
    lv_itTown = 1;
    for ( ; ( (auto05588EDB_ai >= 0 && lv_itTown <= auto05588EDB_ae) || (auto05588EDB_ai < 0 && lv_itTown >= auto05588EDB_ae) ) ; lv_itTown += auto05588EDB_ai ) {
        if ((libGame_gv_townTownData[lv_itTown].lv_owner != libGame_gf_ComputerPlayerInTeam(libGame_gf_EnemyTeam(MimicStartingExperienceLib_gv_sE_Team)))) {
            continue;
        }

        autoCA607DED_ae = libGame_gv_townTownData[lv_itTown].lv_structureCount;
        lv_itTownStructures = 1;
        for ( ; ( (autoCA607DED_ai >= 0 && lv_itTownStructures <= autoCA607DED_ae) || (autoCA607DED_ai < 0 && lv_itTownStructures >= autoCA607DED_ae) ) ; lv_itTownStructures += autoCA607DED_ai ) {
            if ((UnitTypeTestFlag(UnitGetType(libGame_gv_townTownData[lv_itTown].lv_structureUnits[lv_itTownStructures]), c_unitFlagTownStructureGate) == true)) {
                UnitGroupAdd(lv_gates, libGame_gv_townTownData[lv_itTown].lv_structureUnits[lv_itTownStructures]);
            }

        }
    }
    if ((libNtve_gf_UnitGroupIsDead(lv_gates) == true)) {
        return true;
    }

    while (true) {
        if ((libGame_gv_gameOver == true)) {
            return true;
        }

        if ((UnitIsAlive(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit) == true) && (MimicStartingExperienceLib_gf_PlayerIsBeingAttacked() == false) && (MimicStartingExperienceLib_gv_sE_TrainingModeTipDisplaying == false)) {
            autoBDCF1F76_g = lv_gates;
            autoBDCF1F76_u = UnitGroupCount(autoBDCF1F76_g, c_unitCountAll);
            for (;; autoBDCF1F76_u -= 1) {
                lv_itGate = UnitGroupUnitFromEnd(autoBDCF1F76_g, autoBDCF1F76_u);
                if (lv_itGate == null) { break; }
                if ((DistanceBetweenPoints(UnitGetPosition(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit), UnitGetPosition(lv_itGate)) < 3.0)) {
                    libCore_gf_AttachReticleEffectAndTextTagOnUnit(libCore_ge_ReticleType_Enemy, libCore_ge_ReticleSize_Medium, StringToText(""), lv_itGate, "Ref_Center");
                    MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Gates);
                    MimicStartingExperienceLib_gf_SE_TrainingModeTipSetDisplayed(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Gates);
                    Wait(MimicStartingExperienceLib_gv_sE_TrainingModeTipDuration_C, c_timeGame);
                    libNtve_gf_KillModel(libNtve_gf_ActorLastCreated());
                    return true;
                }

            }
        }

        Wait(0.5, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTipGates_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTipGates = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTipGates_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipGates, false);
    TriggerAddEventTimer(MimicStartingExperienceLib_gt_SE_TrainingModeTipGates, libGame_gv_openTheGatesTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingModeTipHearthstone/Healing Fountain/Mana
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTipHearthstoneHealingFountainMana_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_healingFountains;
    unit lv_itHealingFountain;

    // Automatic Variable Declarations
    unitgroup auto00B49A0C_g;
    int auto00B49A0C_u;

    // Variable Initialization
    lv_healingFountains = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    Wait(2.0, c_timeGame);
    if ((MimicStartingExperienceLib_gf_SE_TrainingModeTipIsOld(MimicStartingExperienceLib_ge_SE_TrainingModeTips_HealingFountain) == false)) {
        TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipHealingFountainDrinking, false);
        lv_healingFountains = UnitGroup("TownMoonwellL2", libGame_gf_ComputerPlayerInTeam(MimicStartingExperienceLib_gv_sE_Team), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        UnitGroupAddUnitGroup(lv_healingFountains, UnitGroup("TownMoonwellL3", libGame_gf_ComputerPlayerInTeam(MimicStartingExperienceLib_gv_sE_Team), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0));
    }

    while (true) {
        if ((libGame_gv_gameOver == true)) {
            return true;
        }

        if ((MimicStartingExperienceLib_gf_SE_TrainingModeTipIsOld(MimicStartingExperienceLib_ge_SE_TrainingModeTips_HealingFountain) == false) && (MimicStartingExperienceLib_gv_sE_TrainingModeTipHealingFountainDid == false)) {
            if ((UnitIsAlive(libGame_gv_players[1].lv_heroUnit) == true) && (UnitGetPropertyFixed(libGame_gv_players[1].lv_heroUnit, c_unitPropLifePercent, c_unitPropCurrent) < 60.0) && (UnitHasBehavior2(libGame_gv_players[1].lv_heroUnit, "HealingFountainCooldown") == false) && (MimicStartingExperienceLib_gv_sE_TrainingModeTipDisplaying == false)) {
                if ((MimicStartingExperienceLib_gv_sE_TrainingModeTipHealingFountainReticle == null)) {
                    auto00B49A0C_g = lv_healingFountains;
                    auto00B49A0C_u = UnitGroupCount(auto00B49A0C_g, c_unitCountAll);
                    for (;; auto00B49A0C_u -= 1) {
                        lv_itHealingFountain = UnitGroupUnitFromEnd(auto00B49A0C_g, auto00B49A0C_u);
                        if (lv_itHealingFountain == null) { break; }
                        if ((DistanceBetweenPoints(UnitGetPosition(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit), UnitGetPosition(lv_itHealingFountain)) < 14.0)) {
                            libCore_gf_AttachReticleEffectAndTextTagOnUnit(libCore_ge_ReticleType_MainObjective, libCore_ge_ReticleSize_Medium, StringToText(""), lv_itHealingFountain, "Ref_Center");
                            MimicStartingExperienceLib_gv_sE_TrainingModeTipHealingFountainReticle = libNtve_gf_ActorLastCreated();
                            TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipHealingFountainUsed, true);
                            break;
                        }

                    }
                }

                MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay(MimicStartingExperienceLib_ge_SE_TrainingModeTips_HealingFountain);
                MimicStartingExperienceLib_gf_SE_TrainingModeTipSetDisplayed(MimicStartingExperienceLib_ge_SE_TrainingModeTips_HealingFountain);
                Wait(MimicStartingExperienceLib_gv_sE_TrainingModeTipDuration_C, c_timeGame);
                if ((MimicStartingExperienceLib_gv_sE_TrainingModeTipHealingFountainReticle != null)) {
                    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipHealingFountainUsed, false);
                    libNtve_gf_KillModel(MimicStartingExperienceLib_gv_sE_TrainingModeTipHealingFountainReticle);
                    MimicStartingExperienceLib_gv_sE_TrainingModeTipHealingFountainReticle = null;
                }

                Wait(360.0, c_timeGame);
            }

        }

        if ((MimicStartingExperienceLib_gf_SE_TrainingModeTipIsOld(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Hearthstone) == false) && (MimicStartingExperienceLib_gv_sE_TrainingModeTipHearthstoneDid == false)) {
            if ((UnitIsAlive(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit) == true) && (MimicStartingExperienceLib_gf_PlayerIsBeingAttacked() == false) && (MimicStartingExperienceLib_gv_sE_TrainingModeTipDisplaying == false) && (UnitGetPropertyFixed(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit, c_unitPropLifePercent, c_unitPropCurrent) < 40.0)) {
                MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Hearthstone);
                MimicStartingExperienceLib_gf_SE_TrainingModeTipSetDisplayed(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Hearthstone);
                MimicStartingExperienceLib_gf_SE_TrainingModeTipSetDisplayed(MimicStartingExperienceLib_ge_SE_TrainingModeTips_HearthstoneUsed);
                MimicStartingExperienceLib_gf_HighlightCommandButton(true, MimicStartingExperienceLib_ge_TutorialCommandButton_Hearth);
                TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipHearthstoneUnhighlightButton, true);
                Wait(MimicStartingExperienceLib_gv_sE_TrainingModeTipDuration_C, c_timeGame);
                MimicStartingExperienceLib_gf_HighlightCommandButton(false, MimicStartingExperienceLib_ge_TutorialCommandButton_Hearth);
                MimicStartingExperienceLib_gv_sE_TrainingModeTipHearthstoneDid = true;
                TriggerExecute(MimicStartingExperienceLib_gt_SE_TrainingModeTipHearthstoneTeachingExpires, true, false);
                Wait(360.0, c_timeGame);
            }

        }

        if ((MimicStartingExperienceLib_gf_SE_TrainingModeTipIsOld(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Mana) == false) && (MimicStartingExperienceLib_gv_sE_TrainingModeTipManaDid == false)) {
            if ((UnitIsAlive(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit) == true) && (MimicStartingExperienceLib_gv_sE_TrainingModeTipDisplaying == false) && (UnitHasBehavior2(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit, "NotManaUserDummy") == false) && (UnitGetPropertyFixed(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit, c_unitPropEnergyPercent, c_unitPropCurrent) < 30.0)) {
                MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Mana);
                MimicStartingExperienceLib_gf_SE_TrainingModeTipSetDisplayed(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Mana);
                Wait(MimicStartingExperienceLib_gv_sE_TrainingModeTipDuration_C, c_timeGame);
                MimicStartingExperienceLib_gv_sE_TrainingModeTipManaDid = true;
                TriggerExecute(MimicStartingExperienceLib_gt_SE_TrainingModeTipManaTeachingExpires, true, false);
                Wait(240.0, c_timeGame);
            }

        }

        Wait(0.5, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTipHearthstoneHealingFountainMana_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTipHearthstoneHealingFountainMana = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTipHearthstoneHealingFountainMana_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipHearthstoneHealingFountainMana, false);
    TriggerAddEventTimer(MimicStartingExperienceLib_gt_SE_TrainingModeTipHearthstoneHealingFountainMana, libGame_gv_openTheGatesTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingModeTipHearthstoneTeachingExpires
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTipHearthstoneTeachingExpires_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    Wait(180.0, c_timeGame);
    MimicStartingExperienceLib_gv_sE_TrainingModeTipHearthstoneDid = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTipHearthstoneTeachingExpires_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTipHearthstoneTeachingExpires = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTipHearthstoneTeachingExpires_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingModeTipManaTeachingExpires
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTipManaTeachingExpires_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    Wait(60.0, c_timeGame);
    MimicStartingExperienceLib_gv_sE_TrainingModeTipManaDid = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTipManaTeachingExpires_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTipManaTeachingExpires = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTipManaTeachingExpires_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingModeTipHearthstoneUnhighlightButton
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTipHearthstoneUnhighlightButton_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libGame_gv_gameOver == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    MimicStartingExperienceLib_gf_HighlightCommandButton(false, MimicStartingExperienceLib_ge_TutorialCommandButton_Hearth);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTipHearthstoneUnhighlightButton_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTipHearthstoneUnhighlightButton = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTipHearthstoneUnhighlightButton_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipHearthstoneUnhighlightButton, false);
    TriggerAddEventUnitAbility(MimicStartingExperienceLib_gt_SE_TrainingModeTipHearthstoneUnhighlightButton, UnitRefFromVariable("libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit"), AbilityCommand("PortBackToBase", 0), c_abilEffectStageCast, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingModeTipHealingFountainUsed
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTipHealingFountainUsed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libGame_gv_gameOver == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    if ((MimicStartingExperienceLib_gv_sE_TrainingModeTipHealingFountainReticle != null)) {
        libNtve_gf_KillModel(MimicStartingExperienceLib_gv_sE_TrainingModeTipHealingFountainReticle);
        MimicStartingExperienceLib_gv_sE_TrainingModeTipHealingFountainReticle = null;
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTipHealingFountainUsed_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTipHealingFountainUsed = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTipHealingFountainUsed_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipHealingFountainUsed, false);
    TriggerAddEventUnitAbility(MimicStartingExperienceLib_gt_SE_TrainingModeTipHealingFountainUsed, UnitRefFromVariable("libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit"), AbilityCommand("FountainDrink", 0), c_unitAbilStageExecute, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingModeTipHealingFountainDrinking
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTipHealingFountainDrinking_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    while (true) {
        if ((libGame_gv_gameOver == true)) {
            return true;
        }

        if ((UnitIsAlive(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit) == true) && (MimicStartingExperienceLib_gv_sE_TrainingModeTipDisplaying == false)) {
            MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay(MimicStartingExperienceLib_ge_SE_TrainingModeTips_HealingFountain);
            MimicStartingExperienceLib_gf_SE_TrainingModeTipSetDisplayed(MimicStartingExperienceLib_ge_SE_TrainingModeTips_HealingFountain);
            return true;
        }

        Wait(0.5, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTipHealingFountainDrinking_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTipHealingFountainDrinking = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTipHealingFountainDrinking_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipHealingFountainDrinking, false);
    TriggerAddEventUnitAbility(MimicStartingExperienceLib_gt_SE_TrainingModeTipHealingFountainDrinking, UnitRefFromVariable("libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit"), AbilityCommand("FountainDrink", 0), c_unitAbilStageExecute, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingModeTipMercCamps
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTipMercCamps_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_towers;
    int lv_itCamp;

    // Automatic Variable Declarations
    int auto5C5FA041_ae;
    const int auto5C5FA041_ai = 1;

    // Variable Initialization
    lv_towers = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    Wait(2.0, c_timeGame);
    while (true) {
        if ((libGame_gv_gameOver == true)) {
            return true;
        }

        if ((UnitIsAlive(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit) == true) && (MimicStartingExperienceLib_gf_PlayerIsInCombat(1) == false) && (MimicStartingExperienceLib_gv_sE_TrainingModeTipDisplaying == false)) {
            auto5C5FA041_ae = libMapM_gv_jungleNumberOfCreepCamps;
            lv_itCamp = 1;
            for ( ; ( (auto5C5FA041_ai >= 0 && lv_itCamp <= auto5C5FA041_ae) || (auto5C5FA041_ai < 0 && lv_itCamp >= auto5C5FA041_ae) ) ; lv_itCamp += auto5C5FA041_ai ) {
                if ((libMapM_gv_jungleCreepCamps[lv_itCamp].lv_aIState == libMapM_ge_JungleCampStates_Idle) && (libMapM_gv_jungleCreepCamps[lv_itCamp].lv_mapDataCampType != libMapM_ge_JungleCampTypes_DoubloonCamp) && (libMapM_gv_jungleCreepCamps[lv_itCamp].lv_mapDataCampType != libMapM_ge_JungleCampTypes_DoubloonSmallCamp) && (DistanceBetweenPoints(libMapM_gv_jungleCreepCamps[lv_itCamp].lv_mapDataCampCaptainSpawnPoint, UnitGetPosition(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit)) < 12.0)) {
                    libCore_gf_CreateReticleEffectAndTextTagAtPoint(libCore_ge_ReticleType_BonusObjective, libCore_ge_ReticleSize_Large, null, libMapM_gv_jungleCreepCamps[lv_itCamp].lv_mapDataCampCaptainSpawnPoint);
                    MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay(MimicStartingExperienceLib_ge_SE_TrainingModeTips_MercCamps);
                    MimicStartingExperienceLib_gf_SE_TrainingModeTipSetDisplayed(MimicStartingExperienceLib_ge_SE_TrainingModeTips_MercCamps);
                    VisRevealArea(MimicStartingExperienceLib_gv_sE_Player, RegionCircle(libMapM_gv_jungleCreepCamps[lv_itCamp].lv_mapDataCampCaptainSpawnPoint, 8.0), MimicStartingExperienceLib_gv_sE_TrainingModeTipDuration_C, false);
                    Wait(MimicStartingExperienceLib_gv_sE_TrainingModeTipDuration_C, c_timeGame);
                    libNtve_gf_KillModel(libNtve_gf_ActorLastCreated());
                    return true;
                }

            }
        }

        Wait(0.25, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTipMercCamps_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTipMercCamps = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTipMercCamps_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipMercCamps, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingModeTipMount
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTipMount_Func (bool testConds, bool runActions) {
    // Variable Declarations
    point lv_originalLoc;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    while (true) {
        if ((libGame_gv_gameOver == true)) {
            return true;
        }

        if ((UnitIsAlive(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit) == true) && (MimicStartingExperienceLib_gf_PlayerIsInCombat(1) == false) && (libGame_gf_MountEnabled(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit) == true) && ((UnitHasBehavior2(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit, "Mounted") == false) || (UnitBehaviorEnabled(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit, "Mounted") == false) || (UnitBehaviorCount(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit, "Mounted") == 0))) {
            if ((lv_originalLoc == null)) {
                lv_originalLoc = UnitGetPosition(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit);
            }
            else {
                if ((MimicStartingExperienceLib_gv_sE_TrainingModeTipDisplaying == false) && (DistanceBetweenPoints(UnitGetPosition(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit), lv_originalLoc) > 25.0)) {
                    MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Mount);
                    MimicStartingExperienceLib_gf_SE_TrainingModeTipSetDisplayed(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Mount);
                    MimicStartingExperienceLib_gf_HighlightCommandButton(true, MimicStartingExperienceLib_ge_TutorialCommandButton_Mount);
                    Wait(MimicStartingExperienceLib_gv_sE_TrainingModeTipDuration_C, c_timeGame);
                    MimicStartingExperienceLib_gf_HighlightCommandButton(false, MimicStartingExperienceLib_ge_TutorialCommandButton_Mount);
                    Wait(120.0, c_timeGame);
                    lv_originalLoc = null;
                    if ((MimicStartingExperienceLib_gf_SE_TrainingModeTipIsOld(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Mount) == true)) {
                        return true;
                    }

                }

            }
        }
        else {
            lv_originalLoc = null;
        }
        Wait(0.5, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTipMount_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTipMount = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTipMount_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipMount, false);
    TriggerAddEventTimer(MimicStartingExperienceLib_gt_SE_TrainingModeTipMount, libGame_gv_openTheGatesTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingModeTipMountUnhighlightButton
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTipMountUnhighlightButton_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    MimicStartingExperienceLib_gf_HighlightCommandButton(false, MimicStartingExperienceLib_ge_TutorialCommandButton_Mount);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTipMountUnhighlightButton_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTipMountUnhighlightButton = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTipMountUnhighlightButton_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipMountUnhighlightButton, false);
    TriggerAddEventUnitAbility(MimicStartingExperienceLib_gt_SE_TrainingModeTipMountUnhighlightButton, UnitRefFromVariable("libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit"), AbilityCommand("Mount", 0), c_abilEffectStageCast, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingModeTipSpacebar
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTipSpacebar_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_watchTowers;
    unit lv_itWatchTower;
    bool lv_cameraOff;
    timer lv_cameraOffTimer;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_watchTowers = UnitGroupEmpty();
    lv_cameraOffTimer = TimerCreate();

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    Wait(30.0, c_timeGame);
    while (true) {
        if ((libGame_gv_gameOver == true)) {
            return true;
        }

        if ((lv_cameraOff == false)) {
            if ((DistanceBetweenPoints(UnitGetPosition(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit), CameraGetTarget(MimicStartingExperienceLib_gv_sE_Player)) > 12.0)) {
                lv_cameraOff = true;
                TimerStart(lv_cameraOffTimer, 6.0, false, c_timeGame);
            }

        }
        else {
            if ((DistanceBetweenPoints(UnitGetPosition(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit), CameraGetTarget(MimicStartingExperienceLib_gv_sE_Player)) < 6.0)) {
                lv_cameraOff = false;
                TimerPause(lv_cameraOffTimer, true);
            }

        }
        if ((UnitIsAlive(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit) == true) && (MimicStartingExperienceLib_gf_PlayerIsBeingAttacked() == false) && (MimicStartingExperienceLib_gv_sE_TrainingModeTipDisplaying == false) && (lv_cameraOff == true) && (TimerGetRemaining(lv_cameraOffTimer) == 0.0)) {
            MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Spacebar);
            MimicStartingExperienceLib_gf_SE_TrainingModeTipSetDisplayed(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Spacebar);
            lv_cameraOff = false;
            Wait(120.0, c_timeGame);
        }

        Wait(0.5, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTipSpacebar_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTipSpacebar = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTipSpacebar_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipSpacebar, false);
    TriggerAddEventTimer(MimicStartingExperienceLib_gt_SE_TrainingModeTipSpacebar, libGame_gv_openTheGatesTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingModeTipTalents
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTipTalents_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_availableTime;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipTalentsPanelOpened, true);
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipTalentsPanelClosed, true);
    MimicStartingExperienceLib_gv_sE_TrainingModeTalentPanelOpened = false;
    while (true) {
        if ((libGame_gv_gameOver == true)) {
            return true;
        }

        if ((libGame_gv_talents_ActiveChoiceTierForPlayer[1] > 0)) {
            if ((lv_availableTime > 0.0)) {
                if ((UnitIsAlive(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit) == true) && (MimicStartingExperienceLib_gf_PlayerIsBeingAttacked() == false) && (MimicStartingExperienceLib_gv_sE_TrainingModeTipDisplaying == false) && ((GameGetMissionTime() - lv_availableTime) > 15.0) && (MimicStartingExperienceLib_gv_sE_TrainingModeTalentPanelOpened == false)) {
                    MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Talents);
                    MimicStartingExperienceLib_gf_SE_TrainingModeTipSetDisplayed(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Talents);
                    MimicStartingExperienceLib_gf_SE_ShowHideTalentPortraitFlashingImage(true);
                    Wait(MimicStartingExperienceLib_gv_sE_TrainingModeTipDuration_C, c_timeGame);
                    Wait(120.0, c_timeGame);
                    lv_availableTime = 0.0;
                    if ((MimicStartingExperienceLib_gf_SE_TrainingModeTipIsOld(MimicStartingExperienceLib_ge_SE_TrainingModeTips_Talents) == true)) {
                        return true;
                    }

                }

            }
            else {
                lv_availableTime = GameGetMissionTime();
            }
        }
        else {
            lv_availableTime = 0.0;
        }
        Wait(0.5, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTipTalents_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTipTalents = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTipTalents_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipTalents, false);
    TriggerAddEventTimer(MimicStartingExperienceLib_gt_SE_TrainingModeTipTalents, libGame_gv_openTheGatesTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingModeTipTalentsPanelOpened
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTipTalentsPanelOpened_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    MimicStartingExperienceLib_gf_SE_ShowHideTalentPortraitFlashingImage(false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTipTalentsPanelOpened_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTipTalentsPanelOpened = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTipTalentsPanelOpened_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipTalentsPanelOpened, false);
    TriggerAddEventHeroTalentTreeSelectionPanelShown(MimicStartingExperienceLib_gt_SE_TrainingModeTipTalentsPanelOpened, c_playerAny);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingModeTipTalentsPanelClosed
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTipTalentsPanelClosed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    MimicStartingExperienceLib_gf_SE_ShowHideTalentPortraitFlashingImage(false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTipTalentsPanelClosed_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTipTalentsPanelClosed = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTipTalentsPanelClosed_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipTalentsPanelClosed, false);
    TriggerAddEventHeroTalentTreeSelectionPanelHidden(MimicStartingExperienceLib_gt_SE_TrainingModeTipTalentsPanelClosed, c_playerAny);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingModeTipWatchTower
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTipWatchTower_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_watchTowers;
    unit lv_itWatchTower;

    // Automatic Variable Declarations
    unitgroup autoB26AF25F_g;
    int autoB26AF25F_u;

    // Variable Initialization
    lv_watchTowers = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    Wait(2.0, c_timeGame);
    lv_watchTowers = UnitGroup("XelNagaWatchTower", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    if ((libNtve_gf_UnitGroupIsDead(lv_watchTowers) == true)) {
        return true;
    }

    while (true) {
        if ((libGame_gv_gameOver == true)) {
            return true;
        }

        if ((UnitIsAlive(libGame_gv_players[1].lv_heroUnit) == true) && (MimicStartingExperienceLib_gf_PlayerIsInCombat(1) == false) && (MimicStartingExperienceLib_gv_sE_TrainingModeTipDisplaying == false)) {
            autoB26AF25F_g = lv_watchTowers;
            autoB26AF25F_u = UnitGroupCount(autoB26AF25F_g, c_unitCountAll);
            for (;; autoB26AF25F_u -= 1) {
                lv_itWatchTower = UnitGroupUnitFromEnd(autoB26AF25F_g, autoB26AF25F_u);
                if (lv_itWatchTower == null) { break; }
                if ((DistanceBetweenPoints(UnitGetPosition(libGame_gv_players[MimicStartingExperienceLib_gv_sE_Player].lv_heroUnit), UnitGetPosition(lv_itWatchTower)) < 12.0)) {
                    libCore_gf_AttachReticleEffectAndTextTagOnUnit(libCore_ge_ReticleType_BonusObjective, libCore_ge_ReticleSize_Large, StringToText(""), lv_itWatchTower, "Ref_Center");
                    TextTagSetFogVisibility(TextTagLastCreated(), c_visTypeMask);
                    MimicStartingExperienceLib_gf_SE_TrainingModeTipDisplay(MimicStartingExperienceLib_ge_SE_TrainingModeTips_WatchTower);
                    MimicStartingExperienceLib_gf_SE_TrainingModeTipSetDisplayed(MimicStartingExperienceLib_ge_SE_TrainingModeTips_WatchTower);
                    Wait(MimicStartingExperienceLib_gv_sE_TrainingModeTipDuration_C, c_timeGame);
                    libNtve_gf_KillModel(libNtve_gf_ActorLastCreated());
                    TextTagDestroy(TextTagLastCreated());
                    return true;
                }

            }
        }

        Wait(0.5, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTipWatchTower_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTipWatchTower = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTipWatchTower_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_SE_TrainingModeTipWatchTower, false);
    TriggerAddEventTimer(MimicStartingExperienceLib_gt_SE_TrainingModeTipWatchTower, libGame_gv_jungleWatchTowerStartTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingModeTipDebugEnable
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTipDebugEnable_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_itTip;

    // Automatic Variable Declarations
    int autoB8CCE432_ae;
    const int autoB8CCE432_ai = 1;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((GameCheatsEnabled(c_gameCheatCategoryDevelopment) == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    MimicStartingExperienceLib_gf_SetTrainingMode(true);
    autoB8CCE432_ae = MimicStartingExperienceLib_gf_SE_TrainingModeTipCount();
    lv_itTip = 1;
    for ( ; ( (autoB8CCE432_ai >= 0 && lv_itTip <= autoB8CCE432_ae) || (autoB8CCE432_ai < 0 && lv_itTip >= autoB8CCE432_ae) ) ; lv_itTip += autoB8CCE432_ai ) {
        MimicStartingExperienceLib_gv_sE_TrainingModeTips[lv_itTip].lv_doneTimes = 0;
    }
    TriggerExecute(MimicStartingExperienceLib_gt_TrainingModeInit, true, false);
    TriggerExecute(MimicStartingExperienceLib_gt_SE_TrainingModeReferenceCardDisplay, false, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTipDebugEnable_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTipDebugEnable = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTipDebugEnable_Func");
    TriggerAddEventChatMessage(MimicStartingExperienceLib_gt_SE_TrainingModeTipDebugEnable, c_playerAny, "m-SETE", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SE_TrainingModeTipDebugModeOn/Off
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_SE_TrainingModeTipDebugModeOnOff_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_bankKey;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_bankKey = "";

    // Conditions
    if (testConds) {
        if (!((GameCheatsEnabled(c_gameCheatCategoryDevelopment) == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((MimicStartingExperienceLib_gv_sE_TrainingMode == true)) {
        MimicStartingExperienceLib_gv_sE_TrainingMode = false;
        ConsoleCommand("variable skirmishpractice 0", true, true);
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_StEx_9AB613F3"));
    }
    else {
        MimicStartingExperienceLib_gv_sE_TrainingMode = true;
        ConsoleCommand("variable skirmishpractice 1", true, true);
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_StEx_983D18D2"));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_SE_TrainingModeTipDebugModeOnOff_Init () {
    MimicStartingExperienceLib_gt_SE_TrainingModeTipDebugModeOnOff = TriggerCreate("MimicStartingExperienceLib_gt_SE_TrainingModeTipDebugModeOnOff_Func");
    TriggerAddEventChatMessage(MimicStartingExperienceLib_gt_SE_TrainingModeTipDebugModeOnOff, c_playerAny, "mTRAININGMODE", false);
    TriggerAddEventChatMessage(MimicStartingExperienceLib_gt_SE_TrainingModeTipDebugModeOnOff, c_playerAny, "m-TM", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: DebugEncounter
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_DebugEncounter_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    MimicStartingExperienceLib_gv_encounterActive = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_DebugEncounter_Init () {
    MimicStartingExperienceLib_gt_DebugEncounter = TriggerCreate("MimicStartingExperienceLib_gt_DebugEncounter_Func");
    TriggerAddEventChatMessage(MimicStartingExperienceLib_gt_DebugEncounter, c_playerAny, "minencounter", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: DPS Cheat
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_DPSCheat_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libCore_gv_dEBUGDebuggingEnabled == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    MimicStartingExperienceLib_gv_encounterActive = true;
    TriggerExecute(MimicStartingExperienceLib_gt_ObjectiveTargetDummyCreate, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_DPSCheat_Init () {
    MimicStartingExperienceLib_gt_DPSCheat = TriggerCreate("MimicStartingExperienceLib_gt_DPSCheat_Func");
    TriggerAddEventChatMessage(MimicStartingExperienceLib_gt_DPSCheat, c_playerAny, "m-dpsobj", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Player Hits Retry During DPS Meter Objective
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_PlayerHitsRetryDuringDPSMeterObjective_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((MimicStartingExperienceLib_gv_objectives.lv_objectiveTargetDummy != c_invalidObjectiveId))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(libGame_gv_players[1].lv_heroUnit, MimicStartingExperienceLib_gv_vallaRetryLocation, false);
    UnitSetFacing(libGame_gv_players[1].lv_heroUnit, 349.82, 0.0);
    UnitIssueOrder(libGame_gv_players[1].lv_heroUnit, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    UnitSetPosition(libGame_gv_players[2].lv_heroUnit, MimicStartingExperienceLib_gv_utherRetryLocation, false);
    UnitSetFacing(libGame_gv_players[2].lv_heroUnit, 308.75, 0.0);
    UnitIssueOrder(libGame_gv_players[2].lv_heroUnit, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_PlayerHitsRetryDuringDPSMeterObjective_Init () {
    MimicStartingExperienceLib_gt_PlayerHitsRetryDuringDPSMeterObjective = TriggerCreate("MimicStartingExperienceLib_gt_PlayerHitsRetryDuringDPSMeterObjective_Func");
    MimicStartingExperienceLib_gf_TutorialPlayerHitsRetryButton(MimicStartingExperienceLib_gt_PlayerHitsRetryDuringDPSMeterObjective);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Talent Create
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveTalentCreate_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    SoundPlayForPlayer(SoundLink("UI_Game_Tutorial_Veteran_Challenge_Received", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    ObjectiveCreateForPlayers(StringExternal("Param/Value/lib_StEx_5B6142CE"), StringToText(""), c_objectiveStateActive, true, PlayerGroupSingle(MimicStartingExperienceLib_gv_pLAYER_01_USER));
    MimicStartingExperienceLib_gv_objectives.lv_objectivePickOneTalent = ObjectiveLastCreated();
    Wait(2.0, c_timeReal);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveTalentCreate_Init () {
    MimicStartingExperienceLib_gt_ObjectiveTalentCreate = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveTalentCreate_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Talent Complete
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveTalentComplete_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectivePickOneTalent, c_objectiveStateCompleted);
    Wait(2.0, c_timeReal);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectivePickOneTalent);
    MimicStartingExperienceLib_gv_objectives.lv_objectivePickOneTalent = c_invalidObjectiveId;
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveTalentComplete_Init () {
    MimicStartingExperienceLib_gt_ObjectiveTalentComplete = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveTalentComplete_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Challenge Ready Create
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveChallengeReadyCreate_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    SoundPlayForPlayer(SoundLink("UI_Game_Tutorial_Veteran_Challenge_Received", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    ObjectiveCreateForPlayers(StringExternal("Param/Value/lib_StEx_8287F3F2"), StringToText(""), c_objectiveStateActive, true, PlayerGroupSingle(MimicStartingExperienceLib_gv_pLAYER_01_USER));
    MimicStartingExperienceLib_gv_objectives.lv_objectivePickRemainingTalentsAndReady = ObjectiveLastCreated();
    Wait(2.0, c_timeReal);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveChallengeReadyCreate_Init () {
    MimicStartingExperienceLib_gt_ObjectiveChallengeReadyCreate = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveChallengeReadyCreate_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Challenge Ready Complete
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveChallengeReadyComplete_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectivePickRemainingTalentsAndReady, c_objectiveStateCompleted);
    Wait(2.0, c_timeReal);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectivePickRemainingTalentsAndReady);
    MimicStartingExperienceLib_gv_objectives.lv_objectivePickRemainingTalentsAndReady = c_invalidObjectiveId;
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveChallengeReadyComplete_Init () {
    MimicStartingExperienceLib_gt_ObjectiveChallengeReadyComplete = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveChallengeReadyComplete_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Target Dummy Create
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveTargetDummyCreate_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    SoundPlayForPlayer(SoundLink("UI_Game_Tutorial_Veteran_Challenge_Received", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    ObjectiveCreateForPlayers(StringExternal("Param/Value/lib_StEx_F74901E6"), StringToText(""), c_objectiveStateActive, true, PlayerGroupSingle(MimicStartingExperienceLib_gv_pLAYER_01_USER));
    MimicStartingExperienceLib_gv_objectives.lv_objectiveTargetDummy = ObjectiveLastCreated();
    ObjectiveCreateForPlayers(StringExternal("Param/Value/lib_StEx_5555D85A"), StringToText(""), c_objectiveStateActive, true, PlayerGroupSingle(MimicStartingExperienceLib_gv_pLAYER_01_USER));
    MimicStartingExperienceLib_gv_objectives.lv_objectiveGraveGolemFightUtherMustSurvive = ObjectiveLastCreated();
    Wait(2.0, c_timeReal);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveTargetDummyCreate_Init () {
    MimicStartingExperienceLib_gt_ObjectiveTargetDummyCreate = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveTargetDummyCreate_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Target Dummy Complete
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveTargetDummyComplete_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(MimicStartingExperienceLib_gt_ObjectiveTargetDummyCreate, true, false);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveTargetDummy, c_objectiveStateCompleted);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveGraveGolemFightUtherMustSurvive, c_objectiveStateCompleted);
    Wait(2.0, c_timeReal);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveTargetDummy);
    MimicStartingExperienceLib_gv_objectives.lv_objectiveTargetDummy = c_invalidObjectiveId;
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveGraveGolemFightUtherMustSurvive);
    MimicStartingExperienceLib_gv_objectives.lv_objectiveGraveGolemFightUtherMustSurvive = c_invalidObjectiveId;
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveTargetDummyComplete_Init () {
    MimicStartingExperienceLib_gt_ObjectiveTargetDummyComplete = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveTargetDummyComplete_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Target Dummy Fail
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveTargetDummyFail_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(MimicStartingExperienceLib_gt_ObjectiveTargetDummyCreate, true, false);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveTargetDummy, c_objectiveStateFailed);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveGraveGolemFightUtherMustSurvive, c_objectiveStateFailed);
    Wait(2.0, c_timeReal);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveTargetDummy);
    MimicStartingExperienceLib_gv_objectives.lv_objectiveTargetDummy = c_invalidObjectiveId;
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveGraveGolemFightUtherMustSurvive);
    MimicStartingExperienceLib_gv_objectives.lv_objectiveGraveGolemFightUtherMustSurvive = c_invalidObjectiveId;
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveTargetDummyFail_Init () {
    MimicStartingExperienceLib_gt_ObjectiveTargetDummyFail = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveTargetDummyFail_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Grave Golem Fight Create
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveGraveGolemFightCreate_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    SoundPlayForPlayer(SoundLink("UI_Game_Tutorial_Veteran_Challenge_Received", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    ObjectiveCreateForPlayers(StringExternal("Param/Value/lib_StEx_9BB8C802"), StringToText(""), c_objectiveStateActive, true, PlayerGroupSingle(MimicStartingExperienceLib_gv_pLAYER_01_USER));
    MimicStartingExperienceLib_gv_objectives.lv_objectiveGraveGolemFight = ObjectiveLastCreated();
    ObjectiveCreateForPlayers(StringExternal("Param/Value/lib_StEx_934B8C2E"), StringToText(""), c_objectiveStateActive, true, PlayerGroupSingle(MimicStartingExperienceLib_gv_pLAYER_01_USER));
    MimicStartingExperienceLib_gv_objectives.lv_objectiveGraveGolemFightUtherMustSurvive = ObjectiveLastCreated();
    Wait(2.0, c_timeReal);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveGraveGolemFightCreate_Init () {
    MimicStartingExperienceLib_gt_ObjectiveGraveGolemFightCreate = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveGraveGolemFightCreate_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Grave Golem Fight Complete
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveGraveGolemFightComplete_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(MimicStartingExperienceLib_gt_ObjectiveGraveGolemFightCreate, true, false);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveGraveGolemFight, c_objectiveStateCompleted);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveGraveGolemFightUtherMustSurvive, c_objectiveStateCompleted);
    Wait(2.0, c_timeReal);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveGraveGolemFight);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveGraveGolemFightUtherMustSurvive);
    MimicStartingExperienceLib_gv_objectives.lv_objectiveGraveGolemFight = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveGraveGolemFightUtherMustSurvive = c_invalidObjectiveId;
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveGraveGolemFightComplete_Init () {
    MimicStartingExperienceLib_gt_ObjectiveGraveGolemFightComplete = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveGraveGolemFightComplete_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Grave Golem Fight Fail
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveGraveGolemFightFail_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(MimicStartingExperienceLib_gt_ObjectiveGraveGolemFightCreate, true, false);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveGraveGolemFight, c_objectiveStateFailed);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveGraveGolemFightUtherMustSurvive, c_objectiveStateFailed);
    Wait(2.0, c_timeReal);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveGraveGolemFight);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveGraveGolemFightUtherMustSurvive);
    MimicStartingExperienceLib_gv_objectives.lv_objectiveGraveGolemFight = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveGraveGolemFightUtherMustSurvive = c_invalidObjectiveId;
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveGraveGolemFightFail_Init () {
    MimicStartingExperienceLib_gt_ObjectiveGraveGolemFightFail = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveGraveGolemFightFail_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Mosh Pit Fight Create
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveMoshPitFightCreate_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    SoundPlayForPlayer(SoundLink("UI_Game_Tutorial_Veteran_Challenge_Received", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    ObjectiveCreateForPlayers(StringExternal("Param/Value/lib_StEx_3D982619"), StringToText(""), c_objectiveStateActive, true, PlayerGroupSingle(MimicStartingExperienceLib_gv_pLAYER_01_USER));
    MimicStartingExperienceLib_gv_objectives.lv_objectiveMoshPitFight = ObjectiveLastCreated();
    ObjectiveCreateForPlayers(StringExternal("Param/Value/lib_StEx_2115A74F"), StringToText(""), c_objectiveStateActive, true, PlayerGroupSingle(MimicStartingExperienceLib_gv_pLAYER_01_USER));
    MimicStartingExperienceLib_gv_objectives.lv_objectiveMoshPitTeamMustSurvive = ObjectiveLastCreated();
    Wait(2.0, c_timeReal);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveMoshPitFightCreate_Init () {
    MimicStartingExperienceLib_gt_ObjectiveMoshPitFightCreate = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveMoshPitFightCreate_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Mosh Pit Fight Complete
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveMoshPitFightComplete_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(MimicStartingExperienceLib_gt_ObjectiveMoshPitFightCreate, true, false);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveMoshPitFight, c_objectiveStateCompleted);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveMoshPitTeamMustSurvive, c_objectiveStateCompleted);
    Wait(3.0, c_timeReal);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveMoshPitFight);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveMoshPitTeamMustSurvive);
    MimicStartingExperienceLib_gv_objectives.lv_objectiveMoshPitFight = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveMoshPitTeamMustSurvive = c_invalidObjectiveId;
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveMoshPitFightComplete_Init () {
    MimicStartingExperienceLib_gt_ObjectiveMoshPitFightComplete = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveMoshPitFightComplete_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Mosh Pit Fight Fail
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveMoshPitFightFail_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(MimicStartingExperienceLib_gt_ObjectiveMoshPitFightCreate, true, false);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveMoshPitFight, c_objectiveStateFailed);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveMoshPitTeamMustSurvive, c_objectiveStateFailed);
    Wait(3.0, c_timeReal);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveMoshPitFight);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveMoshPitTeamMustSurvive);
    MimicStartingExperienceLib_gv_objectives.lv_objectiveMoshPitFight = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveMoshPitTeamMustSurvive = c_invalidObjectiveId;
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveMoshPitFightFail_Init () {
    MimicStartingExperienceLib_gt_ObjectiveMoshPitFightFail = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveMoshPitFightFail_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Defend the Keep Create
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveBossFightCreate2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    SoundPlayForPlayer(SoundLink("UI_Game_Tutorial_Veteran_Challenge_Received", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    TextExpressionSetToken("Param/Expression/lib_StEx_96525700", "A", StringExternal("Param/Value/lib_StEx_F497BCEA"));
    TextExpressionSetToken("Param/Expression/lib_StEx_96525700", "B", IntToText(MimicStartingExperienceLib_gv__1D_WaveTotal_C));
    ObjectiveCreateForPlayers(TextExpressionAssemble("Param/Expression/lib_StEx_96525700"), StringToText(""), c_objectiveStateActive, true, PlayerGroupSingle(MimicStartingExperienceLib_gv_pLAYER_01_USER));
    MimicStartingExperienceLib_gv_objectives.lv_objectiveDefendKeep = ObjectiveLastCreated();
    ObjectiveCreateForPlayers(StringExternal("Param/Value/lib_StEx_B1611DE6"), StringToText(""), c_objectiveStateActive, true, PlayerGroupSingle(MimicStartingExperienceLib_gv_pLAYER_01_USER));
    MimicStartingExperienceLib_gv_objectives.lv_objectiveDefendKeepVallaMustSurvive = ObjectiveLastCreated();
    Wait(2.0, c_timeReal);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveBossFightCreate2_Init () {
    MimicStartingExperienceLib_gt_ObjectiveBossFightCreate2 = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveBossFightCreate2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Defend the Keep Update
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveBossFightComplete12_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(MimicStartingExperienceLib_gt_ObjectiveBossFightCreate2, true, false);
    TextExpressionSetToken("Param/Expression/lib_StEx_F0599696", "A", IntToText((MimicStartingExperienceLib_gv__1D_WaveCurrent - 1)));
    TextExpressionSetToken("Param/Expression/lib_StEx_F0599696", "B", IntToText(MimicStartingExperienceLib_gv__1D_WaveTotal_C));
    ObjectiveSetName(MimicStartingExperienceLib_gv_objectives.lv_objectiveDefendKeep, TextExpressionAssemble("Param/Expression/lib_StEx_F0599696"));
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveBossFightComplete12_Init () {
    MimicStartingExperienceLib_gt_ObjectiveBossFightComplete12 = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveBossFightComplete12_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Defend the Keep Complete
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveBossFightComplete3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(MimicStartingExperienceLib_gt_ObjectiveBossFightCreate2, true, false);
    TextExpressionSetToken("Param/Expression/lib_StEx_97CE0701", "A", IntToText(MimicStartingExperienceLib_gv__1D_WaveTotal_C));
    TextExpressionSetToken("Param/Expression/lib_StEx_97CE0701", "B", IntToText(MimicStartingExperienceLib_gv__1D_WaveTotal_C));
    ObjectiveSetName(MimicStartingExperienceLib_gv_objectives.lv_objectiveDefendKeep, TextExpressionAssemble("Param/Expression/lib_StEx_97CE0701"));
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveDefendKeep, c_objectiveStateCompleted);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveDefendKeepVallaMustSurvive, c_objectiveStateCompleted);
    Wait(2.0, c_timeReal);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveDefendKeep);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveDefendKeepVallaMustSurvive);
    MimicStartingExperienceLib_gv_objectives.lv_objectiveDefendKeep = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveDefendKeepVallaMustSurvive = c_invalidObjectiveId;
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveBossFightComplete3_Init () {
    MimicStartingExperienceLib_gt_ObjectiveBossFightComplete3 = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveBossFightComplete3_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Defend the Keep Fail
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveBossFightComplete4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(MimicStartingExperienceLib_gt_ObjectiveBossFightCreate2, true, false);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveDefendKeep, c_objectiveStateFailed);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveDefendKeepVallaMustSurvive, c_objectiveStateFailed);
    Wait(2.0, c_timeReal);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveDefendKeep);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveDefendKeepVallaMustSurvive);
    MimicStartingExperienceLib_gv_objectives.lv_objectiveDefendKeep = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveDefendKeepVallaMustSurvive = c_invalidObjectiveId;
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveBossFightComplete4_Init () {
    MimicStartingExperienceLib_gt_ObjectiveBossFightComplete4 = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveBossFightComplete4_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Roaming Create
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveRoamingCreate_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    SoundPlayForPlayer(SoundLink("UI_Game_Tutorial_Veteran_Challenge_Received", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    ObjectiveCreateForPlayers(StringExternal("Param/Value/lib_StEx_A4E6E86C"), StringToText(""), c_objectiveStateActive, true, PlayerGroupSingle(MimicStartingExperienceLib_gv_pLAYER_01_USER));
    MimicStartingExperienceLib_gv_objectives.lv_objectiveRoamHitTenFirst = ObjectiveLastCreated();
    ObjectiveCreateForPlayers(StringExternal("Param/Value/lib_StEx_F954A660"), StringToText(""), c_objectiveStateActive, true, PlayerGroupSingle(MimicStartingExperienceLib_gv_pLAYER_01_USER));
    MimicStartingExperienceLib_gv_objectives.lv_objectiveRoamZeratulMustSurvive = ObjectiveLastCreated();
    Wait(2.0, c_timeReal);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveRoamingCreate_Init () {
    MimicStartingExperienceLib_gt_ObjectiveRoamingCreate = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveRoamingCreate_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Roaming Complete
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveRoamingComplete_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(MimicStartingExperienceLib_gt_ObjectiveRoamingCreate, true, false);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveRoamHitTenFirst, c_objectiveStateCompleted);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveRoamZeratulMustSurvive, c_objectiveStateCompleted);
    Wait(2.0, c_timeReal);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveRoamHitTenFirst);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveRoamZeratulMustSurvive);
    MimicStartingExperienceLib_gv_objectives.lv_objectiveRoamHitTenFirst = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveRoamZeratulMustSurvive = c_invalidObjectiveId;
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveRoamingComplete_Init () {
    MimicStartingExperienceLib_gt_ObjectiveRoamingComplete = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveRoamingComplete_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Roaming Fail
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveRoamingFail_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(MimicStartingExperienceLib_gt_ObjectiveRoamingCreate, true, false);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveRoamHitTenFirst, c_objectiveStateFailed);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveRoamZeratulMustSurvive, c_objectiveStateFailed);
    Wait(2.0, c_timeReal);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveRoamHitTenFirst);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveRoamZeratulMustSurvive);
    MimicStartingExperienceLib_gv_objectives.lv_objectiveRoamHitTenFirst = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveRoamZeratulMustSurvive = c_invalidObjectiveId;
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveRoamingFail_Init () {
    MimicStartingExperienceLib_gt_ObjectiveRoamingFail = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveRoamingFail_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Escape Help Valla Create
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveBossFightCreate3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    SoundPlayForPlayer(SoundLink("UI_Game_Tutorial_Veteran_Challenge_Received", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    ObjectiveCreateForPlayers(StringExternal("Param/Value/lib_StEx_FCEF18C3"), StringToText(""), c_objectiveStateActive, true, PlayerGroupSingle(MimicStartingExperienceLib_gv_pLAYER_01_USER));
    MimicStartingExperienceLib_gv_objectives.lv_objectiveEscapeKillJaina = ObjectiveLastCreated();
    ObjectiveCreateForPlayers(StringExternal("Param/Value/lib_StEx_EB15632E"), StringToText(""), c_objectiveStateActive, true, PlayerGroupSingle(MimicStartingExperienceLib_gv_pLAYER_01_USER));
    MimicStartingExperienceLib_gv_objectives.lv_objectiveEscapeHelpValla = ObjectiveLastCreated();
    ObjectiveCreateForPlayers(StringExternal("Param/Value/lib_StEx_D21A9342"), StringToText(""), c_objectiveStateActive, true, PlayerGroupSingle(MimicStartingExperienceLib_gv_pLAYER_01_USER));
    MimicStartingExperienceLib_gv_objectives.lv_objectiveEscapeAbathurMustSurvive = ObjectiveLastCreated();
    Wait(2.0, c_timeReal);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveBossFightCreate3_Init () {
    MimicStartingExperienceLib_gt_ObjectiveBossFightCreate3 = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveBossFightCreate3_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Escape Help Valla Complete
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveBossFightComplete5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(MimicStartingExperienceLib_gt_ObjectiveBossFightCreate3, true, false);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveEscapeHelpValla, c_objectiveStateCompleted);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveEscapeAbathurMustSurvive, c_objectiveStateCompleted);
    if ((ObjectiveGetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveEscapeKillJaina) != c_objectiveStateCompleted)) {
        ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveEscapeKillJaina, c_objectiveStateFailed);
    }

    Wait(2.0, c_timeReal);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveEscapeHelpValla);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveEscapeKillJaina);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveEscapeAbathurMustSurvive);
    MimicStartingExperienceLib_gv_objectives.lv_objectiveEscapeHelpValla = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveEscapeKillJaina = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveEscapeAbathurMustSurvive = c_invalidObjectiveId;
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveBossFightComplete5_Init () {
    MimicStartingExperienceLib_gt_ObjectiveBossFightComplete5 = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveBossFightComplete5_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Escape Kill Jaina Complete
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveBossFightComplete11_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(MimicStartingExperienceLib_gt_ObjectiveBossFightCreate3, true, false);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveEscapeKillJaina, c_objectiveStateCompleted);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveBossFightComplete11_Init () {
    MimicStartingExperienceLib_gt_ObjectiveBossFightComplete11 = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveBossFightComplete11_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Escape Help Valla Fail
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveBossFightComplete6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(MimicStartingExperienceLib_gt_ObjectiveBossFightCreate3, true, false);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveEscapeHelpValla, c_objectiveStateFailed);
    if ((ObjectiveGetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveEscapeKillJaina) != c_objectiveStateCompleted)) {
        ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveEscapeKillJaina, c_objectiveStateFailed);
    }

    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveEscapeAbathurMustSurvive, c_objectiveStateFailed);
    Wait(2.0, c_timeReal);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveEscapeHelpValla);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveEscapeKillJaina);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveEscapeAbathurMustSurvive);
    MimicStartingExperienceLib_gv_objectives.lv_objectiveEscapeHelpValla = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveEscapeKillJaina = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveEscapeAbathurMustSurvive = c_invalidObjectiveId;
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveBossFightComplete6_Init () {
    MimicStartingExperienceLib_gt_ObjectiveBossFightComplete6 = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveBossFightComplete6_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Soak 13 First Create
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveBossFightCreate5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    SoundPlayForPlayer(SoundLink("UI_Game_Tutorial_Veteran_Challenge_Received", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    ObjectiveCreateForPlayers(StringExternal("Param/Value/lib_StEx_233D9013"), StringToText(""), c_objectiveStateActive, true, PlayerGroupSingle(MimicStartingExperienceLib_gv_pLAYER_01_USER));
    MimicStartingExperienceLib_gv_objectives.lv_objectiveSoakHitThirteenFirst = ObjectiveLastCreated();
    ObjectiveCreateForPlayers(StringExternal("Param/Value/lib_StEx_4E800969"), StringToText(""), c_objectiveStateActive, true, PlayerGroupSingle(MimicStartingExperienceLib_gv_pLAYER_01_USER));
    MimicStartingExperienceLib_gv_objectives.lv_objectiveSoakAbathurMustSurvive = ObjectiveLastCreated();
    Wait(2.0, c_timeReal);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveBossFightCreate5_Init () {
    MimicStartingExperienceLib_gt_ObjectiveBossFightCreate5 = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveBossFightCreate5_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Soak 13 First Complete
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveBossFightComplete9_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(MimicStartingExperienceLib_gt_ObjectiveBossFightCreate5, true, false);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveSoakHitThirteenFirst, c_objectiveStateCompleted);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveSoakAbathurMustSurvive, c_objectiveStateCompleted);
    Wait(2.0, c_timeReal);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveSoakHitThirteenFirst);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveSoakAbathurMustSurvive);
    MimicStartingExperienceLib_gv_objectives.lv_objectiveSoakHitThirteenFirst = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveSoakAbathurMustSurvive = c_invalidObjectiveId;
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveBossFightComplete9_Init () {
    MimicStartingExperienceLib_gt_ObjectiveBossFightComplete9 = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveBossFightComplete9_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Soak 13 First Fail
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveBossFightComplete10_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(MimicStartingExperienceLib_gt_ObjectiveBossFightCreate5, true, false);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveSoakHitThirteenFirst, c_objectiveStateFailed);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveSoakAbathurMustSurvive, c_objectiveStateFailed);
    Wait(2.0, c_timeReal);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveSoakHitThirteenFirst);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveSoakAbathurMustSurvive);
    MimicStartingExperienceLib_gv_objectives.lv_objectiveSoakHitThirteenFirst = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveSoakAbathurMustSurvive = c_invalidObjectiveId;
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveBossFightComplete10_Init () {
    MimicStartingExperienceLib_gt_ObjectiveBossFightComplete10 = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveBossFightComplete10_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Team Fight Create
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveBossFightCreate4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    SoundPlayForPlayer(SoundLink("UI_Game_Tutorial_Veteran_Challenge_Received", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    ObjectiveCreateForPlayers(StringExternal("Param/Value/lib_StEx_0213A6F1"), StringToText(""), c_objectiveStateActive, true, PlayerGroupSingle(MimicStartingExperienceLib_gv_pLAYER_01_USER));
    MimicStartingExperienceLib_gv_objectives.lv_objectiveDragonKnightCapture = ObjectiveLastCreated();
    ObjectiveCreateForPlayers(StringExternal("Param/Value/lib_StEx_6ED354A6"), StringToText(""), c_objectiveStateActive, true, PlayerGroupSingle(MimicStartingExperienceLib_gv_pLAYER_01_USER));
    MimicStartingExperienceLib_gv_objectives.lv_objectiveDragonKnightAllyMustSurvive = ObjectiveLastCreated();
    ObjectiveCreateForPlayers(StringExternal("Param/Value/lib_StEx_E439ACF7"), StringToText(""), c_objectiveStateActive, true, PlayerGroupSingle(MimicStartingExperienceLib_gv_pLAYER_01_USER));
    MimicStartingExperienceLib_gv_objectives.lv_objectiveDragonKnightAbathurMustSurvive = ObjectiveLastCreated();
    Wait(2.0, c_timeReal);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveBossFightCreate4_Init () {
    MimicStartingExperienceLib_gt_ObjectiveBossFightCreate4 = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveBossFightCreate4_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Team Fight Complete
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveBossFightComplete7_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(MimicStartingExperienceLib_gt_ObjectiveBossFightCreate4, true, false);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveDragonKnightCapture, c_objectiveStateCompleted);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveDragonKnightAllyMustSurvive, c_objectiveStateCompleted);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveDragonKnightAbathurMustSurvive, c_objectiveStateCompleted);
    Wait(2.0, c_timeReal);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveDragonKnightCapture);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveDragonKnightAllyMustSurvive);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveDragonKnightAbathurMustSurvive);
    MimicStartingExperienceLib_gv_objectives.lv_objectiveDragonKnightCapture = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveDragonKnightAllyMustSurvive = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveDragonKnightAbathurMustSurvive = c_invalidObjectiveId;
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveBossFightComplete7_Init () {
    MimicStartingExperienceLib_gt_ObjectiveBossFightComplete7 = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveBossFightComplete7_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Objective Team Fight Fail
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_ObjectiveBossFightComplete8_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(MimicStartingExperienceLib_gt_ObjectiveBossFightCreate4, true, false);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveDragonKnightCapture, c_objectiveStateFailed);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveDragonKnightAllyMustSurvive, c_objectiveStateFailed);
    ObjectiveSetState(MimicStartingExperienceLib_gv_objectives.lv_objectiveDragonKnightAbathurMustSurvive, c_objectiveStateFailed);
    Wait(2.0, c_timeReal);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveDragonKnightCapture);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveDragonKnightAllyMustSurvive);
    ObjectiveDestroy(MimicStartingExperienceLib_gv_objectives.lv_objectiveDragonKnightAbathurMustSurvive);
    MimicStartingExperienceLib_gv_objectives.lv_objectiveDragonKnightCapture = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveDragonKnightAllyMustSurvive = c_invalidObjectiveId;
    MimicStartingExperienceLib_gv_objectives.lv_objectiveDragonKnightAbathurMustSurvive = c_invalidObjectiveId;
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_ObjectiveBossFightComplete8_Init () {
    MimicStartingExperienceLib_gt_ObjectiveBossFightComplete8 = TriggerCreate("MimicStartingExperienceLib_gt_ObjectiveBossFightComplete8_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Player Hits Ready
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_PlayerHitsReady_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_ReadyButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    MimicStartingExperienceLib_gf_SendEventTutorialPlayerHitsReadyButton();
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_PlayerHitsReady_Init () {
    MimicStartingExperienceLib_gt_PlayerHitsReady = TriggerCreate("MimicStartingExperienceLib_gt_PlayerHitsReady_Func");
    TriggerAddEventDialogControl(MimicStartingExperienceLib_gt_PlayerHitsReady, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Player Hits Respec
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_PlayerHitsRespec_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_RespecButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SetTalentTreeSelectionPanelAutoShow(true);
    MimicStartingExperienceLib_gf_SendEventTutorialPlayerHitsRespecButton();
    MimicStartingExperienceLib_gf_TutorialVeteranFlashRespecButton(false);
    MimicStartingExperienceLib_gf_RespecPlayer(EventPlayer(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_PlayerHitsRespec_Init () {
    MimicStartingExperienceLib_gt_PlayerHitsRespec = TriggerCreate("MimicStartingExperienceLib_gt_PlayerHitsRespec_Func");
    TriggerAddEventDialogControl(MimicStartingExperienceLib_gt_PlayerHitsRespec, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Player Hits Retry
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_PlayerHitsRetry_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_RetryButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    MimicStartingExperienceLib_gf_ResetHeroUnitforPlayer(1);
    MimicStartingExperienceLib_gf_ResetHeroUnitforPlayer(2);
    MimicStartingExperienceLib_gf_TutorialVeteranShowHideRetryButton(false);
    MimicStartingExperienceLib_gf_SendEventTutorialPlayerHitsRetryButton();
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_PlayerHitsRetry_Init () {
    MimicStartingExperienceLib_gt_PlayerHitsRetry = TriggerCreate("MimicStartingExperienceLib_gt_PlayerHitsRetry_Func");
    TriggerAddEventDialogControl(MimicStartingExperienceLib_gt_PlayerHitsRetry, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tutorial Veteran Panel Initialize
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_TutorialVeteranPanelInitialize_Func (bool testConds, bool runActions) {
    int init_i;

    // Variable Declarations
    int lv_parent;
    int[6] lv_panels;
    int lv_currentPanelLayer;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_parent = c_invalidDialogControlId;
    for (init_i = 0; init_i <= 5; init_i += 1) {
        lv_panels[init_i] = c_invalidDialogControlId;
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DialogControlHookupStandard(c_triggerControlTypePanel, "UIContainer");
    lv_parent = DialogControlLastCreated();
    DialogControlCreateInPanelFromTemplate(lv_parent, c_triggerControlTypePanel, "TutorialUI/TutorialVeteranUITemplate");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), true);
    lv_currentPanelLayer += 1;
    lv_panels[lv_currentPanelLayer] = DialogControlLastCreated();
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_mainPanel = DialogControlLastCreated();
    DialogControlHookup(lv_panels[lv_currentPanelLayer], c_triggerControlTypeButton, "RespecTalentsButton");
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_RespecButton = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), true);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "StandardGlueButtonSmallLeft", PlayerGroupAll());
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), StringExternal("Param/Value/lib_StEx_2FCA9E13"), PlayerGroupAll());
    DialogControlHookup(MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_RespecButton, c_triggerControlTypeImage, "FlashImage");
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_RespecButton2 = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), true);
    DialogControlHookup(lv_panels[lv_currentPanelLayer], c_triggerControlTypeButton, "StartButton");
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_ReadyButton = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), true);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), StringExternal("Param/Value/lib_StEx_EC1A42F4"), PlayerGroupAll());
    DialogControlHookup(lv_panels[lv_currentPanelLayer], c_triggerControlTypeButton, "RestartButton");
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_RetryButton = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "StandardGlueButtonSmallLeft", PlayerGroupAll());
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), StringExternal("Param/Value/lib_StEx_00324BFC"), PlayerGroupAll());
    DialogControlHookup(lv_panels[lv_currentPanelLayer], c_triggerControlTypeImage, "ChallengeComplete");
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_challengeCompleteImage = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    DialogControlHookup(lv_panels[lv_currentPanelLayer], c_triggerControlTypePanel, "ChallengeTitleFrame");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_challengeTitleFrame = DialogControlLastCreated();
    lv_currentPanelLayer += 1;
    lv_panels[lv_currentPanelLayer] = DialogControlLastCreated();
    DialogControlHookup(lv_panels[lv_currentPanelLayer], c_triggerControlTypeLabel, "ChallengeDescriptionLabel");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_challengeDescriptionLabel = DialogControlLastCreated();
    lv_currentPanelLayer -= 1;
    DialogControlHookup(lv_panels[lv_currentPanelLayer], c_triggerControlTypePanel, "CountdownFrame");
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_countdownFrame = DialogControlLastCreated();
    lv_currentPanelLayer += 1;
    lv_panels[lv_currentPanelLayer] = DialogControlLastCreated();
    DialogControlHookup(lv_panels[lv_currentPanelLayer], c_triggerControlTypeImage, "Countdown3Image");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_countdown3Image = DialogControlLastCreated();
    DialogControlHookup(lv_panels[lv_currentPanelLayer], c_triggerControlTypeImage, "Countdown2Image");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_countdown2Image = DialogControlLastCreated();
    DialogControlHookup(lv_panels[lv_currentPanelLayer], c_triggerControlTypeImage, "Countdown1Image");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_countdown1Image = DialogControlLastCreated();
    DialogControlHookup(lv_panels[lv_currentPanelLayer], c_triggerControlTypeLabel, "CountdownGoLabel");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_countdownGoLabel = DialogControlLastCreated();
    lv_currentPanelLayer -= 1;
    DialogControlCreateInPanelFromTemplate(lv_parent, c_triggerControlTypePanel, "TutorialUI/DummyUITemplate");
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorBottomRight, lv_parent, c_anchorBottomRight, -15, -350);
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lv_currentPanelLayer += 1;
    lv_panels[lv_currentPanelLayer] = DialogControlLastCreated();
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_dummyPanel = DialogControlLastCreated();
    DialogControlHookup(lv_panels[lv_currentPanelLayer], c_triggerControlTypeLabel, "TitleLabel");
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), StringExternal("Param/Value/lib_StEx_7FF599CA"), PlayerGroupAll());
    DialogControlHookup(lv_panels[lv_currentPanelLayer], c_triggerControlTypeLabel, "DamageTitle");
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), StringExternal("Param/Value/lib_StEx_5519F823"), PlayerGroupAll());
    DialogControlHookup(lv_panels[lv_currentPanelLayer], c_triggerControlTypeLabel, "DamageLabel");
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_dummyDamageLabel = DialogControlLastCreated();
    DialogControlHookup(lv_panels[lv_currentPanelLayer], c_triggerControlTypeLabel, "DPSTitle");
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), StringExternal("Param/Value/lib_StEx_F0E86AD4"), PlayerGroupAll());
    DialogControlHookup(lv_panels[lv_currentPanelLayer], c_triggerControlTypeLabel, "DPSLabel");
    MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_dummyDPSLabel = DialogControlLastCreated();
    lv_currentPanelLayer -= 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_TutorialVeteranPanelInitialize_Init () {
    MimicStartingExperienceLib_gt_TutorialVeteranPanelInitialize = TriggerCreate("MimicStartingExperienceLib_gt_TutorialVeteranPanelInitialize_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: TutorialVeteran Flash Respec Button Internal
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_TutorialVeteranFlashRespecButtonInternal_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_fadeIn_C;
    fixed lv_fadeOut_C;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_fadeIn_C = 0.5;
    lv_fadeOut_C = 0.4;

    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    DialogControlSendAnimationEvent(MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_RespecButton, PlayerGroupAll(), "FlashRespecStart");
    while (!((MimicStartingExperienceLib_gv_tutorialVeteranPanelFlashing == false))) {
        Wait(0.125, c_timeGame);
    }
    DialogControlSendAnimationEvent(MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_RespecButton, PlayerGroupAll(), "FlashRespecStop");
    TriggerEnable(TriggerGetCurrent(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_TutorialVeteranFlashRespecButtonInternal_Init () {
    MimicStartingExperienceLib_gt_TutorialVeteranFlashRespecButtonInternal = TriggerCreate("MimicStartingExperienceLib_gt_TutorialVeteranFlashRespecButtonInternal_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Target Dummy Initialize
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_TargetDummyInitialize_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_TargetDummyInitialize_Init () {
    MimicStartingExperienceLib_gt_TargetDummyInitialize = TriggerCreate("MimicStartingExperienceLib_gt_TargetDummyInitialize_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Target Dummy Takes Damage
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_TargetDummyTakesDamage_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_damage;

    // Automatic Variable Declarations
    const int auto1BF86ED6_n = 40;
    int auto1BF86ED6_i;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_damage = (UnitGetPropertyFixed(MimicStartingExperienceLib_gv_targetDummyUnit, c_unitPropLifeMax, c_unitPropCurrent) - UnitGetPropertyFixed(MimicStartingExperienceLib_gv_targetDummyUnit, c_unitPropLife, c_unitPropCurrent));
    if ((lv_damage > MimicStartingExperienceLib_gv_targetDummyDamage)) {
        MimicStartingExperienceLib_gv_targetDummyDamage = lv_damage;
        if ((MimicStartingExperienceLib_gv_targetDummyDamageTimerStarted == false)) {
            TimerStart(MimicStartingExperienceLib_gv_targetDummyDamageTimer, c_timerDurationInfinite, false, c_timeGame);
            MimicStartingExperienceLib_gv_targetDummyDamageTimerStarted = true;
        }

        TimerStart(MimicStartingExperienceLib_gv_targetDummyPeaceTimer, c_timerDurationInfinite, false, c_timeGame);
        MimicStartingExperienceLib_gv_targetDummyPeaceTimerStarted = true;
        libNtve_gf_SetDialogItemText(MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_dummyDamageLabel, FormatNumber(FixedToInt(lv_damage)), PlayerGroupAll());
        if ((TimerGetElapsed(MimicStartingExperienceLib_gv_targetDummyDamageTimer) == 0)) {
            libNtve_gf_SetDialogItemText(MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_dummyDPSLabel, FormatNumber(FixedToInt(lv_damage)), PlayerGroupAll());
        }
        else {
            libNtve_gf_SetDialogItemText(MimicStartingExperienceLib_gv_tutorialVeteranPanel.lv_dummyDPSLabel, FormatNumber(FixedToInt((lv_damage / TimerGetElapsed(MimicStartingExperienceLib_gv_targetDummyDamageTimer)))), PlayerGroupAll());
        }
        MimicStartingExperienceLib_gf_TutorialVeteranShowHideDummyPanel(true);
    }
    else {
        if ((MimicStartingExperienceLib_gv_targetDummyPeaceTimerStarted == true)) {
            if ((TimerGetElapsed(MimicStartingExperienceLib_gv_targetDummyPeaceTimer) >= 120.0)) {
                libNtve_gf_StopTimer(MimicStartingExperienceLib_gv_targetDummyPeaceTimer);
                MimicStartingExperienceLib_gv_targetDummyPeaceTimerStarted = false;
                UnitSetPropertyFixed(MimicStartingExperienceLib_gv_targetDummyUnit, c_unitPropLifePercent, 100.0);
                TextTagCreate(StringExternal("Param/Value/lib_StEx_D432837B"), 24, PointWithOffset(UnitGetPosition(MimicStartingExperienceLib_gv_targetDummyUnit), 0.0, 1.0), 1.0, true, false, PlayerGroupAll());
                TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, 2.0);
                TextTagSetVelocity(TextTagLastCreated(), 2.0, 90.0);
                MimicStartingExperienceLib_gv_targetDummyDamage = 0.0;
                if ((MimicStartingExperienceLib_gv_targetDummyDamageTimerStarted == true)) {
                    TimerPause(MimicStartingExperienceLib_gv_targetDummyDamageTimer, true);
                    MimicStartingExperienceLib_gv_targetDummyDamageTimerStarted = false;
                }

                for (auto1BF86ED6_i = 1; auto1BF86ED6_i <= auto1BF86ED6_n; auto1BF86ED6_i += 1) {
                    if ((MimicStartingExperienceLib_gv_targetDummyDamageTimerStarted == true)) {
                        return true;
                    }

                    Wait(0.125, c_timeGame);
                }
                MimicStartingExperienceLib_gf_TutorialVeteranShowHideDummyPanel(false);
            }

        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_TargetDummyTakesDamage_Init () {
    MimicStartingExperienceLib_gt_TargetDummyTakesDamage = TriggerCreate("MimicStartingExperienceLib_gt_TargetDummyTakesDamage_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_TargetDummyTakesDamage, false);
    TriggerAddEventTimePeriodic(MimicStartingExperienceLib_gt_TargetDummyTakesDamage, 0.25, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Target Dummy Dies
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_TargetDummyDies_Func (bool testConds, bool runActions) {
    // Variable Declarations
    actor lv_eggactor;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libNtve_gf_CreateModelAtPoint("MurkyRespawnEgg", MimicStartingExperienceLib_gv_targetDummyLocation);
    lv_eggactor = libNtve_gf_ActorLastCreated();
    ActorSend(lv_eggactor, "AnimBracketStart Spell IGNORE Spell,A Spell,A,End 0 -1.000000 AsDuration");
    ActorSend(lv_eggactor, "Create Murky_EggRespawn_Start");
    ActorSend(lv_eggactor, "ModelSwap MurkyRespawnEggEaster");
    Wait(5.0, c_timeGame);
    libNtve_gf_KillModel(lv_eggactor);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "TargetHeroDummy", 0, libGame_gf_ComputerPlayerInTeam(libGame_gv_teamChaosIndex_C), MimicStartingExperienceLib_gv_targetDummyLocation, null);
    MimicStartingExperienceLib_gv_targetDummyUnit = UnitLastCreated();
    MimicStartingExperienceLib_gf_TutorialVeteranShowHideDummyPanel(false);
    TriggerEnable(TriggerGetCurrent(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_TargetDummyDies_Init () {
    MimicStartingExperienceLib_gt_TargetDummyDies = TriggerCreate("MimicStartingExperienceLib_gt_TargetDummyDies_Func");
    TriggerAddEventUnitDied(MimicStartingExperienceLib_gt_TargetDummyDies, UnitRefFromVariable("MimicStartingExperienceLib_gv_targetDummyUnit"));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Query Dialog Choice Made
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_QueryDialogChoiceMade_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventCustomDialogResult() == libNtve_ge_CustomDialogResult_c_customDialogResultYes)) {
        MimicStartingExperienceLib_gv_queryDialogResult = MimicStartingExperienceLib_ge_QueryDialogResult_Yes;
    }
    else {
        MimicStartingExperienceLib_gv_queryDialogResult = MimicStartingExperienceLib_ge_QueryDialogResult_No;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_QueryDialogChoiceMade_Init () {
    MimicStartingExperienceLib_gt_QueryDialogChoiceMade = TriggerCreate("MimicStartingExperienceLib_gt_QueryDialogChoiceMade_Func");
    TriggerAddEventCustomDialogDismissed(MimicStartingExperienceLib_gt_QueryDialogChoiceMade, c_playerAny, libNtve_ge_CustomDialogResult_c_customDialogResultAny);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tutorial Hero Selected
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_gt_TutorialHeroSelected_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int autoB37FBF04_val;

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    autoB37FBF04_val = EventDialogControl();
    if (autoB37FBF04_val == MimicStartingExperienceLib_gv_tutorialHeroBtnJaina) {
        MimicStartingExperienceLib_gv_tutorialHero = "Jaina";
    }
    else if (autoB37FBF04_val == MimicStartingExperienceLib_gv_tutorialHeroBtnMuradin) {
        MimicStartingExperienceLib_gv_tutorialHero = "Muradin";
    }
    else if (autoB37FBF04_val == MimicStartingExperienceLib_gv_tutorialHeroBtnTyrande) {
        MimicStartingExperienceLib_gv_tutorialHero = "Tyrande";
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void MimicStartingExperienceLib_gt_TutorialHeroSelected_Init () {
    MimicStartingExperienceLib_gt_TutorialHeroSelected = TriggerCreate("MimicStartingExperienceLib_gt_TutorialHeroSelected_Func");
    TriggerEnable(MimicStartingExperienceLib_gt_TutorialHeroSelected, false);
    TriggerAddEventDialogControl(MimicStartingExperienceLib_gt_TutorialHeroSelected, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

void MimicStartingExperienceLib_InitTriggers () {
    MimicStartingExperienceLib_gt_IncludeStartingExperience_Init();
    MimicStartingExperienceLib_gt_SE_VOPausedMessageClosed_Init();
    MimicStartingExperienceLib_gt_SEMMHideHeroes_Init();
    MimicStartingExperienceLib_gt_TrainingModeInit_Init();
    MimicStartingExperienceLib_gt_TrainingModeBankInit_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTalentsReady_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTalentsSuggestToOpenPanelQ_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPanelOpened_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPanelFlashTalents_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPicked_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTalentsPickedTransmissionQ_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTalentStart_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeReferenceCardDisplay_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTipInitData_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTipAbilities_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTipAbilitiesQWERUsed_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTipAmmunition1_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTipBushes_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTipCore_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTipDeath1_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTipDeath2_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTipExperience_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTipForts_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTipGates_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTipHearthstoneHealingFountainMana_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTipHearthstoneTeachingExpires_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTipManaTeachingExpires_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTipHearthstoneUnhighlightButton_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTipHealingFountainUsed_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTipHealingFountainDrinking_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTipMercCamps_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTipMount_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTipMountUnhighlightButton_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTipSpacebar_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTipTalents_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTipTalentsPanelOpened_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTipTalentsPanelClosed_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTipWatchTower_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTipDebugEnable_Init();
    MimicStartingExperienceLib_gt_SE_TrainingModeTipDebugModeOnOff_Init();
    MimicStartingExperienceLib_gt_DebugEncounter_Init();
    MimicStartingExperienceLib_gt_DPSCheat_Init();
    MimicStartingExperienceLib_gt_PlayerHitsRetryDuringDPSMeterObjective_Init();
    MimicStartingExperienceLib_gt_ObjectiveTalentCreate_Init();
    MimicStartingExperienceLib_gt_ObjectiveTalentComplete_Init();
    MimicStartingExperienceLib_gt_ObjectiveChallengeReadyCreate_Init();
    MimicStartingExperienceLib_gt_ObjectiveChallengeReadyComplete_Init();
    MimicStartingExperienceLib_gt_ObjectiveTargetDummyCreate_Init();
    MimicStartingExperienceLib_gt_ObjectiveTargetDummyComplete_Init();
    MimicStartingExperienceLib_gt_ObjectiveTargetDummyFail_Init();
    MimicStartingExperienceLib_gt_ObjectiveGraveGolemFightCreate_Init();
    MimicStartingExperienceLib_gt_ObjectiveGraveGolemFightComplete_Init();
    MimicStartingExperienceLib_gt_ObjectiveGraveGolemFightFail_Init();
    MimicStartingExperienceLib_gt_ObjectiveMoshPitFightCreate_Init();
    MimicStartingExperienceLib_gt_ObjectiveMoshPitFightComplete_Init();
    MimicStartingExperienceLib_gt_ObjectiveMoshPitFightFail_Init();
    MimicStartingExperienceLib_gt_ObjectiveBossFightCreate2_Init();
    MimicStartingExperienceLib_gt_ObjectiveBossFightComplete12_Init();
    MimicStartingExperienceLib_gt_ObjectiveBossFightComplete3_Init();
    MimicStartingExperienceLib_gt_ObjectiveBossFightComplete4_Init();
    MimicStartingExperienceLib_gt_ObjectiveRoamingCreate_Init();
    MimicStartingExperienceLib_gt_ObjectiveRoamingComplete_Init();
    MimicStartingExperienceLib_gt_ObjectiveRoamingFail_Init();
    MimicStartingExperienceLib_gt_ObjectiveBossFightCreate3_Init();
    MimicStartingExperienceLib_gt_ObjectiveBossFightComplete5_Init();
    MimicStartingExperienceLib_gt_ObjectiveBossFightComplete11_Init();
    MimicStartingExperienceLib_gt_ObjectiveBossFightComplete6_Init();
    MimicStartingExperienceLib_gt_ObjectiveBossFightCreate5_Init();
    MimicStartingExperienceLib_gt_ObjectiveBossFightComplete9_Init();
    MimicStartingExperienceLib_gt_ObjectiveBossFightComplete10_Init();
    MimicStartingExperienceLib_gt_ObjectiveBossFightCreate4_Init();
    MimicStartingExperienceLib_gt_ObjectiveBossFightComplete7_Init();
    MimicStartingExperienceLib_gt_ObjectiveBossFightComplete8_Init();
    MimicStartingExperienceLib_gt_PlayerHitsReady_Init();
    MimicStartingExperienceLib_gt_PlayerHitsRespec_Init();
    MimicStartingExperienceLib_gt_PlayerHitsRetry_Init();
    MimicStartingExperienceLib_gt_TutorialVeteranPanelInitialize_Init();
    MimicStartingExperienceLib_gt_TutorialVeteranFlashRespecButtonInternal_Init();
    MimicStartingExperienceLib_gt_TargetDummyInitialize_Init();
    MimicStartingExperienceLib_gt_TargetDummyTakesDamage_Init();
    MimicStartingExperienceLib_gt_TargetDummyDies_Init();
    MimicStartingExperienceLib_gt_QueryDialogChoiceMade_Init();
    MimicStartingExperienceLib_gt_TutorialHeroSelected_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool MimicStartingExperienceLib_InitLib_completed = false;

void MimicStartingExperienceLib_InitLib () {
    if (MimicStartingExperienceLib_InitLib_completed) {
        return;
    }

    MimicStartingExperienceLib_InitLib_completed = true;

    MimicStartingExperienceLib_InitLibraries();
    MimicStartingExperienceLib_InitVariables();
    MimicStartingExperienceLib_InitTriggers();
	UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringToText("StartingExperienceLib Mimic Lib Initialized"));
}

include "TriggerLibs/HeroesLib"
include "TriggerLibs/GameLib"
include "TriggerLibs/MapMechanicsLib"
include "TriggerLibs/UILib"

