include "TriggerLibs/HeroesLib_h"

//--------------------------------------------------------------------------------------------------
// Library: Maps
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int MimicMapMechanicsLib_ge_JungleCampDefenderTypes_Custom = 0;
const int MimicMapMechanicsLib_ge_JungleCampDefenderTypes_SiegeGiants = 1;
const int MimicMapMechanicsLib_ge_JungleCampDefenderTypes_Knights = 2;
const int MimicMapMechanicsLib_ge_JungleCampDefenderTypes_GraveGolem = 3;
const int MimicMapMechanicsLib_ge_JungleCampDefenderTypes_Doubloons = 4;
const int MimicMapMechanicsLib_ge_JungleCampDefenderTypes_SiegeCamp1 = 5;
const int MimicMapMechanicsLib_ge_JungleCampDefenderTypes_SiegeCamp2 = 6;
const int MimicMapMechanicsLib_ge_JungleCampDefenderTypes_SiegeCamp3 = 7;
const int MimicMapMechanicsLib_ge_JungleCampDefenderTypes_BruiserCamp1 = 8;
const int MimicMapMechanicsLib_ge_JungleCampDefenderTypes_BruiserCamp2 = 9;
const int MimicMapMechanicsLib_ge_JungleCampDefenderTypes_BruiserCamp3 = 10;
const int MimicMapMechanicsLib_ge_JungleCampDefenderTypes_BossCamp1 = 11;
const int MimicMapMechanicsLib_ge_JungleCampDefenderTypes_BossCamp2 = 12;
const int MimicMapMechanicsLib_ge_JungleCampDefenderTypes_BossCamp3 = 13;
const int MimicMapMechanicsLib_ge_JungleCampMercTypes_Custom = 0;
const int MimicMapMechanicsLib_ge_JungleCampMercTypes_SiegeGiants = 1;
const int MimicMapMechanicsLib_ge_JungleCampMercTypes_Ogres = 2;
const int MimicMapMechanicsLib_ge_JungleCampMercTypes_GraveGolem = 3;
const int MimicMapMechanicsLib_ge_JungleCampMercTypes_AshenvaleAncients = 4;
const int MimicMapMechanicsLib_ge_JungleCampMercTypes_SiegeCamp1 = 5;
const int MimicMapMechanicsLib_ge_JungleCampMercTypes_SiegeCamp2 = 6;
const int MimicMapMechanicsLib_ge_JungleCampMercTypes_SiegeCamp3 = 7;
const int MimicMapMechanicsLib_ge_JungleCampMercTypes_BruiserCamp1 = 8;
const int MimicMapMechanicsLib_ge_JungleCampMercTypes_BruiserCamp2 = 9;
const int MimicMapMechanicsLib_ge_JungleCampMercTypes_BruiserCamp3 = 10;
const int MimicMapMechanicsLib_ge_JungleCampMercTypes_BossCamp1 = 11;
const int MimicMapMechanicsLib_ge_JungleCampMercTypes_BossCamp2 = 12;
const int MimicMapMechanicsLib_ge_JungleCampMercTypes_BossCamp3 = 13;
const int MimicMapMechanicsLib_ge_JungleCampTypes_MercCamp = 0;
const int MimicMapMechanicsLib_ge_JungleCampTypes_DoubloonCamp = 1;
const int MimicMapMechanicsLib_ge_JungleCampTypes_DoubloonSmallCamp = 2;
const int MimicMapMechanicsLib_ge_JungleCampTypes_AshenvaleForestGuardians = 3;
const int MimicMapMechanicsLib_ge_JungleCampTypes_TryMeCamp = 4;
const int MimicMapMechanicsLib_ge_JungleCampTypes_Custom1 = 5;
const int MimicMapMechanicsLib_ge_JungleCampTypes_Custom2 = 6;
const int MimicMapMechanicsLib_ge_JungleCampTypes_Custom3 = 7;
const int MimicMapMechanicsLib_ge_JungleCampStates_Idle = 0;
const int MimicMapMechanicsLib_ge_JungleCampStates_Busy = 1;
const int MimicMapMechanicsLib_ge_JungleCampStates_Dead = 2;
const int MimicMapMechanicsLib_ge_JungleCampStates_Paused = 3;
const int MimicMapMechanicsLib_ge_JungleCampStates_Hibernating = 4;
const int MimicMapMechanicsLib_ge_JungleCampStates_HibernatingReadyToRespawn = 5;
string MimicMapMechanicsLib_ge_JungleCampStates_Ident (int lp_val);
const int MimicMapMechanicsLib_ge_MapMechanicAnnouncementAllyOptions_Neutral = 0;
const int MimicMapMechanicsLib_ge_MapMechanicAnnouncementAllyOptions_Ally = 1;
const int MimicMapMechanicsLib_ge_MapMechanicAnnouncementAllyOptions_Enemy = 2;
const int MimicMapMechanicsLib_ge_MapMechanicAnnouncementAllyOptions_AllySmall = 3;
const int MimicMapMechanicsLib_ge_MMRavenCurseState_Starting = 0;
const int MimicMapMechanicsLib_ge_MMRavenCurseState_TributeSpawning = 1;
const int MimicMapMechanicsLib_ge_MMRavenCurseState_TributeSpawned = 2;
const int MimicMapMechanicsLib_ge_MMRavenCurseState_NoActivity = 3;
const int MimicMapMechanicsLib_ge_MMRavenCurseState_Cursed = 4;
const int MimicMapMechanicsLib_ge_MMRavenCurseState_Lifted = 5;
const int MimicMapMechanicsLib_ge_MMGardensDragonState_Idle = 0;
const int MimicMapMechanicsLib_ge_MMGardensDragonState_ObelisksWarning = 1;
const int MimicMapMechanicsLib_ge_MMGardensDragonState_ObelisksAvailable = 2;
const int MimicMapMechanicsLib_ge_MMGardensDragonState_DragonRampaging = 3;

// Constants
const fixed MimicMapMechanicsLib_gv_bALJungleBirthDelay = 3.0;
const fixed MimicMapMechanicsLib_gv_bALJungleCampCaptureTime = 1.5;
const fixed MimicMapMechanicsLib_gv_bALJungleCampCaptureRadius = 3.0;
const int MimicMapMechanicsLib_gv_dataJungleMaxNumberOfDefenderTypes = 15;
const int MimicMapMechanicsLib_gv_dataJungleMaxNumberOfDefendersPerCamp = 10;
const int MimicMapMechanicsLib_gv_dataJungleMaxNumberOfMercTypes = 15;
const int MimicMapMechanicsLib_gv_dataJungleMaxNumberOfMercsSpawned = 10;
const int MimicMapMechanicsLib_gv_dataJungleMaxNumberOfPaths = 6;
const int MimicMapMechanicsLib_gv_jungleMaxCamps = 15;
const int MimicMapMechanicsLib_gv_jungleMaxMercGroups = 30;
const int MimicMapMechanicsLib_gv_mapMechanicsMaxCount_C = 4;
const int MimicMapMechanicsLib_gv_mMRepulseRegionPunchTargetMax_C = 4;
const string MimicMapMechanicsLib_gv_mMRavenMechanicName_C = "CursedHollow";
const int MimicMapMechanicsLib_gv_mMRavenTributeSpawnPointsCountMax_C = 50;
const fixed MimicMapMechanicsLib_gv_mMRavenRevealRadius_C = 4.5;
const fixed MimicMapMechanicsLib_gv_mMRavenSpawnWarningTimerTime_C = 30.0;
const fixed MimicMapMechanicsLib_gv_mMRavenTributeSpawnTimeFirst_C = 17.0;
const fixed MimicMapMechanicsLib_gv_mMRavenTributeSpawnTime_C = 70.0;
const int MimicMapMechanicsLib_gv_mMRavenTributeThreshold_C = 3;
const fixed MimicMapMechanicsLib_gv_mMRavenCurseDuration_C = 70.0;
const string MimicMapMechanicsLib_gv_mMGardensDragonMechanicName_C = "DragonShire";
const int MimicMapMechanicsLib_gv_mMGardensDragonDragonTowerObeliskCount_C = 2;
const int MimicMapMechanicsLib_gv_mMGardensDragonDragonTowerMaxCount = 10;
const fixed MimicMapMechanicsLib_gv_mMGardensDragonWarningTime_C = 30.0;
const fixed MimicMapMechanicsLib_gv_mMGardensDragonDragonTowerStartTime_C = 60.0;
const fixed MimicMapMechanicsLib_gv_mMGardensDragonDragonTowerRespawnTime_C = 90.0;
const fixed MimicMapMechanicsLib_gv_mMGardensDragonDragonKnightStartingTime_C = 55.0;
const fixed MimicMapMechanicsLib_gv_mMGardensDragonDragonTowerCaptureTime_C = 4.0;
const fixed MimicMapMechanicsLib_gv_mMGardensDragonDragonTowerOverCaptureTime_C = 0.0;
const fixed MimicMapMechanicsLib_gv_mMGardensDragonDragonballTowerCaptureRadius_C = 4.0;
const fixed MimicMapMechanicsLib_gv_mMGardensDragonDragonStatueReminderTimerTime_C = 15.0;
const fixed MimicMapMechanicsLib_gv_mMGardensDragonDragonStatueChannelTime_C = 3.0;
const fixed MimicMapMechanicsLib_gv_mMGardensDragonDragonStatueHelperTextTagHeightOffset_C = -2.5;
const int MimicMapMechanicsLib_gv_vehicle_MaxNumberOfVehicles_C = 30;

// Structures
struct MimicMapMechanicsLib_gs_JungleCampDefenderData {
    bool lv_campIsSoloable;
    bool lv_defendersCoweronDeath;
    bool[MimicMapMechanicsLib_gv_dataJungleMaxNumberOfDefendersPerCamp + 1] lv_defenderCoweringUnit;
    fixed lv_initialSpawnDelay;
    fixed lv_respawnTime;
    int lv_numberOfCreeps;
    text lv_campTypeMinimapTitleLabel;
    text lv_campTypeMinimapLabel;
    text lv_customTextTagTitle;
    text lv_customTextTagInfoText;
    string[MimicMapMechanicsLib_gv_dataJungleMaxNumberOfDefendersPerCamp + 1] lv_creepUnitTypes;
    fixed lv_xPAwardForCapture;
    int lv_numberOfRanks;
    int[libCore_gv_dataScalingMaxScalingTicks + 1] lv_campLevel;
};

struct MimicMapMechanicsLib_gs_JungleCampPathData {
    region lv_townRegion;
    point lv_waypoint;
};

struct MimicMapMechanicsLib_gs_JungleCampMercData {
    int lv_numberOfMinionsSpawned;
    string[MimicMapMechanicsLib_gv_dataJungleMaxNumberOfMercsSpawned + 1] lv_spawnedMinionUnitTypes;
    int lv_numberOfRanks;
};

struct MimicMapMechanicsLib_gs_JungleCreepCamps {
    int lv_mapDataCampType;
    int lv_mapDataCampDefenderType;
    point lv_mapDataCampCaptainSpawnPoint;
    point[MimicMapMechanicsLib_gv_dataJungleMaxNumberOfDefendersPerCamp + 1] lv_mapDataDefenderSpawnPoints;
    region lv_mapDataDefenderLeashRegion;
    string lv_mapDataCapturePointSplatModel;
    string lv_mapDataMinimapIcon;
    fixed lv_mapDataMinimapIconScale;
    bool lv_mapDataMinimapIconUseTeamColor;
    int lv_mapDataMercSpawnType;
    int lv_mapDataBattleshipSpawnType;
    unit lv_mapDataCampBuildingBuilding;
    bool lv_defenderCampIsSoloable;
    bool lv_defenderCampInstantlyGrantsReward;
    int lv_defenderNumberofCreeps;
    string[MimicMapMechanicsLib_gv_dataJungleMaxNumberOfDefendersPerCamp + 1] lv_defenderUnitTypes;
    fixed lv_defenderInitialSpawnDelay;
    fixed lv_defenderRespawnTime;
    int lv_defenderNumberOfRanks;
    int[libCore_gv_dataScalingMaxScalingTicks + 1] lv_defenderCampLevel;
    fixed lv_defenderCaptureXPValue;
    bool lv_defenderDefendersCoweronDeath;
    bool lv_defenderSuppressActiveLanerCounter;
    text lv_defenderCampTypeMinimapTitle;
    text lv_defenderCampTypeMinimapLabel;
    bool lv_defenderDefendersHaveStaggeredBirth;
    fixed lv_defenderDefendersStaggeredBirthPeriod;
    bool[MimicMapMechanicsLib_gv_dataJungleMaxNumberOfDefendersPerCamp + 1] lv_defenderCoweringUnit;
    unitgroup lv_defenderCoweringLivingUnitGroup;
    unitgroup lv_defenderCoweringDeadUnitGroup;
    unitgroup lv_defenderUnitGroup;
    bool lv_defenderDamagesCoreOnCapture;
    int lv_defenderDefendersBribedCount;
    int lv_mercNumberOfMinionsSpawned;
    string[MimicMapMechanicsLib_gv_dataJungleMaxNumberOfMercsSpawned + 1] lv_mercSpawnedMinionUnitType;
    int lv_mercNumberOfRanks;
    bool[libCore_gv_bALMaxTeams + 1] lv_mercMercCampHasSingleWaypoint;
    MimicMapMechanicsLib_gs_JungleCampPathData[MimicMapMechanicsLib_gv_dataJungleMaxNumberOfPaths + 1] lv_mercOrderMercCampPathing;
    MimicMapMechanicsLib_gs_JungleCampPathData[MimicMapMechanicsLib_gv_dataJungleMaxNumberOfPaths + 1] lv_mercChaosMercCampPathing;
    bool lv_mercCampHibernateswhenmatchingcampsareactive;
    int[libCore_gv_bALMaxTeams + 1] lv_mercLaneToSpawnIn;
    int[libCore_gv_bALMaxTeams + 1] lv_mercLaneLastSpawnedIn;
    int[libCore_gv_bALMaxTeams + 1] lv_mercSpawnFirstWaypointIndex;
    int lv_piratesNumberOfRanks;
    unit lv_campIconUnit;
    unit lv_campOwnershipFlagUnit;
    int lv_campHelperTextTagOrder;
    int lv_campHelperTextTagChaos;
    int lv_capturingPlayer;
    bool lv_campAwardsRegenGlobe;
    bool lv_stateIsEnabled;
    bool lv_statePersonalHiberationisEnabled;
    timer lv_stateCreepBirthTimer;
    timer lv_stateCreepRespawnTimer;
    timer lv_stateCreepActiveTimer;
    int lv_stateCurrentDefenderScalingTicks;
    int lv_stateCurrentMercScalingTicks;
    bool lv_stateHasSpawned;
    int lv_aIState;
    int lv_aIDefenderAIIndex;
    string lv_aICampGoalLink;
    region lv_captureCaptureRegion;
    unit lv_captureCircleOfPowerUnit;
    bool lv_captureCaptureEnabled;
    int lv_captureCaptureCounter;
    int lv_captureCapturePointIndex;
    int lv_statTrackingOrderCaptures;
    int lv_statTrackingChaosCaptures;
    fixed lv_statTrackingDamageDoneByLastCapture;
};

struct MimicMapMechanicsLib_gs_MapMechanicUsedTracker {
    bool lv_healingFountainUsed;
    bool lv_dragonShrine;
    bool lv_dragonStatue;
    bool lv_minesEntrance;
    bool lv_minesExit;
    bool lv_ravenTribute;
};

struct MimicMapMechanicsLib_gs_RavenCurseTeamStats {
    int lv_triburteCollected;
    bool lv_cursed;
};

struct MimicMapMechanicsLib_gs_MMGardensDragonDragonballTowers {
    unit lv_shrineUnit;
    region lv_captureRegion;
    bool lv_enabled;
    int lv_captureBeaconIndex;
    int lv_helperText;
    unit lv_shrineBeamTargetUnit;
};

struct MimicMapMechanicsLib_gs_Vehicle {
    unit lv_unit_Vehicle;
    unit lv_unit_UnitInsideVehicle;
    unit lv_unit_LinkedVehicle;
    int lv_player_PlayerControllingVehicle;
};

// Variable Declarations
fixed MimicMapMechanicsLib_gv_bALJungleLeashRespawnTime;
fixed MimicMapMechanicsLib_gv_bALJungleCampScalingTimerDuration;
fixed MimicMapMechanicsLib_gv_bALJungleOgreMageAuraAbilityPowerPercentage;
fixed MimicMapMechanicsLib_gv_genericMercCampInitialSpawnDelay_C;
fixed MimicMapMechanicsLib_gv_genericMercBossCampInitialSpawnDelay_C;
fixed MimicMapMechanicsLib_gv_mercSapperDefaultSpawnTime_C;
fixed MimicMapMechanicsLib_gv_mercSapperDefaultRespawnTime_C;
MimicMapMechanicsLib_gs_JungleCampDefenderData[MimicMapMechanicsLib_gv_dataJungleMaxNumberOfDefenderTypes + 1] MimicMapMechanicsLib_gv_dataJungleCampDefenderData;
MimicMapMechanicsLib_gs_JungleCampMercData[MimicMapMechanicsLib_gv_dataJungleMaxNumberOfMercTypes + 1] MimicMapMechanicsLib_gv_dataJungleCampMercData;
bool MimicMapMechanicsLib_gv_jungleCreepCampsInitialized;
int MimicMapMechanicsLib_gv_jungleCreepCampsCurrentCallbackIndex;
MimicMapMechanicsLib_gs_JungleCreepCamps[MimicMapMechanicsLib_gv_jungleMaxCamps + 1] MimicMapMechanicsLib_gv_jungleCreepCamps;
int MimicMapMechanicsLib_gv_jungleNumberOfCreepCamps;
int MimicMapMechanicsLib_gv_jungleNumberOfActiveMercGroups;
unitgroup[MimicMapMechanicsLib_gv_jungleMaxMercGroups + 1] MimicMapMechanicsLib_gv_jungleMiniMapIconGroup;
unit[MimicMapMechanicsLib_gv_jungleMaxMercGroups + 1] MimicMapMechanicsLib_gv_jungleMiniMapLeader;
int[MimicMapMechanicsLib_gv_jungleMaxMercGroups + 1] MimicMapMechanicsLib_gv_jungleMiniMapPath;
int[MimicMapMechanicsLib_gv_jungleMaxMercGroups + 1] MimicMapMechanicsLib_gv_jungleMiniMapPathCurrentIndex;
int[MimicMapMechanicsLib_gv_jungleMaxMercGroups + 1] MimicMapMechanicsLib_gv_jungleMiniMapPathIndexMaximum;
text[MimicMapMechanicsLib_gv_jungleMaxCamps + 1][MimicMapMechanicsLib_gv_jungleMaxCamps + 1] MimicMapMechanicsLib_gv_jungleCreepCampTextTagText;
bool MimicMapMechanicsLib_gv_jungleAllCampsShouldBeHibernating;
string[MimicMapMechanicsLib_gv_mapMechanicsMaxCount_C + 1] MimicMapMechanicsLib_gv_mapMechanics;
actor MimicMapMechanicsLib_gv_mapMechanicControllerActor;
int MimicMapMechanicsLib_gv_mapMechanicsCount;
trigger[MimicMapMechanicsLib_gv_mapMechanicsMaxCount_C + 1] MimicMapMechanicsLib_gv_mapMechanicsInitCallbacks;
text MimicMapMechanicsLib_gv_mapMechanicsObserverCountLabelText;
MimicMapMechanicsLib_gs_MapMechanicUsedTracker[libCore_gv_bALMaxPlayers + 1] MimicMapMechanicsLib_gv_mapMechanicUsedTracker;
int[libCore_gv_bALMaxEnginePlayerCount + 1] MimicMapMechanicsLib_gv_mMIntroCutscene;
int MimicMapMechanicsLib_gv_mMIntroCutscenePlayer;
bool[libCore_gv_bALMaxEnginePlayerCount + 1] MimicMapMechanicsLib_gv_mMIntroCutsceneCompleted;
bool[libCore_gv_bALMaxEnginePlayerCount + 1] MimicMapMechanicsLib_gv_mMIntroCutsceneFinished;
int MimicMapMechanicsLib_gv_mMAnnouncementDialog;
int[libCore_gv_bALMaxEnginePlayerCount + 1] MimicMapMechanicsLib_gv_mMAnnouncementDialogsMultiple;
bool[6] MimicMapMechanicsLib_gv_mMRunConversationDone;
int MimicMapMechanicsLib_gv_mMRunConversationDoneCount;
region[libCore_gv_bALMaxTeams + 1] MimicMapMechanicsLib_gv_mMRepulseRegions;
point[libCore_gv_bALMaxTeams + 1][MimicMapMechanicsLib_gv_mMRepulseRegionPunchTargetMax_C + 1] MimicMapMechanicsLib_gv_mMRepulseRegionPunchTarget;
unitgroup MimicMapMechanicsLib_gv_mMRepulseRegionPunchedGroup;
region[libCore_gv_bALMaxTeams + 1] MimicMapMechanicsLib_gv_mMSafeRegions;
int MimicMapMechanicsLib_gv_countOfMMAIUnits;
trigger MimicMapMechanicsLib_gv_mMEnableMapEventTrigger;
trigger MimicMapMechanicsLib_gv_mMDisableMapEventTrigger;
bool MimicMapMechanicsLib_gv_mMMapMechanicDisabled;
bool MimicMapMechanicsLib_gv_mMMapEventHasOccured;
MimicMapMechanicsLib_gs_RavenCurseTeamStats[libCore_gv_bALMaxTeams + 1] MimicMapMechanicsLib_gv_mMRavenTeamStats;
point[MimicMapMechanicsLib_gv_mMRavenTributeSpawnPointsCountMax_C + 1] MimicMapMechanicsLib_gv_mMRavenTributeSpawnPoints;
point MimicMapMechanicsLib_gv_mMRavenTributeNextSpawnPoint;
int MimicMapMechanicsLib_gv_mMRavenTributeSpawnPointsCount;
bool MimicMapMechanicsLib_gv_mMRavenUseManualTributeSpawns;
revealer MimicMapMechanicsLib_gv_mMRavenOrderRevealer;
revealer MimicMapMechanicsLib_gv_mMRavenChaosRevealer;
unitgroup MimicMapMechanicsLib_gv_mMRavenTributes;
unitgroup MimicMapMechanicsLib_gv_mMRavenTributeWarnings;
unit MimicMapMechanicsLib_gv_mMRavenTributeWarning;
unit MimicMapMechanicsLib_gv_mMRavenTributePreview;
fixed MimicMapMechanicsLib_gv_mMRavenStartTime;
int MimicMapMechanicsLib_gv_mMRavenTributeSpawnTimeVariance;
fixed MimicMapMechanicsLib_gv_mMRavenTributePostCurseWaitTime;
int MimicMapMechanicsLib_gv_mMRavenTributesCollected;
timer MimicMapMechanicsLib_gv_mMRavenStartTimer;
timer MimicMapMechanicsLib_gv_mMRavenWarningTimer;
timer MimicMapMechanicsLib_gv_mMRavenTributeSpawnTimer;
bool MimicMapMechanicsLib_gv_mMRavenUseTributePreviews;
int MimicMapMechanicsLib_gv_mMRavenTributeSpawnCount;
int MimicMapMechanicsLib_gv_mMRavenLastTributeSpawnIndex1;
int MimicMapMechanicsLib_gv_mMRavenLastTributeSpawnIndex2;
int MimicMapMechanicsLib_gv_mMRavenTributeSpawnGroupIndex;
sound MimicMapMechanicsLib_gv_mMRavenSpawnSound;
fixed MimicMapMechanicsLib_gv_mMRavenFirstEventTiming;
timer MimicMapMechanicsLib_gv_mMRavenObjectivePreviewTimer;
fixed MimicMapMechanicsLib_gv_mMRavenObjectivePreviewLongDelay;
fixed MimicMapMechanicsLib_gv_mMRavenObjectivePreviewShortDelay;
timer MimicMapMechanicsLib_gv_mMRavenCurseTimer;
bool MimicMapMechanicsLib_gv_mMRavenCurseLifted;
sound MimicMapMechanicsLib_gv_mMRavenCurseSound;
fixed[libCore_gv_bALMaxPlayers + 1] MimicMapMechanicsLib_gv_siegeDamagePreCurse;
fixed[libCore_gv_bALMaxPlayers + 1] MimicMapMechanicsLib_gv_totalCurseSiegeDamage;
timer[6] MimicMapMechanicsLib_gv_mMRavenTimers;
int MimicMapMechanicsLib_gv_mMRavenTimerCount;
bool[6] MimicMapMechanicsLib_gv_mMRavenTimers3;
bool MimicMapMechanicsLib_gv_mMRavenTimers2;
bool MimicMapMechanicsLib_gv_mMRavenEventFirstTime;
text MimicMapMechanicsLib_gv_mMGardensDragonDragonballKnightNameC;
text MimicMapMechanicsLib_gv_mMGardensDragonDragonballShrineNameC;
unit MimicMapMechanicsLib_gv_mMGardensDragonTowerMoon;
unit MimicMapMechanicsLib_gv_mMGardensDragonTowerStar;
sound MimicMapMechanicsLib_gv_mMGardensDragonAmbientSound;
unit MimicMapMechanicsLib_gv_mMGardensDragonUnit;
int MimicMapMechanicsLib_gv_mMGardensDragonPlayer;
unit MimicMapMechanicsLib_gv_mMGardensDragonStatue;
int MimicMapMechanicsLib_gv_mMGardensDragonStatueTextTag;
int MimicMapMechanicsLib_gv_mMGardensDragonStatueTextTagAllyOwned;
int MimicMapMechanicsLib_gv_mMGardensDragonStatueTextTagEnemyOwned;
timer MimicMapMechanicsLib_gv_mMGardensDragonDragonKnightLifeTimer;
point MimicMapMechanicsLib_gv_mMGardensDragonDragonKnightRespawnPoint;
int MimicMapMechanicsLib_gv_mMGardensDragonCurrentState;
bool MimicMapMechanicsLib_gv_mMGardensDragonSpawnFirstTime;
timer MimicMapMechanicsLib_gv_mMGardensDragonDragonTowerStartTimer;
timer MimicMapMechanicsLib_gv_mMGardensDragonDragonTowerRespawnTimer;
timer MimicMapMechanicsLib_gv_mMGardensDragonDragonTowerWarningTimer;
timer MimicMapMechanicsLib_gv_mMGardensDragonDragonTowerGoalActivationTimer;
timer MimicMapMechanicsLib_gv_mMGardensDragonDragonStatueActiveReminderTimer;
int MimicMapMechanicsLib_gv_mMGardensDragonDragonTowerCount;
MimicMapMechanicsLib_gs_MMGardensDragonDragonballTowers[MimicMapMechanicsLib_gv_mMGardensDragonDragonTowerMaxCount + 1] MimicMapMechanicsLib_gv_mMGardensDragonDragonTowers;
actor MimicMapMechanicsLib_gv_mMGardensDragonSoundRegionActor;
region MimicMapMechanicsLib_gv_mMGardensDragonSoundRegion;
int MimicMapMechanicsLib_gv_mMGardensDragonDragonCaptures;
bool MimicMapMechanicsLib_gv_mMDragonballsTransmissionShrinesRechargeFirstTime;
MimicMapMechanicsLib_gs_Vehicle[MimicMapMechanicsLib_gv_vehicle_MaxNumberOfVehicles_C + 1] MimicMapMechanicsLib_gv_vehicle;
int MimicMapMechanicsLib_gv_vehicle_VehicleCount;

// Function Declarations
void MimicMapMechanicsLib_gf_InitializeSiegeTrooperMercType (int lp_campType, text lp_mercName);
void MimicMapMechanicsLib_gf_InitializeSummonerMercType (int lp_campType, text lp_summonerName, text lp_summonedUnitName);
void MimicMapMechanicsLib_gf_InitializeHellbatMercType (int lp_campType, text lp_mercName, fixed lp_initialSpawnDelay, fixed lp_respawnTime, bool lp_cowerOnDeath);
void MimicMapMechanicsLib_gf_InitializeSapperMercType (int lp_campType, text lp_mercName, fixed lp_initialSpawnDelay, fixed lp_respawnDelay);
void MimicMapMechanicsLib_gf_DataInitializeScalingDataForDefender (int lp_defenderType, string lp_scalingBehavior);
void MimicMapMechanicsLib_gf_DataInitializeScalingDataForMerc (int lp_mercType, string lp_scalingBehavior);
void MimicMapMechanicsLib_gf_JungleInitializeDefenderData (int lp_camp);
void MimicMapMechanicsLib_gf_JungleInitializeMercCampData (int lp_camp);
void MimicMapMechanicsLib_gf_JungleUpdateMercCampData (int lp_camp);
point MimicMapMechanicsLib_gf_JungleDetermineMercWaypoint (int lp_owningTeam, int lp_camp);
void MimicMapMechanicsLib_gf_JungleInitializeDoubloonCampData (int lp_camp);
void MimicMapMechanicsLib_gf_JungleInitializeDoubloonSmallCampData (int lp_camp);
void MimicMapMechanicsLib_gf_JungleInitializeTryMeCampData (int lp_camp);
void MimicMapMechanicsLib_gf_JungleInitializeCreepCamp (int lp_camp);
void MimicMapMechanicsLib_gf_JungleInitializeCreepCampDelayMinimapIcons (unit lp_unit, fixed lp_delayTime);
int MimicMapMechanicsLib_gf_JungleGetJungleCampForUnit (unit lp_unit);
int MimicMapMechanicsLib_gf_JungleGetJungleUnitIndexForUnit (unit lp_unit);
string MimicMapMechanicsLib_gf_JungleGetCurrentIconForJungleCamp (int lp_camp, bool lp_alive);
string MimicMapMechanicsLib_gf_JungleGetPortraitForJungleCamp (int lp_camp);
string MimicMapMechanicsLib_gf_JungleGetPortraitForUnitType (string lp_unitType);
text MimicMapMechanicsLib_gf_JungleGetNameTextForJungleCamp (int lp_camp);
unit MimicMapMechanicsLib_gf_JungleGetRandomEnemyHeroInRangeOfMinionWithMinimumRangeRequirements (unit lp_creep, point lp_position, fixed lp_minimumRange, fixed lp_maximumRange, unit lp_restrictedUnit);
int MimicMapMechanicsLib_gf_JungleGetCampIndexFromDefenderIndex (int lp_defenderIndex);
void MimicMapMechanicsLib_gf_JungleUpdateTextTagForCamp (int lp_camp);
void MimicMapMechanicsLib_gf_JungleSwitchToTextTagForCamp (int lp_camp);
void MimicMapMechanicsLib_gf_JungleUpdateMinimapTooltipForCamp (int lp_camp);
void MimicMapMechanicsLib_gf_JungleRespawnCreepsForCamp (int lp_camp);
void MimicMapMechanicsLib_gf_JungleTransitionCampIntoState (int lp_camp, int lp_state);
void MimicMapMechanicsLib_gf_JungleHibernateCampDefender (unit lp_defender);
void MimicMapMechanicsLib_gf_JungleStopHibernatingCampDefender (unit lp_defender, point lp_location);
void MimicMapMechanicsLib_gf_JungleStartHibernateCamps ();
void MimicMapMechanicsLib_gf_JungleHibernateMatchingCamps (string lp_leaderUnitType);
void MimicMapMechanicsLib_gf_JungleStopHibernateCamps ();
void MimicMapMechanicsLib_gf_JungleStopHibernateCampsByLeaderUnit (string lp_laningUnitType);
void MimicMapMechanicsLib_gf_JungleTurnOnCampCaptureBeacon (int lp_camp);
void MimicMapMechanicsLib_gf_JungleTurnOffCampCaptureBeacon (int lp_camp, int lp_owner);
void MimicMapMechanicsLib_gf_JungleTransitionCampCaptureBeacontoHidden (int lp_camp);
void MimicMapMechanicsLib_gf_JungleGrantCaptureRewards (int lp_camp, int lp_owner, bool lp_hasMercLordTalent);
void MimicMapMechanicsLib_gf_JungleMercCampCapturedAnnouncement (int lp_camp, int lp_owner);
void MimicMapMechanicsLib_gf_JungleSpawnMercMinions (int lp_camp, int lp_owner, bool lp_hasMercLordTalent);
int MimicMapMechanicsLib_gf_JungleGetMercCampForUnit (unit lp_unit);
int MimicMapMechanicsLib_gf_JungleGetMercLanerGroupForUnit (unit lp_unit);
void MimicMapMechanicsLib_gf_JungleSetMiniMapIconForMercMinions (int lp_camp, int lp_mercGroupIndex, string lp_mercUnitMiniMapModel, unitgroup lp_mercUnitGroup);
void MimicMapMechanicsLib_gf_JungleCreateMercPath (unit lp_mercLeader, bool lp_newPath);
void MimicMapMechanicsLib_gf_JungleDropLootBannerinMercCamp (int lp_campIndex, playergroup lp_creditPlayerGroup);
void MimicMapMechanicsLib_gf_JungleUpdateMercDamageTracker (int lp_camp, fixed lp_damageDealt);
void MimicMapMechanicsLib_gf_MapMechanicAdd (string lp_mechanic, trigger lp_initializeCallback);
int MimicMapMechanicsLib_gf_MapMechanicIndex (string lp_mechanic);
bool MimicMapMechanicsLib_gf_MapMechanicExistsOnMap (string lp_mechanic);
string MimicMapMechanicsLib_gf_PrimaryMapMechanic ();
void MimicMapMechanicsLib_gf_PlayMapMechanicIntroForPlayer (int lp_player, string lp_cutscene, string lp_filter);
bool MimicMapMechanicsLib_gf_MapMechanicIntroFinished (int lp_player);
void MimicMapMechanicsLib_gf_MapMechanicDisplayAnnouncement (text lp_announcement, bool lp_writeOut, fixed lp_writeOutDuration, fixed lp_duration, int lp_allyOption, playergroup lp_players);
void MimicMapMechanicsLib_gf_MapMechanicDisplayAnnouncementWait (text lp_announcement, bool lp_writeOut, fixed lp_writeOutDuration, fixed lp_duration, int lp_allyOption, playergroup lp_players, bool lp_waitOption);
void MimicMapMechanicsLib_gf_MMAnnouncementClearnup (int lp_dlg, int lp_label, fixed lp_duration, playergroup lp_players);
void MimicMapMechanicsLib_gf_MapMechanicDisplayAnnouncementMultipleAllowed (text lp_announcement, bool lp_writeOut, fixed lp_writeOutDuration, fixed lp_duration, int lp_allyOption, playergroup lp_players);
void MimicMapMechanicsLib_gf_MMAnnouncementMultiplePerPlayer (int lp_player, text lp_announcement, bool lp_writeOut, fixed lp_writeOutDuration, fixed lp_duration, int lp_allyOption);
void MimicMapMechanicsLib_gf_MapMechanicRunConversation (string lp_convoOrder, string lp_convoChaos, string lp_convoObserver);
void MimicMapMechanicsLib_gf_MMRunConversationIndividual (string lp_convo, playergroup lp_players);
void MimicMapMechanicsLib_gf_MapSetRepulseRegion (int lp_team, region lp_pulseRegion, point lp_punchTargetLocation1, point lp_punchTargetLocation2, point lp_punchTargetLocation3, point lp_punchTargetLocation4);
void MimicMapMechanicsLib_gf_MMRepulseRegionAddToPunchedGroup (unit lp_punchedUnit);
void MimicMapMechanicsLib_gf_MapSetSafeRegion (int lp_team, region lp_safeRegion);
void MimicMapMechanicsLib_gf_RestrictAbilitiesToRegionForUnit (unit lp_unit, region lp_region);
int MimicMapMechanicsLib_gf_RegisterMapMechanicAIUnitCustomValue ();
void MimicMapMechanicsLib_gf_ShareVisionofUnitForBothTeams (unit lp_tributeWarningUnit);
void MimicMapMechanicsLib_gf_CreateSnapshotOfUnitForBothTeams (unit lp_unit);
void MimicMapMechanicsLib_gf_RegisterMapEventEnableDisableTriggers (trigger lp_disableMapEventTrigger, trigger lp_enableMapEventTrigger);
void MimicMapMechanicsLib_gf_EnableDisableMapEvent (bool lp_enableOrDisable);
void MimicMapMechanicsLib_gf_MMRavenCurseAddTributeSpawnLocation (point lp_spawnLocation);
bool MimicMapMechanicsLib_gf_MMRavenCurseStarted ();
fixed MimicMapMechanicsLib_gf_MMRavenStartTime ();
fixed MimicMapMechanicsLib_gf_MMRavenTributeSpawnTime ();
int MimicMapMechanicsLib_gf_MMRavenTributeThresholdAmount ();
string MimicMapMechanicsLib_gf_MMRavenTributeUnitType ();
point MimicMapMechanicsLib_gf_MMRavenRandomSpawnPoint ();
int MimicMapMechanicsLib_gf_MMRavenSpawnPointSide (int lp_index);
void MimicMapMechanicsLib_gf_MMRavenStartSpawnTimer5090 ();
void MimicMapMechanicsLib_gf_MMRavenCreatePreviewTribute (point lp_previewLocation);
void MimicMapMechanicsLib_gf_MMRavenTributeCollectionThresholdReached (int lp_winningTeam);
void MimicMapMechanicsLib_gf_MMRavenCurseStart (int lp_cursedPlayer);
void MimicMapMechanicsLib_gf_MMRavenApplyCurseEffectOnMinion (unit lp_unit);
void MimicMapMechanicsLib_gf_MMRavenRemoveCurseEffectOnMinion (unit lp_minion);
void MimicMapMechanicsLib_gf_MMRavenPlayCurseSound (int lp_cursedTeam);
void MimicMapMechanicsLib_gf_MMRavenWaitForandPlayCurseEndWarning ();
void MimicMapMechanicsLib_gf_MMRavenObjectiveUIUpdateText ();
void MimicMapMechanicsLib_gf_PreCurseSiegeDamageCache (int lp_cursingTeam);
void MimicMapMechanicsLib_gf_CalculateCurseSiegeDamageDone (int lp_cursingTeam);
void MimicMapMechanicsLib_gf_PauseUnpauseCurseHollowTimers (bool lp_pauseUnpause);
void MimicMapMechanicsLib_gf_MMRavenTransmissionFirstEventStartQ ();
void MimicMapMechanicsLib_gf_MMRavenTransmissionRepeatEventStartQ ();
void MimicMapMechanicsLib_gf_MMRavenTransmissionCurseActiveQ (int lp_cursedTeam);
void MimicMapMechanicsLib_gf_MMRavenTransmissionCurseEndsQ ();
void MimicMapMechanicsLib_gf_MMGardensDragonInitTowers (unit lp_towerMoon, unit lp_towerStar);
void MimicMapMechanicsLib_gf_MMGardensDragonChangeDragonballTowerOwnership (int lp_dragonballTowerIndex, int lp_newOwner, playergroup lp_capturingPlayers);
void MimicMapMechanicsLib_gf_MMGardensDragonDeactivateStatue (int lp_computerPlayer);
void MimicMapMechanicsLib_gf_MMGardensDragonActivateStatueForTeam (int lp_computerPlayer);
fixed MimicMapMechanicsLib_gf_MMGardensDragonDragonDuration ();
bool MimicMapMechanicsLib_gf_MMGardensDragonObeliskFullyCaptured (unit lp_obeliskUnit);
void MimicMapMechanicsLib_gf_MMGardensDragonDragonHasEnteredArtHooks ();
void MimicMapMechanicsLib_gf_MMGardensDragonDragonHasLeftArtHooks ();
void MimicMapMechanicsLib_gf_MMDragonballsTransmissionObelisksChargingFirstQ ();
void MimicMapMechanicsLib_gf_MMDragonballsTransmissionObelisksChargingRepeatQ ();
void MimicMapMechanicsLib_gf_MMDragonballsTransmissionObelisksSpawnFirstQ ();
void MimicMapMechanicsLib_gf_MMDragonballsTransmissionObelisksSpawnRepeatQ ();
void MimicMapMechanicsLib_gf_MMDragonballsTransmissionDragonCapturableQ (int lp_activeTeam);
void MimicMapMechanicsLib_gf_MMDragonballsTransmissionDragonActiveQ (int lp_activeTeam);
void MimicMapMechanicsLib_gf_MMDragonballsTransmissionDragonExpireQ ();
void MimicMapMechanicsLib_gf_AddVehicle (unit lp_vehicleUnit);
void MimicMapMechanicsLib_gf_RemoveVehicle (unit lp_vehicleUnit);
void MimicMapMechanicsLib_gf_SwapVehicleForPlayer (unit lp_originalVehicle, unit lp_newVehicle);
void MimicMapMechanicsLib_gf_LinkVehicleToVehicle (unit lp_vehicleUnit_1, unit lp_vehicleUnit_2);
void MimicMapMechanicsLib_gf_PlayerEntersVehicle (unit lp_unitEnteringVehicle, unit lp_vehicleUnit);
void MimicMapMechanicsLib_gf_PlayerLeavesVehicle (int lp_vehicleIndex);
int MimicMapMechanicsLib_gf_GetVehicleIndexOfUnit (unit lp_vehicleUnit);

// Trigger Declarations
trigger MimicMapMechanicsLib_gt_IncludeMapMechanics;
trigger MimicMapMechanicsLib_gt_SummonerMinionLanerScaling;
trigger MimicMapMechanicsLib_gt_DataJungleCampDefenderDoubloons;
trigger MimicMapMechanicsLib_gt_DataJungleCampDefenderSiegeGiants;
trigger MimicMapMechanicsLib_gt_DataJungleCampDefenderKnights;
trigger MimicMapMechanicsLib_gt_DataJungleCampDefenderGraveGolem;
trigger MimicMapMechanicsLib_gt_DataJungleCampMercSiegeGiants;
trigger MimicMapMechanicsLib_gt_DataJungleCampMercOgres;
trigger MimicMapMechanicsLib_gt_DataJungleCampMercGraveGolem;
trigger MimicMapMechanicsLib_gt_DataJungleCampDefenderData;
trigger MimicMapMechanicsLib_gt_DataJungleCampMercData;
trigger MimicMapMechanicsLib_gt_InitializeJungleCamps;
trigger MimicMapMechanicsLib_gt_StartJungleCampTimers;
trigger MimicMapMechanicsLib_gt_JungleCreepCampRespawnTimerExpires;
trigger MimicMapMechanicsLib_gt_JungleRespawnTimerTextTagCountdown;
trigger MimicMapMechanicsLib_gt_JungleDefendersBeginFighting;
trigger MimicMapMechanicsLib_gt_JungleDefendersEndFighting;
trigger MimicMapMechanicsLib_gt_JungleAllDefendersKilled;
trigger MimicMapMechanicsLib_gt_JungleHibernateCampsStart;
trigger MimicMapMechanicsLib_gt_JungleHibernateCampsEnd;
trigger MimicMapMechanicsLib_gt_JungleHibernateDefendersThatLeash;
trigger MimicMapMechanicsLib_gt_JungleHibernateDefendersThatJustSpawned;
trigger MimicMapMechanicsLib_gt_JungleCampOwnershipChange;
trigger MimicMapMechanicsLib_gt_JungleMercLeaderDies;
trigger MimicMapMechanicsLib_gt_JungleMercOgreShieldUsedOgre;
trigger MimicMapMechanicsLib_gt_JungleMercOgreShieldUsedHero;
trigger MimicMapMechanicsLib_gt_JungleMercDamageDetection;
trigger MimicMapMechanicsLib_gt_JungleSiegeGiantTaunt;
trigger MimicMapMechanicsLib_gt_InitializeMapMechanics;
trigger MimicMapMechanicsLib_gt_MMHelpbuttonClicked;
trigger MimicMapMechanicsLib_gt_MMIntroCutsceneStart;
trigger MimicMapMechanicsLib_gt_MMIntroCutsceneEnd;
trigger MimicMapMechanicsLib_gt_MMIntroSkippable;
trigger MimicMapMechanicsLib_gt_MMRepulseRegionPunchBehavior;
trigger MimicMapMechanicsLib_gt_MMSafeRegionBehavior;
trigger MimicMapMechanicsLib_gt_MMRemoveStackingCoreShieldMechanic;
trigger MimicMapMechanicsLib_gt_EnableDisableMapEvent;
trigger MimicMapMechanicsLib_gt_MMRavenCurseInit;
trigger MimicMapMechanicsLib_gt_MMRavenCurseGateOpen;
trigger MimicMapMechanicsLib_gt_MMRavenStartSpawning;
trigger MimicMapMechanicsLib_gt_MMRavenSpawnTribute;
trigger MimicMapMechanicsLib_gt_MMRavenObjectivePreviewTimerExpires;
trigger MimicMapMechanicsLib_gt_MMRavenTributeCollectStarted;
trigger MimicMapMechanicsLib_gt_MMRavenTributeCollectCanceled;
trigger MimicMapMechanicsLib_gt_MMRavenTributeCollectInterrupted;
trigger MimicMapMechanicsLib_gt_MMRavenTributeObtained;
trigger MimicMapMechanicsLib_gt_MMRavenCurseStartLightTransition;
trigger MimicMapMechanicsLib_gt_MMRavenCurseFinished;
trigger MimicMapMechanicsLib_gt_MMRavenObjectiveUIHandler;
trigger MimicMapMechanicsLib_gt_MMRavenDisableEvent;
trigger MimicMapMechanicsLib_gt_MMRavenEnableEvent;
trigger MimicMapMechanicsLib_gt_MMRavenDebugStartWarning;
trigger MimicMapMechanicsLib_gt_MMRavenDebugStartElunees;
trigger MimicMapMechanicsLib_gt_MMRavenDebugStartNexten;
trigger MimicMapMechanicsLib_gt_MMRavenDebugStartCurseec;
trigger MimicMapMechanicsLib_gt_CalculateCurseSiegeDamageDone;
trigger MimicMapMechanicsLib_gt_MMGardensDragonInit;
trigger MimicMapMechanicsLib_gt_MMGardensDragonGateOpen;
trigger MimicMapMechanicsLib_gt_MMGardensDragonWarningTimerStart;
trigger MimicMapMechanicsLib_gt_MMGardensDragonTowerGoalActivationTimerExpires;
trigger MimicMapMechanicsLib_gt_MMGardensDragonWarningTimerExpires;
trigger MimicMapMechanicsLib_gt_MMGardensDragonDragonEventStarts;
trigger MimicMapMechanicsLib_gt_MMGardensDragonDragonEventEnds;
trigger MimicMapMechanicsLib_gt_MMGardensDragonTurnOnDragonTowersFirstTime;
trigger MimicMapMechanicsLib_gt_MMGardensDragonTurnOnDragonTowersAgain;
trigger MimicMapMechanicsLib_gt_MMGardensDragonDragonTowerChangeOwnershipEventFires;
trigger MimicMapMechanicsLib_gt_MMGardensDragonDragonTowerCheckObeliskStatus;
trigger MimicMapMechanicsLib_gt_MMGardensDragonTransformChannelStart;
trigger MimicMapMechanicsLib_gt_MMGardensDragonTransformChannelFinish;
trigger MimicMapMechanicsLib_gt_MMGardensDragonTakeDragonReminderTimerExpires;
trigger MimicMapMechanicsLib_gt_MMGardensDragonDragonKnightDiesorExpires;
trigger MimicMapMechanicsLib_gt_MMGardensDragonObjectiveUIHandler;
trigger MimicMapMechanicsLib_gt_MMGardensDragonDisableEvent;
trigger MimicMapMechanicsLib_gt_MMGardensDragonDebugCheatStartObelisksso;
trigger MimicMapMechanicsLib_gt_MMGardensDragonCreateDragon;
trigger MimicMapMechanicsLib_gt_MMGardensDragonExtendLife;
trigger MimicMapMechanicsLib_gt_DEBUGAddVehicle;
trigger MimicMapMechanicsLib_gt_DEBUGRemoveVehicle;
trigger MimicMapMechanicsLib_gt_DEBUGLinkVehicle;

// Library Initialization
void MimicMapMechanicsLib_InitVariables ();

